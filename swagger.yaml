swagger: '2.0'
info:
  title: Fortifi API
  version: '3.17.1'
  termsOfService: 'http://fortifi.io/legal/terms/api'
  description: >
    The second version of the Fortifi API is an exciting step forward towards

    making it easier for businesses to have open access to their data. We created it

    so that you can improve your business flows, and interact with your customers

    and data in more innovative ways.



    Build something great!



    Once you've

    [registered your service account](http://yourdomain.fortifi.it/developers/service-accounts/) it's easy

    to start requesting and posting data to and from Fortifi.



    All endpoints are only accessible via https and are located at

    `api.fortifi.io`. For instance: you can grab a list of all your brands

    by accessing the following URL with your Access Token

    (replace ACCESS_TOKEN with your own):

    ```
      https://api.fortifi.io/v1/brands?access_token=ACCESS_TOKEN

    ```


    ## Limits

    Be nice. If you're sending too many requests too quickly, we'll send back a

    `503` error code (server unavailable).

    You are limited to 5000 requests per hour per `access_token`.



    ## Request Methods

    We do our best to have all URLs

    [RESTful](http://en.wikipedia.org/wiki/Representational_state_transfer).

    Every endpoint (URL) may support one of four different http verbs. GET

    requests fetch information about an object, POST requests create objects,

    PUT requests update objects, and finally DELETE requests will delete

    objects.



    ## Structure



    ### The Envelope

    Every response is contained by an envelope. That is, each response has a

    predictable set of keys with which you can expect to interact:

    ```json

    {
        'meta': {
            'code': 200
        },
        'data': {
            ...
        }
    }

    ```



    #### META

    The meta key is used to communicate extra information about the response to

    the developer. If all goes well, you'll only ever see a code key with

    value 200.

    However, sometimes things go wrong, and in that case you might see a

    response like:

    ```json

    {
        'meta': {
            'type': 'OAuthException',
            'code': 400,
            'message': '...'
        }
    }

    ```


    #### DATA

    The data key is the meat of the response. It may be a list or dictionary,

    but either way this is where you'll find the data you requested.

    #### JSONP

    If you're writing an AJAX application, and you'd like to wrap our response

    with a callback, all you have to do is specify a callback parameter with

    any API call:

    ```

    https://api.fortifi.io/v1/brands?access_token=ACCESS_TOKEN&callback=callbackFunction

    ```

    Would respond with:

    ```js

    callbackFunction({
        ...
    });

    ```
host: api.fortifi.io
schemes:
  - https
basePath: /v1
produces:
  - application/json
consumes:
  - application/json
externalDocs:
  description: Find out more about the Fortifi api
  url: http://developers.fortifi.io/


tags:
  - name: Marketing
  - name: Customers
  - name: Entities
  - name: Orders
  - name: Custom Properties
  - name: Configuration
  - name: Contacts
  - name: Polymers
  - name: Messenger
  - name: Products
  - name: Licence
  - name: Support
  - name: ServiceStatus
  - name: Reasons

securityDefinitions:
  OAuth:
    type: oauth2
    authorizationUrl: 'https://api.fortifi.io/oauth/authorize'
    tokenUrl: 'https://api.fortifi.io/oauth/token'
    flow: accessCode
    scopes:
      'basic': Basic Read Access
      'visitor': Read/Write On Visitors
      'advertiser': Read/Write On Advertisers
      'customer': Read/Write On Customers
      'customer.readonly': Read Only on Customers
      'entity.properties': Read/Write On Entity Properties
      'entity.config': Read/Write On Entity Configuration
      'orders': Read/Write On Orders
      'orders.readonly': Read Only On Orders
      'products': Read/Write On Products
      'entity.events': Read/Write on Events
      'payment.methods': Read/Write On Payment Methods
      'contact': Read/Write On Contacts
      'polymer.readonly': Read Polymers
      'polymer': Read/Write On Polymers
      'product.readonly': Read Product Information
      'product': Read/Write On Products
      'purchase.readonly': Read Only on purchases
      'support': Read/Write On Support
      'support.readonly': Read Only on Support
      'reasons': Read/Write On reasons
      'reasons.readonly': Read Only on reasons
      'configuration.readonly': Read only for configuration

  accessToken:
    type: apiKey
    in: query
    name: access_token

paths:
  /version:
    get:
      security:
        - OAuth:
            - basic
        - accessToken: []
      summary: Current Version
      operationId: getVersion
      description: |
        Retrieve the current version of the Fortifi api
      responses:
        200:
          description: Version
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    type: string
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  /svcauth/verify:
    post:
      summary: Verify service account / Get Access Token
      operationId: getServiceAuthToken
      description: |
        User service account credentials to retrieve an API token
      parameters:
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/ServiceAccountCredentialsPayload'
      responses:
        200:
          description: Token
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/AuthToken'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  /me:
    get:
      security:
        - OAuth:
            - basic
        - accessToken: []
      summary: Current User
      operationId: getMe
      description: |
        Retrieve information about the current connected user (you)
      responses:
        200:
          description: User Information
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/User'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  /organisation:
    get:
      security:
        - OAuth:
            - basic
        - accessToken: []
      summary: Current Organisation
      operationId: getOrganisation
      description: |
        Retrieve information about the current organisation
      responses:
        200:
          description: Organisation Information
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Organisation'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  /brands:
    get:
      security:
        - OAuth:
            - basic
        - accessToken: []
      summary: Your Brand
      operationId: getBrands
      description: |
        Retrieve a list of all the brands within your Fortifi account
      responses:
        200:
          description: Brand Information
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Brands'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  /advertisers:
    post:
      summary: Create a new advertiser
      security:
        - OAuth:
            - advertiser
        - accessToken: []
      tags:
        - marketing
      parameters:
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateAdvertiserPayload'
      responses:
        200:
          description: Advertiser Created
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Fid'
        x-400:
          description: |
            Invalid data supplied
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

    get:
      summary: List advertisers
      security:
        - OAuth:
            - advertiser
        - accessToken: []
      tags:
        - marketing
      parameters:
        - name: limit
          in: query
          description: 'Maximum number of records per page (default: 20)'
          required: false
          type: integer
        - name: page
          in: query
          description: 'Page number (default: 1)'
          required: false
          type: integer
      responses:
        200:
          description: List of advertisers
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Advertisers'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  /advertisers/{advertiserFid}:
    get:
      security:
        - OAuth:
            - advertiser
        - accessToken: []
      tags:
        - marketing
      summary: Retrieve an advertiser
      parameters:
        - $ref: '#/parameters/advertiserFid'
      responses:
        200:
          description: Loaded Advertiser
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Advertiser'
        x-404:
          description: Advertiser not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  /advertisers/{advertiserFid}/approved:
    put:
      security:
        - OAuth:
            - advertiser
        - accessToken: []
      tags:
        - marketing
      summary: Set approved status on an advertiser
      parameters:
        - $ref: '#/parameters/advertiserFid'
      responses:
        200:
          description: Approved Advertiser
        x-404:
          description: Advertiser not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

    delete:
      summary: Remove approved status on an advertiser
      tags:
        - marketing
      security:
        - OAuth:
            - advertiser
        - accessToken: []
      parameters:
        - $ref: '#/parameters/advertiserFid'
      responses:
        200:
          description: Advertiser no longer approved
        x-404:
          description: Advertiser not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  /advertisers/{advertiserFid}/campaigns:
    post:
      summary: Create a new advertiser campaign
      security:
        - OAuth:
            - advertiser
        - accessToken: []
      tags:
        - marketing
      parameters:
        - $ref: '#/parameters/advertiserFid'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateAdvertiserCampaignPayload'
      responses:
        200:
          description: Campaign Created
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Fid'
        x-400:
          description: Invalid data supplied
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  /advertisers/{advertiserFid}/campaigns/{advertiserCampaignFid}:
    get:
      security:
        - OAuth:
            - advertiser
        - accessToken: []
      tags:
        - marketing
      summary: Retrieve an advertiser campaign
      parameters:
        - $ref: '#/parameters/advertiserFid'
        - $ref: '#/parameters/advertiserCampaignFid'
      responses:
        200:
          description: Loaded Campaign
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/AdvertiserCampaign'
        x-404:
          description: Campaign not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/visitors/{visitorId}':
    get:
      security:
        - OAuth:
            - visitor
        - accessToken: []
      tags:
        - marketing
      summary: Retrieve information about a visitor
      description: This call will return information related to how a visitor arrived
      parameters:
        - $ref: '#/parameters/visitorId'
      responses:
        200:
          description: Pixels
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/VisitorResponse'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/visitors/{visitorId}/pixels':
    get:
      security:
        - OAuth:
            - visitor
        - accessToken: []
      tags:
        - marketing
      summary: Retrieve pending pixels for this visitor
      description: This call will release pixels from the pending queue on read
      parameters:
        - $ref: '#/parameters/visitorId'
      responses:
        200:
          description: Pixels
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    type: array
                    items:
                      $ref: '#/definitions/AdvertiserPixel'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/visitors/{visitorId}/actions/{actionKey}':
    post:
      summary: Track an action
      tags:
        - marketing
      description: |
        Track an action such as a lead or acquisition
      security:
        - OAuth:
            - visitor
        - accessToken: []
      parameters:
        - $ref: '#/parameters/visitorId'
        - name: actionKey
          description: Action key of the action to track e.g. lead
          in: path
          required: true
          type: string
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/PostActionPayload'

      responses:
        200:
          description: Action Tracked
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/VisitorPostAction'
        x-409:
          description: |
            The transaction ID specified has already been used for this action
        x-400:
          description: |
            Not enough information was provided to complete your request
            e.g. Missing Visitor ID and/or Client IP
        x-404:
          description: |
            The actionKey specified does not exist
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/visitors/{visitorId}/actions/{actionKey}/reverse':
    post:
      summary: Reverse a previously tracked action
      tags:
        - marketing
      description: |
        When an action has been reversed, e.g. cancelled, refunded
      security:
        - OAuth:
            - visitor
        - accessToken: []
      parameters:
        - $ref: '#/parameters/visitorId'
        - name: actionKey
          description: Action key of the action to reverse e.g. lead
          in: path
          required: true
          type: string
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/ReverseActionPayload'

      responses:
        200:
          description: Action Reversed
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/VisitorReversalAction'
        x-404:
          description: |
            The action you are trying to reverse cannot be found
        x-409:
          description: |
            The action specified has already been reversed
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  /pay/publicKey:
    get:
      summary: Get the public key needed to encrypt a credit card number
      security:
        - OAuth:
            - payment.methods
        - accessToken: []
      parameters:
        - name: format
          in: query
          description: Format for the generated key xml, raw, pkcs1 or pkcs8.
          type: string
      responses:
        200:
          description: RSA Public Key
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/PubKey'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  /pay/coinbase:
    get:
      summary: Get a new checkout ID
      security:
        - OAuth:
            - payment.methods
        - accessToken: []
      parameters:
        - name: orderFID
          in: query
          description: FID of the order for which to retrieve a checkout ID
          type: string
      responses:
        200:
          description: Coinbase checkout ID
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/CoinbaseCheckout'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  /customers:
    post:
      summary: Create a new customer
      security:
        - OAuth:
            - customer
        - accessToken: []
      tags:
        - customers
      parameters:
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateCustomerPayload'
      responses:
        200:
          description: Customer Created
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Customer'
        x-404:
          description: |
            The brand Fid you are trying to add a customer to does not exist
        x-409:
          description: |
            The external reference has already been used to create a customer
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  /customers/findByReference:
    get:
      security:
        - OAuth:
            - customer
            - customer.readonly
        - accessToken: []
      tags:
        - customers
      summary: Find a customer by your reference
      parameters:
        - name: reference
          in: query
          description: Your reference for the customer
          type: string
      responses:
        200:
          description: Located Customer
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Customer'
        x-404:
          description: Customer not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}':
    get:
      security:
        - OAuth:
            - customer
            - customer.readonly
        - accessToken: []
      tags:
        - customers
      summary: Retrieve a customer
      parameters:
        - $ref: '#/parameters/customerFid'
      responses:
        200:
          description: Loaded Customer
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Customer'
        x-404:
          description: Customer not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
    put:
      security:
        - OAuth:
            - customer
            - customer.readonly
        - accessToken: []
      tags:
        - customers
      summary: Update a customer
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/customerFid'
        - name: firstName
          in: formData
          type: string
        - name: lastName
          in: formData
          type: string
      responses:
        200:
          description: Customer Updated
        x-404:
          description: Customer not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
    delete:
      security:
        - OAuth:
            - customer
        - accessToken: []
      tags:
        - customers
      summary: Archive a customer
      parameters:
        - $ref: '#/parameters/customerFid'
      responses:
        200:
          description: Customer Archived
        x-403:
          description: It is not possible to archive this customer
        x-404:
          description: Customer not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/accountStatus':
    put:
      summary: Update a customers status
      tags:
        - customers
      security:
        - OAuth:
            - customer
        - accessToken: []
      parameters:
        - $ref: '#/parameters/customerFid'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/SetAccountStatusPayload'
      responses:
        200:
          description: Customer Status Updated
        x-404:
          description: Customer not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/lifecycleStage':
    put:
      summary: Update a customers lifecycle stage
      tags:
        - customers
      security:
        - OAuth:
            - customer
        - accessToken: []
      parameters:
        - $ref: '#/parameters/customerFid'
        - name: customerLifecycle
          in: formData
          required: true
          type: string
      responses:
        200:
          description: Customer lifecycle updated
        x-404:
          description: Customer not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/note':
    post:
      summary: Save a note against a customer
      tags:
        - customers
      security:
        - OAuth:
            - customer
        - accessToken: []
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/customerFid'
        - name: note
          in: formData
          required: true
          description: Text content of note
          type: string
        - $ref: '#/parameters/noteColor'
      responses:
        200:
          description: Customer note saved
        x-400:
          description: Invalid Payload
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/location':
    put:
      summary: Update a customers location
      tags:
        - customers
      security:
        - OAuth:
            - customer
        - accessToken: []
      parameters:
        - $ref: '#/parameters/customerFid'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/SetCustomerLocationPayload'
      responses:
        200:
          description: Customer Status Updated
        x-404:
          description: Customer not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/accountType':
    put:
      summary: Update a customers status
      tags:
        - customers
      security:
        - OAuth:
            - customer
        - accessToken: []
      parameters:
        - $ref: '#/parameters/customerFid'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/SetAccountTypePayload'
      responses:
        200:
          description: Customer Status Updated
        x-404:
          description: Customer not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/subscriptionType':
    put:
      summary: Update a customers status
      tags:
        - customers
      security:
        - OAuth:
            - customer
        - accessToken: []
      parameters:
        - $ref: '#/parameters/customerFid'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/SetSubscriptionTypePayload'
      responses:
        200:
          description: Customer Status Updated
        x-404:
          description: Customer not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/qualified':
    put:
      summary: Mark customer as qualified, this action cannot be undone.
      tags:
        - customers
      security:
        - OAuth:
            - customer
        - accessToken: []
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/isoTime'
      responses:
        200:
          description: Customer Marked
        x-404:
          description: Customer not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/chargeback':
    put:
      summary: Mark customer as charged back, this action cannot be undone.
      tags:
        - customers
      security:
        - OAuth:
            - customer
        - accessToken: []
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/isoTime'
      responses:
        200:
          description: Customer Marked
        x-404:
          description: Customer not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/fraud':
    put:
      summary: Mark customer as fraudulent, this action cannot be undone.
      tags:
        - customers
      security:
        - OAuth:
            - customer
        - accessToken: []
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/isoTime'
      responses:
        200:
          description: Customer Marked
        x-404:
          description: Customer not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/purchased':
    put:
      summary: Mark customer as purchased, this action cannot be undone.
      tags:
        - customers
      security:
        - OAuth:
            - customer
        - accessToken: []
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/isoTime'
      responses:
        200:
          description: Customer Marked
        x-404:
          description: Customer not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/loyal':
    put:
      summary: Set customer loyalty flag
      tags:
        - customers
      security:
        - OAuth:
            - customer
        - accessToken: []
      parameters:
        - $ref: '#/parameters/customerFid'
      responses:
        200:
          description: Customer Loyalty Acknowledged
        x-404:
          description: Customer not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

    delete:
      summary: Remove customer loyalty flag
      tags:
        - customers
      security:
        - OAuth:
            - customer
        - accessToken: []
      parameters:
        - $ref: '#/parameters/customerFid'
      responses:
        200:
          description: Customer No Longer Loyal
        x-404:
          description: Customer not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/vip':
    put:
      summary: Set customer as VIP
      tags:
        - customers
      security:
        - OAuth:
            - customer
        - accessToken: []
      parameters:
        - $ref: '#/parameters/customerFid'
      responses:
        200:
          description: Customer Now VIP
        x-404:
          description: Customer not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

    delete:
      summary: Remove customer VIP Status
      tags:
        - customers
      security:
        - OAuth:
            - customer
        - accessToken: []
      parameters:
        - $ref: '#/parameters/customerFid'
      responses:
        200:
          description: Customer No Longer VIP
        x-404:
          description: Customer not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/currency':
    put:
      summary: Set customer Currency
      tags:
        - customers
      security:
        - OAuth:
            - customer
        - accessToken: []
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/customerFid'
        - name: currency
          in: formData
          required: true
          description: Currency (ISO 4217, 3 Character Code)
          type: string
      responses:
        200:
          description: Customer Currency Updated
        x-404:
          description: Customer not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/chatSessions':
    get:
      summary: Retrieve chat sessions for customer
      tags:
        - customers
      security:
        - OAuth:
            - customer
            - customer.readonly
        - accessToken: []
      parameters:
        - $ref: '#/parameters/customerFid'
        - name: limit
          in: query
          description: 'Maximum number of records per page (default: 20)'
          required: false
          type: integer
        - name: page
          in: query
          description: 'Page number (default: 1)'
          required: false
          type: integer
      responses:
        200:
          description: Chat sessions
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/ChatSessions'
        x-404:
          description: Customer not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/payments/{paymentFid}':
    get:
      summary: Retrieve a payment
      tags:
        - customers
      security:
        - OAuth:
            - customer
            - customer.readonly
        - accessToken: []
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/paymentFid'
      responses:
        200:
          description: Loaded Payment
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Payment'
        x-404:
          description: Customer or payment not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/payments/{paymentFid}/refund':
    put:
      summary: Refund a payment
      tags:
        - customers
      security:
        - OAuth:
            - customer
        - accessToken: []
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/paymentFid'
        - name: totalRefund
          in: formData
          required: true
          description: Total Refund
          type: number
        - name: reasonFid
          in: formData
          required: true
          description: Reason FID
          type: string
        - name: refundType
          in: formData
          required: true
          description: Refund Type
          type: string
        - name: addCreditToInvoice
          in: formData
          required: true
          description: Add Credit to Invoice
          type: boolean
      responses:
        200:
          description: Payment Refunded
        x-404:
          description: Payment Not Found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/contacts':
    get:
      summary: List contacts
      tags:
        - customers
      security:
        - OAuth:
            - customer
        - accessToken: []
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/customerFid'
        - name: limit
          in: query
          description: 'Maximum number of records per page (default: 20)'
          required: false
          type: integer
        - name: page
          in: query
          description: 'Page number (default: 1)'
          required: false
          type: integer
      responses:
        200:
          description: List of people
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/People'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
    post:
      summary: Create a new contact for a customer
      tags:
        - customers
      security:
        - OAuth:
            - customer
        - accessToken: []
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/customerFid'
        - name: email
          in: formData
          required: false
          description: Email
          type: string
        - name: phone
          in: formData
          required: false
          description: Phone
          type: string
        - name: prefix
          in: formData
          required: false
          description: Prefix
          type: string
        - name: firstName
          in: formData
          required: false
          description: First Name
          type: string
        - name: middleNames
          in: formData
          required: false
          description: Middle Names
          type: string
        - name: lastName
          in: formData
          required: false
          description: Last Name
          type: string
        - name: suffix
          in: formData
          required: false
          description: Suffix
          type: string
        - name: nickname
          in: formData
          required: false
          description: Nickname
          type: string
        - name: birthday
          in: formData
          required: false
          description: Birthday
          type: string
        - name: jobTitle
          in: formData
          required: false
          description: Job Title
          type: string
        - name: address1
          in: formData
          required: false
          description: Address 1
          type: string
        - name: address2
          in: formData
          required: false
          description: Address 2
          type: string
        - name: address3
          in: formData
          required: false
          description: Address 3
          type: string
        - name: town
          in: formData
          required: false
          description: Town
          type: string
        - name: county
          in: formData
          required: false
          description: County
          type: string
        - name: country
          in: formData
          required: false
          description: Country
          type: string
        - name: postalCode
          in: formData
          required: false
          description: Postal Code
          type: string
      responses:
        200:
          description: FID of the new contact
        x-404:
          description: Customer not found
        default:
          description: Error
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Fid'

  '/customers/{customerFid}/contacts/{contactFid}':
    put:
      summary: Update a contacts information
      tags:
        - customers
      security:
        - OAuth:
            - customer
        - accessToken: []
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/contactFid'
        - name: prefix
          in: formData
          required: false
          description: Prefix
          type: string
        - name: firstName
          in: formData
          required: false
          description: First Name
          type: string
        - name: middleNames
          in: formData
          required: false
          description: Middle Names
          type: string
        - name: lastName
          in: formData
          required: false
          description: Last Name
          type: string
        - name: suffix
          in: formData
          required: false
          description: Suffix
          type: string
        - name: nickname
          in: formData
          required: false
          description: Nickname
          type: string
        - name: birthday
          in: formData
          required: false
          description: Birthday
          type: string
        - name: jobTitle
          in: formData
          required: false
          description: Job Title
          type: string
        - name: defaultEmailFid
          in: formData
          required: false
          description: Default Email FID
          type: string
        - name: defaultPhoneFid
          in: formData
          required: false
          description: Default Phone FID
          type: string
        - name: defaultAddressFid
          in: formData
          required: false
          description: Default Address FID
          type: string
      responses:
        200:
          description: Contact Updated
        x-404:
          description: Contact or Customer not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
    get:
      summary: Retrieve information about a contact
      tags:
        - customers
      security:
        - OAuth:
            - customer
        - accessToken: []
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/contactFid'
      responses:
        200:
          description: Contact Info
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/CustomerContact'
        x-404:
          description: Contact or Customer not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
    delete:
      summary: Remove a contact
      tags:
        - customers
      security:
        - OAuth:
            - customer
        - accessToken: []
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/contactFid'
      responses:
        200:
          description: Contact removed
        x-404:
          description: Contact or Customer not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/linkVisitor':
    put:
      summary: Link visitor to customer record
      tags:
        - customers
      security:
        - OAuth:
            - customer
        - accessToken: []
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/customerFid'
        - name: visitorId
          in: formData
          required: true
          description: Visitors Id
          type: string
      responses:
        200:
          description: Visitor ID linked to customer
        x-404:
          description: Customer or visitor not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/payments/{paymentFid}/chargeback':
    post:
      summary: Initiate a chargeback on a payment
      tags:
        - customers
      security:
        - OAuth:
            - customer
        - accessToken: []
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/paymentFid'
        - name: dateSubmitted
          type: string
          format: date-time
          in: formData
          required: true
          description: Date the chargeback was received (Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z)
        - name: reasonCode
          type: string
          in: formData
          required: true
          description: Chargeback Reason Code (see https://github.com/packaged/rwd/blob/master/src/Finance/Chargeback/ChargebackReasonHelper.php)
        - name: caseNumber
          type: string
          in: formData
          required: true
          description: Case Number
        - name: amount
          type: number
          format: float
          in: formData
          required: true
          description: Disputed Amount
        - $ref: '#/parameters/chargebackState'
        - $ref: '#/parameters/chargebackSource'
        - name: refunded
          type: boolean
          in: formData
          required: true
          description: If this payment has been refunded by the alert
        - name: description
          type: string
          in: formData
          required: false
          description: Notes
        - name: feeCurrency
          type: string
          in: formData
          required: false
          description: 3 Character Currency code for the fee
        - name: feeAmount
          type: number
          format: float
          in: formData
          required: false
          description: Fee Amount
      responses:
        200:
          description: Chargeback Opened
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Fid'
        x-400:
          description: Invalid Payload
        x-404:
          description: Invalid Payment Fid
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/chargebacks/{chargebackFid}':
    put:
      summary: Action a chargeback
      tags:
        - customers
      security:
        - OAuth:
            - customer
        - accessToken: []
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/customerFid'
        - name: chargebackFid
          in: path
          type: string
          required: true
          description: Chargeback FID to use
        - name: reasonCode
          type: string
          in: formData
          required: true
          description: Chargeback Reason Code (see https://github.com/packaged/rwd/blob/master/src/Finance/Chargeback/ChargebackReasonHelper.php)
        - name: caseNumber
          type: string
          in: formData
          required: true
          description: Case Number
        - $ref: '#/parameters/chargebackState'
        - name: refunded
          type: boolean
          in: formData
          required: true
          description: If this payment has been refunded by the alert
        - name: description
          type: string
          in: formData
          required: false
          description: Notes
      responses:
        200:
          description: Chargeback Actioned
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/BoolMessage'
        x-400:
          description: Invalid Payload
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/tickets':
    post:
      summary: Create a new support ticket
      tags:
        - customers
        - support
      security:
        - OAuth:
            - customer
        - accessToken: []
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/customerFid'
        - name: subject
          in: formData
          required: true
          description: Subject of the support ticket
          type: string
        - name: content
          in: formData
          required: true
          description: Content of the support ticket
          type: string
        - name: recipient
          in: formData
          required: true
          description: Receiver email address e.g. support@yourdomain.com
          type: string
        - name: sender
          in: formData
          required: true
          description: Sender email address e.g. user@customer.com
          type: string
        - name: departmentFid
          in: formData
          required: false
          description: Department FID
          type: string
      responses:
        200:
          description: Customer Currency Updated
        x-404:
          description: Customer not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
    get:
      summary: Get support tickets for customer
      tags:
        - customers
        - support
      security:
        - OAuth:
            - entity.config
        - accessToken: []
      parameters:
        - $ref: '#/parameters/customerFid'
      responses:
        200:
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Tickets'
          description: Ticket collection
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'


  '/entities/{entityFid}/config/{sectionName}':
    delete:
      summary: Remove a config section, or property from an entity
      tags:
        - Configuration
      security:
        - OAuth:
            - entity.config
        - accessToken: []
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/entityFid'
        - $ref: '#/parameters/sectionName'
        - name: itemName
          in: formData
          type: string
      responses:
        200:
          description: Config Item Deleted
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

    get:
      summary: Retrieve a config section
      tags:
        - Configuration
      security:
        - OAuth:
            - entity.config
        - accessToken: []
      parameters:
        - $ref: '#/parameters/entityFid'
        - $ref: '#/parameters/sectionName'
      responses:
        200:
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/ConfigItems'
          description: List Of Config Items
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

    post:
      summary: Write a config item
      tags:
        - Configuration
      security:
        - OAuth:
            - entity.config
        - accessToken: []
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/entityFid'
        - $ref: '#/parameters/sectionName'
        - name: itemName
          in: formData
          required: true
          type: string
        - name: value
          in: formData
          required: true
          type: string
      responses:
        200:
          description: Config Item Saved
        x-400:
          description: Invalid Entity
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/entities/{entityFid}/config/{sectionName}/items/{itemName}':
    get:
      summary: Retrieve a config item
      tags:
        - Configuration
      security:
        - OAuth:
            - entity.config
        - accessToken: []
      parameters:
        - $ref: '#/parameters/entityFid'
        - $ref: '#/parameters/sectionName'
        - $ref: '#/parameters/itemName'
      responses:
        200:
          description: Config Item
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/ConfigItem'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/entities/{entityFid}/attachments/uploadUrl':
    post:
      summary: Create an upload url
      security:
        - OAuth:
            - entity.attachments
        - accessToken: []
      tags:
        - entity
      parameters:
        - $ref: '#/parameters/entityFid'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/RequestUploadUrlPayload'
      responses:
        200:
          description: Attachment upload URL
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/AttachmentUrl'
        x-400:
          description: |
            Invalid data supplied
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/entities/{entityFid}/properties':
    put:
      summary: Write multiple entity properties
      tags:
        - Custom Properties
      security:
        - OAuth:
            - entity.properties
        - accessToken: []
      parameters:
        - $ref: '#/parameters/entityFid'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/PropertyBulkSetPayload'
      responses:
        200:
          description: Properties Saved
        x-400:
          description: Invalid Entity
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/entities/{entityFid}/properties/values/{propertyName}':
    get:
      summary: Get a property value from an entity
      tags:
        - Custom Properties
      security:
        - OAuth:
            - entity.properties
        - accessToken: []
      parameters:
        - $ref: '#/parameters/entityFid'
        - $ref: '#/parameters/propertyName'
      responses:
        200:
          description: Property Value
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/PropertyValue'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
    delete:
      summary: Remove a value property from an entity
      tags:
        - Custom Properties
      security:
        - OAuth:
            - entity.properties
        - accessToken: []
      parameters:
        - $ref: '#/parameters/entityFid'
        - $ref: '#/parameters/propertyName'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/PropertyValuePayload'
      responses:
        200:
          description: Property Deleted
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

    put:
      summary: Write an entity value property
      tags:
        - Custom Properties
      security:
        - OAuth:
            - entity.properties
        - accessToken: []
      parameters:
        - $ref: '#/parameters/entityFid'
        - $ref: '#/parameters/propertyName'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/PropertyValuePayload'

      responses:
        200:
          description: Property Saved
        x-400:
          description: Invalid Entity
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/entities/{entityFid}/properties/flags/{propertyName}':
    delete:
      summary: Remove a flag from an entity
      tags:
        - Custom Properties
      security:
        - OAuth:
            - entity.properties
        - accessToken: []
      parameters:
        - $ref: '#/parameters/entityFid'
        - $ref: '#/parameters/propertyName'

      responses:
        200:
          description: Property Deleted
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

    put:
      summary: Write an entity flag
      tags:
        - Custom Properties
      security:
        - OAuth:
            - entity.properties
        - accessToken: []
      parameters:
        - $ref: '#/parameters/entityFid'
        - $ref: '#/parameters/propertyName'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/PropertyFlagPayload'

      responses:
        200:
          description: Flag Saved
        x-400:
          description: Invalid Entity
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'


  '/entities/{entityFid}/properties/counters/{propertyName}':
    delete:
      summary: Remove a counter from an entity
      tags:
        - Custom Properties
      security:
        - OAuth:
            - entity.properties
        - accessToken: []
      parameters:
        - $ref: '#/parameters/entityFid'
        - $ref: '#/parameters/propertyName'

      responses:
        200:
          description: Property Deleted
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/entities/{entityFid}/properties/counters/{propertyName}/increment':
    put:
      summary: Increment an entity counter
      tags:
        - Custom Properties
      security:
        - OAuth:
            - entity.properties
        - accessToken: []
      parameters:
        - $ref: '#/parameters/entityFid'
        - $ref: '#/parameters/propertyName'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/PropertyCounterPayload'

      responses:
        200:
          description: Counter Incremented
        x-400:
          description: Invalid Entity
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/entities/{entityFid}/properties/counters/{propertyName}/decrement':
    put:
      summary: Decrement an entity counter
      tags:
        - Custom Properties
      security:
        - OAuth:
            - entity.properties
        - accessToken: []
      parameters:
        - $ref: '#/parameters/entityFid'
        - $ref: '#/parameters/propertyName'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/PropertyCounterPayload'

      responses:
        200:
          description: Counter Decremented
        x-400:
          description: Invalid Entity
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/entities/{entityFid}/events':
    post:
      summary: Trigger a new event
      security:
        - OAuth:
            - entity.events
        - accessToken: []
      parameters:
        - $ref: '#/parameters/entityFid'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/TriggerActionPayload'
      responses:
        200:
          description: Event Triggered
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/paymentAccounts':
    get:
      summary: List customers payment accounts
      tags:
        - customers
        - payment.methods
      security:
        - OAuth:
            - payment.methods
        - accessToken: []
      parameters:
        - $ref: '#/parameters/customerFid'
      responses:
        200:
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/PaymentAccounts'
          description: List of payment accounts
        x-400:
          description: Error retrieving payment accounts
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/paymentMethods/paypal/initialise':
    post:
      summary: Initialise a new paypal agreement for existing subscriptions
      tags:
        - customers
        - payment.methods
      security:
        - OAuth:
            - payment.methods
        - accessToken: []
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/paymentServiceFid'
        - $ref: '#/parameters/subscriptionFids'
        - name: successUrl
          type: string
          in: formData
          required: true
        - name: cancelUrl
          type: string
          in: formData
          required: true
        - name: failUrl
          type: string
          in: formData
          required: true
      responses:
        200:
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/PaypalInit'
          description: Redirect instructions
        x-501:
          description: Inable to initialise Paypal agreement
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/paymentMethods/paypal/complete':
    post:
      summary: Complete a paypal agreement created with initialise
      tags:
        - customers
        - payment.methods
      security:
        - OAuth:
            - payment.methods
        - accessToken: []
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/paymentServiceFid'
        - $ref: '#/parameters/subscriptionFids'
        - name: token
          type: string
          in: formData
          required: true
      responses:
        200:
          description: Successfully created agreement
        x-400:
          description: Failed to complete Paypal agreement
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/paymentMethods/cards':
    post:
      summary: Add a new card
      tags:
        - customers
        - paymentMethods
      security:
        - OAuth:
            - payment.methods
        - accessToken: []
      parameters:
        - $ref: '#/parameters/customerFid'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/CardDataPayload'
      responses:
        200:
          schema:
            $ref: '#/definitions/Fid'
          description: Credit card added to the customers account
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

    get:
      summary: List customers card payment methods
      tags:
        - customers
        - payment.methods
      security:
        - OAuth:
            - payment.methods
        - accessToken: []
      parameters:
        - $ref: '#/parameters/customerFid'
      responses:
        200:
          schema:
            $ref: '#/definitions/PaymentCards'
          description: List of cards
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/paymentMethods/cards/{cardFid}':
    delete:
      tags:
        - customers
        - paymentMethods
      security:
        - OAuth:
            - payment.methods
        - accessToken: []
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/cardFid'
      responses:
        200:
          description: Card Removed
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

    put:
      tags:
        - customers
        - paymentMethods
      security:
        - OAuth:
            - payment.methods
        - accessToken: []
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/cardFid'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/CardUpdatePayload'
      summary: Update a card
      responses:
        200:
          description: Card Updated
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/addresses':
    get:
      summary: List customers addresses
      tags:
        - customers
      security:
        - OAuth:
            - customer
        - accessToken: []
      parameters:
        - $ref: '#/parameters/customerFid'
      responses:
        200:
          schema:
            $ref: '#/definitions/Addresses'
          description: List of addresses
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
    post:
      summary: Add an address to a customer
      security:
        - OAuth:
            - customer
        - accessToken: []
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/customerFid'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/AddressPayload'
      responses:
        200:
          description: Address Added
        x-404:
          description: Customer not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/emails':
    post:
      summary: Add an email address to a customer
      security:
        - OAuth:
            - customer
        - accessToken: []
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/customerFid'
        - name: emailAddress
          in: formData
          required: true
          type: string
        - name: setAsDefault
          in: formData
          required: false
          type: boolean
      responses:
        200:
          description: Email Added
        x-404:
          description: Customer not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/phones':
    post:
      security:
        - OAuth:
            - customer
        - accessToken: []
      summary: Add a phone number to a customer
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/customerFid'
        - name: phoneNumber
          in: formData
          required: true
          type: string
        - name: displayName
          in: formData
          type: string
        - name: setAsDefault
          in: formData
          required: false
          type: boolean
      responses:
        200:
          description: Phone Number Added
        x-404:
          description: Customer not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/invoices':
    get:
      summary: List of invoice summaries for given customer
      tags:
        - customers
      security:
        - OAuth:
            - customer
        - accessToken: []
      parameters:
        - $ref: '#/parameters/customerFid'
        - name: limit
          in: query
          description: 'Maximum number of records per page (default: 20)'
          required: false
          type: integer
        - name: page
          in: query
          description: 'Page number (default: 1)'
          required: false
          type: integer
      responses:
        200:
          description: List of invoices summaries
          schema:
            $ref: '#/definitions/Invoices'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/invoices/{invoiceFid}':
    get:
      summary: Retreive a specific itemised invoice
      tags:
        - customers
      security:
        - OAuth:
            - customer
        - accessToken: []
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/invoiceFid'
      responses:
        200:
          description: Loaded invoice
          schema:
            $ref: '#/definitions/Invoice'
        x-404:
          description: Invoice not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/invoices/retry':
    put:
      summary: Retry payment of all customer invoices which are in invoice
      tags:
        - customers
      security:
        - OAuth:
            - customer
        - accessToken: []
      parameters:
        - $ref: '#/parameters/customerFid'
      responses:
        200:
          description: Invoice set to retry payment
        x-404:
          description: Customer or Invoice not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/invoices/{invoiceFid}/retry':
    put:
      summary: Retry payment of invoice
      tags:
        - customers
      security:
        - OAuth:
            - customer
        - accessToken: []
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/invoiceFid'
      responses:
        200:
          description: Invoice set to retry payment
        x-404:
          description: Customer or Invoice not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/invoices/{invoiceFid}/creditNote':
    post:
      security:
        - OAuth:
            - customer
        - accessToken: []
      summary: Add a credit note to a customers invoice
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/invoiceFid'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/InvoiceCreditNotePayload'
      responses:
        200:
          description: Credit Note Added
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/InvoiceCreditNote'
        x-404:
          description: Invoice not found
        x-400:
          description: Issue adding credit note to invoice
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/subscriptions':
    get:
      summary: List of subscription summaries for given customer
      tags:
        - customers
      security:
        - OAuth:
            - customer
        - accessToken: []
      parameters:
        - $ref: '#/parameters/customerFid'
        - name: limit
          in: query
          description: 'Maximum number of records per page (default: 20)'
          required: false
          type: integer
        - name: page
          in: query
          description: 'Page number (default: 1)'
          required: false
          type: integer
      responses:
        200:
          description: List of subscription summaries
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Subscriptions'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/subscriptions/{subscriptionFid}':
    get:
      summary: Retreive a specific subscription
      tags:
        - customers
      security:
        - OAuth:
            - customer
        - accessToken: []
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/subscriptionFid'
      responses:
        200:
          description: Loaded subscription
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Subscription'
        x-404:
          description: Subscription not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/subscriptions/{subscriptionFid}/enableAutoCharge':
    put:
      summary: Enable auto charge on specific subscription
      tags:
        - customers
      security:
        - OAuth:
            - customer
        - accessToken: []
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/subscriptionFid'
      responses:
        200:
          description: Auto charge enabled
        x-404:
          description: Subscription not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/subscriptions/{subscriptionFid}/disableAutoCharge':
    put:
      summary: Disable auto charge on specific subscription
      tags:
        - customers
      security:
        - OAuth:
            - customer
        - accessToken: []
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/subscriptionFid'
      responses:
        200:
          description: Auto charge disabled
        x-404:
          description: Subscription not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/subscriptions/{subscriptionFid}/autoCancelDays':
    put:
      summary: Set auto cancel days on a subscription
      tags:
        - customers
      security:
        - OAuth:
            - customer
        - accessToken: []
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/subscriptionFid'
        - name: days
          in: formData
          required: true
          type: number
          format: int32
      responses:
        200:
          description: Auto cancel days set
        x-404:
          description: Subscription not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/subscriptions/{subscriptionFid}/autoSuspendDays':
    put:
      summary: Set auto suspend days on a subscription
      tags:
        - customers
      security:
        - OAuth:
            - customer
        - accessToken: []
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/subscriptionFid'
        - name: days
          in: formData
          required: true
          type: number
          format: int32
      responses:
        200:
          description: Auto suspend days set
        x-404:
          description: Subscription not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/subscriptions/{subscriptionFid}/setAdvanceDays':
    put:
      summary: Set advance days on a subscription
      tags:
        - customers
      security:
        - OAuth:
            - customer
        - accessToken: []
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/subscriptionFid'
        - name: days
          in: formData
          required: true
          type: number
          format: int32
      responses:
        200:
          description: Advance days set
        x-404:
          description: Subscription not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'


  '/customers/{customerFid}/subscriptions/{subscriptionFid}/renewalMode':
    put:
      summary: Set the renewal mode of a subscription
      tags:
        - customers
      security:
        - OAuth:
            - customer
        - accessToken: []
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/subscriptionFid'
        - name: renewalMode
          in: formData
          required: true
          type: string
        - name: reason
          in: formData
          type: string
        - name: note
          in: formData
          type: string
      responses:
        200:
          description: Renewal mode set
        x-400:
          description: Invalid payload
        x-404:
          description: Subscription not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/subscriptions/{subscriptionFid}/setParentSubscription':
    put:
      summary: Set parent subscription on a subscription
      tags:
        - customers
      security:
        - OAuth:
            - customer
        - accessToken: []
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/subscriptionFid'
        - name: parentSubscriptionFid
          in: formData
          required: true
          type: string
      responses:
        200:
          description: Parent subscription set
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Fid'
        x-400:
          description: Cannot create cyclic reference
        x-404:
          description: Subscription not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/subscriptions/{subscriptionFid}/calculateModification':
    put:
      summary: Calculates the changes before a modification to a subscription
      tags:
        - customers
      security:
        - OAuth:
            - customer
        - accessToken: []
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/subscriptionFid'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/ModifySubscriptionPayload'
      responses:
        200:
          description: Calculated result of modification
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/CalculatedSubscriptionModification'
        x-400:
          description: Invalid payload data
        x-404:
          description: Subscription or Customer not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/subscriptions/{subscriptionFid}/calculateRefund':
    put:
      summary: Calculates the result of a potential refund on a subscription
      tags:
        - customers
      security:
        - OAuth:
            - customer
        - accessToken: []
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/subscriptionFid'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/CalculateRefundPayload'
      responses:
        200:
          description: Returns calculated refund amounts
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/CalculateSubscriptionRefund'
        x-400:
          description: Invalid payload data
        x-404:
          description: Subscription not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'


  '/customers/{customerFid}/subscriptions/{subscriptionFid}/setPaymentAccount':
    put:
      summary: Set paymentAccount for subscription. If changing a payment method from an Automatic Payment Method such as PayPal Recurring Payments, any other subscriptions paid with the same Agreement will be set to Default Payment Method and the Agreement will be cancelled
      tags:
        - customers
      security:
        - OAuth:
            - customer
        - accessToken: []
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/subscriptionFid'
        - name: paymentAccountFid
          in: formData
          type: string
      responses:
        200:
          description: New payment method set
        x-404:
          description: Subscription or PaymentAccount not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/subscriptions/{subscriptionFid}/modify':
    put:
      summary: Modify an existing subscription with a new price. Returns new open order to be completed
      tags:
        - customers
      security:
        - OAuth:
            - customer
        - accessToken: []
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/subscriptionFid'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/ModifySubscriptionPayload'
      responses:
        200:
          description: Created new open order
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Order'
        x-400:
          description: Invalid payload data
        x-404:
          description: Subscription not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/subscriptions/{subscriptionFid}/updateRenewalPrice':
    put:
      summary: Modify an existing subscription with a new price which will be used for the next renewal
      tags:
        - customers
      security:
        - OAuth:
            - customer
        - accessToken: []
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/subscriptionFid'
        - name: priceFid
          in: formData
          required: true
          type: string
      responses:
        200:
          description: Subscription price updated
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Fid'
        x-400:
          description: Invalid payload data
        x-404:
          description: Subscription not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/subscriptions/{subscriptionFid}/applyOffer':
    put:
      summary: Apply an offer to a subscription
      tags:
        - customers
      security:
        - OAuth:
            - customer
        - accessToken: []
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/subscriptionFid'
        - name: offerFid
          in: formData
          required: true
          type: string
      responses:
        200:
          description: Offer applied
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/subscriptions/{subscriptionFid}/preRenew':
    put:
      summary: Pre-renew an existing subscription with a different price. Returns new open order to be completed
      tags:
        - customers
      security:
        - OAuth:
            - customer
        - accessToken: []
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/subscriptionFid'
        - name: priceFid
          in: formData
          required: true
          description: Price FID
          type: string
      responses:
        200:
          description: Created new open order
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Fid'
        x-400:
          description: Invalid payload data
        x-404:
          description: Subscription not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/subscriptions/{subscriptionFid}/cancel':
    put:
      summary: Cancel a subscripion. Returns subscription FID.
      tags:
        - customers
      security:
        - OAuth:
            - customer
        - accessToken: []
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/subscriptionFid'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/SubscriptionCancelPayload'
      responses:
        200:
          description: Subscription cancelled
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Subscription'
        x-400:
          description: Invalid payload data
        x-404:
          description: Subscription not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/sar':
    post:
      summary: Subject Access Request
      tags:
        - customers
      description: |
        Initiate a Subject Access Request.  A URL will be sent via a webhook (CustomerWHE::SUBJECT_ACCESS_REQUEST), once the archive is ready for download
      security:
        - OAuth:
            - customer
        - accessToken: []
      parameters:
        - $ref: '#/parameters/customerFid'
      responses:
        200:
          description: Subject Access Request
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/BoolMessage'
        x-400:
          description: Invalid payload data
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'


  '/customers/{customerFid}/anonymize':
    post:
      summary: Anonymize customer data
      tags:
        - customers
      description: |
        Anonymize customer data
      security:
        - OAuth:
            - customer
        - accessToken: []
      parameters:
        - $ref: '#/parameters/customerFid'
        - name: customer
          in: formData
          type: boolean
        - name: tickets
          in: formData
          type: boolean
        - name: chats
          in: formData
          type: boolean
        - name: orders
          in: formData
          type: boolean
        - name: emails
          in: formData
          type: boolean
        - name: phones
          in: formData
          type: boolean
        - name: addresses
          in: formData
          type: boolean
        - name: paymentAccounts
          in: formData
          type: boolean
      responses:
        200:
          description: Anonymize Request
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/BoolMessage'
        x-400:
          description: Invalid payload data
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  /products:
    get:
      summary: List all products
      tags:
        - products
      security:
        - OAuth:
            - product.readonly
        - accessToken: []
      responses:
        200:
          description: Products retrieved
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Products'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/products/{productFid}/prices':
    get:
      summary: Retrieve Product Prices
      tags:
        - products
      security:
        - OAuth:
            - product.readonly
        - accessToken: []
      parameters:
        - $ref: '#/parameters/productFid'
        - name: currency
          in: formData
          required: false
          type: string
      responses:
        200:
          description: List of product prices
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/ProductPrices'
        x-404:
          description: Product not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/products/groups':
    get:
      summary: Get a list of all product groups
      tags:
        - products
      security:
        - OAuth:
            - product.readonly
        - accessToken: []
      responses:
        200:
          description: Products groups
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/ProductGroups'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/products/groups/{productGroupFid}/products':
    get:
      summary: Get a list of products belonging to the group
      tags:
        - products
      security:
        - OAuth:
            - product.readonly
        - accessToken: []
      parameters:
        - $ref: '#/parameters/productGroupFid'
      responses:
        200:
          description: Products
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Products'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  /orders:
    post:
      summary: Create a new order
      tags:
        - orders
      security:
        - OAuth:
            - orders
        - accessToken: []
      parameters:
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateOrderPayload'
      responses:
        200:
          description: Order created successfully
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Fid'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/orders/{orderFid}':
    get:
      summary: Retrieve an order
      tags:
        - orders
      security:
        - OAuth:
            - orders.readonly
        - accessToken: []
      parameters:
        - $ref: '#/parameters/orderFid'
      responses:
        200:
          description: Order retrieved
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Order'
        x-404:
          description: Order not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/orders/{orderFid}/verify':
    put:
      summary: Verify an order, returning any security urls
      tags:
        - orders
      security:
        - OAuth:
            - orders
        - accessToken: []
      parameters:
        - $ref: '#/parameters/orderFid'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/VerifyOrderPayload'
      responses:
        200:
          description: Order payment account verified
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/OrderVerification'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/orders/{orderFid}/cancel':
    put:
      summary: Cancel an order
      tags:
        - orders
      security:
        - OAuth:
            - orders
        - accessToken: []
      parameters:
        - $ref: '#/parameters/orderFid'
      responses:
        200:
          description: Order cancelled
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/BoolMessage'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/orders/{orderFid}/finalize':
    put:
      summary: Mark an order as finalized
      tags:
        - orders
      security:
        - OAuth:
            - orders
        - accessToken: []
      parameters:
        - $ref: '#/parameters/orderFid'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/FinalizeOrderPayload'
      responses:
        200:
          description: Order Finalized
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/orders/{orderFid}/confirmCard':
    put:
      summary: Confirm an order, authorize the payment
      tags:
        - orders
      security:
        - OAuth:
            - orders
        - accessToken: []
      parameters:
        - $ref: '#/parameters/orderFid'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/ConfirmCardOrderPayload'
      responses:
        200:
          description: Order confirmed and payment authroized
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/OrderConfirmation'
        x-503:
          description: There are no payment gateways available to handle your request
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/orders/{orderFid}/confirmPayPal':
    put:
      summary: Confirm an order, authorize the payment
      tags:
        - orders
      security:
        - OAuth:
            - orders
        - accessToken: []
      parameters:
        - $ref: '#/parameters/orderFid'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/ConfirmPayPalOrderPayload'
      responses:
        200:
          description: Order confirmed and payment authroized
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/OrderConfirmation'
        x-503:
          description: There are no payment gateways available to handle your request
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/orders/{orderFid}/setChargeId':
    put:
      summary: Set a ChargeHive.com Charge ID on an order
      tags:
        - orders
      security:
        - OAuth:
            - orders
        - accessToken: []
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/orderFid'
        - name: chargeId
          in: formData
          required: true
          description: Charge ID provided by ChargeHive.com
          type: string
      responses:
        200:
          description: Charge ID Accepted
          schema:
            $ref: '#/definitions/Envelope'
        400:
          description: Invalid Charge ID
          schema:
            $ref: '#/definitions/Envelope'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/orders/{orderFid}/confirmNewCard':
    put:
      summary: Confirm an order with a new card, authorize the payment
      tags:
        - orders
      security:
        - OAuth:
            - orders
        - accessToken: []
      parameters:
        - $ref: '#/parameters/orderFid'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/ConfirmOrderWithNewCardPayload'
      responses:
        200:
          description: Order confirmed and payment authroized
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/OrderConfirmation'
        x-503:
          description: There are no payment gateways available to handle your request
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/orders/{orderFid}/fraudScan':
    get:
      summary: Retrieve fraud scan
      tags:
        - orders
      security:
        - OAuth:
            - orders.readonly
        - accessToken: []
      parameters:
        - $ref: '#/parameters/orderFid'
      responses:
        200:
          description: Fraud scan result
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/FraudScan'
        x-404:
          description: Fraud scan not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/orders/{orderFid}/products':
    get:
      summary: Retrieve order products
      tags:
        - orders
      security:
        - OAuth:
            - orders.readonly
        - accessToken: []
      parameters:
        - $ref: '#/parameters/orderFid'
      responses:
        200:
          description: List of order products
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/OrderProducts'
        x-404:
          description: Order not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
    post:
      summary: Add a product to an order
      tags:
        - orders
      security:
        - OAuth:
            - orders
        - accessToken: []
      parameters:
        - $ref: '#/parameters/orderFid'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/AddOrderProductsPayload'
      responses:
        200:
          description: Product added to the order successfully
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/OrderAddProducts'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
    put:
      summary: Set the products on an order
      tags:
        - orders
      security:
        - OAuth:
            - orders
        - accessToken: []
      parameters:
        - $ref: '#/parameters/orderFid'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/OrderProductsPayload'
      responses:
        200:
          description: Order products successfully updated
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/OrderAddProducts'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/orders/{orderFid}/products/{orderProductFid}':
    delete:
      summary: Remove a product from an order
      tags:
        - orders
      security:
        - OAuth:
            - orders
        - accessToken: []
      parameters:
        - $ref: '#/parameters/orderFid'
        - $ref: '#/parameters/orderProductFid'
      responses:
        200:
          description: Product removed from the order successfully
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/orders/{orderFid}/products/{orderProductFid}/quantity':
    put:
      summary: Set the quantity of a product on an order
      tags:
        - orders
      security:
        - OAuth:
            - orders
        - accessToken: []
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/orderFid'
        - $ref: '#/parameters/orderProductFid'
        - name: quantity
          in: formData
          required: true
          type: number
          format: int64
      responses:
        200:
          description: Quantity updated
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/orders/{orderFid}/offers':
    post:
      summary: Add an offer to an order
      tags:
        - orders
      security:
        - OAuth:
            - orders
        - accessToken: []
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/orderFid'
        - name: offerFid
          in: formData
          required: true
          type: string
        - name: productFid
          in: formData
          type: string
        - name: orderItemFid
          in: formData
          type: string
        - name: replace
          in: formData
          type: boolean
      responses:
        200:
          description: Offer added to the order successfully
        x-404:
          description: Order not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/orders/{orderFid}/offers/{offerFid}':
    delete:
      summary: Remove an offer from an order
      tags:
        - orders
      security:
        - OAuth:
            - orders
        - accessToken: []
      parameters:
        - $ref: '#/parameters/orderFid'
        - $ref: '#/parameters/offerFid'
      responses:
        200:
          description: Offer removed from the order successfully
        x-404:
          description: Order not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/messenger/deliveries/{deliveryFid}/unsubscribe':
    put:
      summary: Unsubscribe an email based on the delivery fid
      tags:
        - Contacts
        - Messenger
      security:
        - OAuth:
            - contact
        - accessToken: []
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/deliveryFid'
        - $ref: '#/parameters/userAgent'
        - $ref: '#/parameters/encoding'
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/clientIp'
      responses:
        200:
          description: Email Address Unsubscribed
        x-404:
          description: Email Address not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/messenger/deliveries/{deliveryFid}/subscribe':
    put:
      summary: Subscribe an email based on the delivery fid
      tags:
        - Contacts
        - Messenger
      security:
        - OAuth:
            - contact
        - accessToken: []
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/deliveryFid'
        - $ref: '#/parameters/userAgent'
        - $ref: '#/parameters/encoding'
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/clientIp'
        - $ref: '#/parameters/optInStatus'
        - $ref: '#/parameters/optInData'
      responses:
        200:
          description: Email Address Subscribed
        x-404:
          description: Email Address not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/contacts/emails/{emailAddress}/confirm':
    put:
      summary: Confirm email address
      tags:
        - Contacts
      security:
        - OAuth:
            - contact
        - accessToken: []
      parameters:
        - $ref: '#/parameters/emailAddress'
      responses:
        200:
          description: Email Address Confirmed
        x-404:
          description: Email Address not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/contacts/emails/{emailAddress}/unsubscribe':
    put:
      summary: Unsubscribe an email address
      tags:
        - Contacts
      security:
        - OAuth:
            - contact
        - accessToken: []
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/emailAddress'
        - $ref: '#/parameters/unsubscribeType'
        - name: brandFid
          in: formData
          type: string
          description: Brand to unsubscribe the email address from
        - name: groupFid
          in: formData
          type: string
          description: Group to unsubscribe the email address from
      responses:
        200:
          description: Email Address Unsubscribed
        x-404:
          description: Email Address not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/contacts/emails/{emailAddress}/subscribe':
    put:
      summary: Subscribe an email address
      tags:
        - Contacts
      security:
        - OAuth:
            - contact
        - accessToken: []
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/emailAddress'
        - name: brandFid
          in: formData
          type: string
          description: Brand to subscribe the email address from
        - name: groupFid
          in: formData
          type: string
          description: Group to unsubscribe the email address from
        - $ref: '#/parameters/userAgent'
        - $ref: '#/parameters/encoding'
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/clientIp'
        - $ref: '#/parameters/optInStatus'
        - $ref: '#/parameters/optInData'
      responses:
        200:
          description: Email Address Subscribed
        x-404:
          description: Email Address not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/polymers':
    post:
      summary: Create a new polymer
      tags:
        - polymers
      security:
        - OAuth:
            - polymer
        - accessToken: []
      parameters:
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreatePolymerPayload'
      responses:
        200:
          description: Polymer created
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Fid'
        x-400:
          description: Information provided is not valid
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/polymers/{polymerFid}':
    get:
      summary: Read a polymer
      tags:
        - polymers
      security:
        - OAuth:
            - polymer.readonly
        - accessToken: []
      parameters:
        - name: polymerFid
          in: path
          required: true
          type: string
      responses:
        200:
          description: Polymer Information
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Entity'
        x-404:
          description: Polymer not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/products/offers':
    get:
      summary: Retrieve all offers
      tags:
        - products
      security:
        - OAuth:
            - product.readonly
        - accessToken: []
      responses:
        200:
          description: Available Offers
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/ProductOffers'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/licence/check':
    get:
      summary: Retrieve A Licence
      tags:
        - licence
      security:
        - OAuth:
            - purchase.readonly
        - accessToken: []
      parameters:
        - name: key
          in: query
          type: string
      responses:
        200:
          description: Licence Information
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Licence'
        x-404:
          description: Licence Not Valid
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/reasons/groups':
    get:
      summary: Get a list of all reason groups
      tags:
        - reasons
      security:
        - OAuth:
            - reasons.readonly
        - accessToken: []
      parameters:
        - $ref: '#/parameters/reasonGroupType'
      responses:
        200:
          description: Reason groups
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/ReasonGroups'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/reasons/groups/{reasonGroupFid}':
    get:
      summary: Get all the reasons for the reason group
      tags:
        - reasons
      security:
        - OAuth:
            - reasons.readonly
        - accessToken: []
      parameters:
        - $ref: '#/parameters/reasonGroupFid'
      responses:
        200:
          description: Reason Group retrieved
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Reasons'
        x-404:
          description: reasonGroupFid not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/tickets':
    post:
      summary: Create a support ticket
      tags:
        - support
      security:
        - OAuth:
            - support
        - accessToken: []
      parameters:
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateTicketPayload'
      responses:
        200:
          description: Ticket Information
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Ticket'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/services':
    get:
      summary: Retrieve all services
      tags:
        - ServiceStatus
      security:
        - OAuth:
            - entity.properties
        - accessToken: []
      responses:
        200:
          description: Service listing
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Services'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'


  '/services/{serviceFid}/incidents':
    get:
      summary: Retrieve incidents for service within timeframe
      tags:
        - ServiceStatus
      security:
        - OAuth:
            - entity.properties
        - accessToken: []
      parameters:
        - $ref: '#/parameters/serviceFid'
        - name: startDate
          in: query
          type: string
          format: date-time
        - name: endDate
          in: query
          type: string
          format: date-time
      responses:
        200:
          description: Service incidents
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/ServiceIncidents'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/services/{serviceFid}/incidents/{incidentFid}/updates':
    get:
      summary: Retrieve incident updates for incident
      tags:
        - ServiceStatus
      security:
        - OAuth:
            - entity.properties
        - accessToken: []
      parameters:
        - $ref: '#/parameters/serviceFid'
        - $ref: '#/parameters/incidentFid'
      responses:
        200:
          description: Service incidents
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/IncidentUpdates'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/configuration/finance/gateways':
    get:
      summary: Lists all the current gateways
      tags:
        - Configuration
      security:
        - OAuth:
            - configuration.readonly
        - accessToken: []
      parameters:
        - name: limit
          in: query
          description: 'Maximum number of records per page (default: 20)'
          required: false
          type: integer
        - name: page
          in: query
          description: 'Page number (default: 1)'
          required: false
          type: integer
      responses:
        200:
          description: List of payment gateways
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/PaymentGateways'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/integrations/verifyUser':
    get:
      summary: Verify a user
      security:
        - accessToken: []
      parameters:
        - name: verifyKey
          in: query
          description: 'Verify key found in ?fortifiverify=VERIFYKEY'
          required: true
          type: string
        - name: remoteIp
          in: query
          description: 'IP of the user connecting'
          required: true
          type: string
      responses:
        200:
          description: List of payment gateways
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/IntegrationUser'
        x-403:
          description: Unable to verify user
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

parameters:
  isoTime:
    name: isoTime
    description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
    type: string
    format: date-time
    in: formData
  userAgent:
    name: userAgent
    description: User Agent of the visitors browser 'HTTP_USER_AGENT'
    type: string
    in: formData
  language:
    name: language
    description: Language from visitors browser 'HTTP_ACCEPT_LANGUAGE'
    type: string
    in: formData
  encoding:
    name: encoding
    description: Encoding from the visitors browser 'HTTP_ACCEPT_ENCODING'
    type: string
    in: formData
  clientIp:
    name: clientIp
    description: IP Address of the visitor
    type: string
    in: formData
  optInStatus:
    name: optInStatus
    description: Status of customer email opt-in
    in: formData
    type: string
    enum:
      - no
      - clicked
      - confirmed
  unsubscribeType:
    name: unsubscribeType
    description: Unsubscribe Level
    in: formData
    type: string
    enum:
      - soft
      - hard
  optInData:
    name: optInData
    description: Additional data to store against opt-in
    in: formData
    type: array
    items:
      type: string
  chargebackState:
    name: state
    type: string
    in: formData
    enum:
      - alert
      - initiated
      - disputed
      - won
      - lost
      - undisputed_loss
    description: Current State
    required: true
  chargebackSource:
    name: source
    type: string
    in: formData
    enum:
      - gateway
      - ethoca
      - verifi
    description: Source of the alert, or gateway for everything else
    required: true
  visitorId:
    name: visitorId
    in: path
    type: string
    required: true
    description: |
      'Visitor ID from the cookie.
      If providing a pre-linked external reference, should be set to 'byref'.
      If no visitor ID is known, client IP should be provided and visitorId should be set to 'unknown''
  advertiserFid:
    name: advertiserFid
    in: path
    type: string
    required: true
    description: Advertiser FID to use
  advertiserCampaignFid:
    name: advertiserCampaignFid
    in: path
    type: string
    required: true
    description: Advertiser Campaign FID to use
  customerFid:
    name: customerFid
    in: path
    type: string
    required: true
    description: Customer FID to use
  contactFid:
    name: contactFid
    in: path
    type: string
    required: true
    description: Contact FID to use
  noteColor:
    name: colour
    in: formData
    required: false
    description: Colour of the new ticket
    type: string
    enum:
      - blue
      - red
      - orange
      - yellow
      - indigo
      - violet
      - green
      - pink
      - grey
  paymentFid:
    name: paymentFid
    in: path
    type: string
    required: true
    description: Payment FID to use
  invoiceFid:
    name: invoiceFid
    in: path
    type: string
    required: true
    description: Invoice Fid to use
  paymentServiceFid:
    name: paymentServiceFid
    description: Payment Service FID to use
    type: string
    required: true
    in: formData
  subscriptionFid:
    name: subscriptionFid
    in: path
    type: string
    required: true
    description: Subscription FID to use
  subscriptionFids:
    name: subscriptionFids
    description: Subscription FIDs
    type: array
    items:
      type: string
    required: true
    in: formData
  emailAddress:
    name: emailAddress
    in: path
    type: string
    required: true
    description: Email Address
  deliveryFid:
    name: deliveryFid
    in: path
    type: string
    required: true
    description: Delivery FID
  entityFid:
    name: entityFid
    in: path
    type: string
    required: true
    description: Entity FID to use
  serviceFid:
    name: serviceFid
    in: path
    type: string
    required: true
    description: Service FID to use
  incidentFid:
    name: incidentFid
    in: path
    type: string
    required: true
    description: Incident FID to use
  propertyName:
    name: propertyName
    in: path
    required: true
    type: string
    description: Property Name
  sectionName:
    name: sectionName
    in: path
    required: true
    type: string
    description: Section Name
  itemName:
    name: itemName
    in: path
    required: true
    type: string
    description: Item Name
  productFid:
    name: productFid
    in: path
    required: true
    type: string
  productGroupFid:
    name: productGroupFid
    in: path
    required: true
    type: string
  orderFid:
    name: orderFid
    in: path
    required: true
    type: string
  offerFid:
    name: offerFid
    in: path
    required: true
    type: string
  orderProductFid:
    name: orderProductFid
    in: path
    required: true
    type: string
  cardFid:
    name: cardFid
    in: path
    required: true
    type: string
  reasonGroupFid:
    name: reasonGroupFid
    in: path
    required: true
    type: string
  reasonGroupType:
    name: reasonGroupType
    in: query
    required: false
    type: string

definitions:

  #Responses

  EnvelopeMeta:
    description: Envelope Meta
    properties:
      requestId:
        type: string
        description: Request ID
      code:
        type: number
        format: int32
        description: Status code
      message:
        type: string
        description: Status message
    required:
      - requestId
      - code
      - message

  Envelope:
    description: Envelope
    x-response-property: data
    properties:
      meta:
        $ref: '#/definitions/EnvelopeMeta'
      data:
        type: object
    required:
      - meta
      - data

  Fid:
    description: Generic Response
    properties:
      fid:
        type: string
        description: Object FID
    required:
      - fid

  Entity:
    description: Generic Response
    allOf:
      - $ref: '#/definitions/Fid'
      - properties:
          displayName:
            type: string
            description: Display Name
          description:
            type: string
            description: Description

  BoolMessage:
    description: Generic Response
    properties:
      message:
        type: string
        description: Status Message
      result:
        type: boolean
        description: Success or Not
    required:
      - message
      - result

  AuthToken:
    description: Authentication token used to access services
    properties:
      token:
        type: string
      expiry:
        type: number
        format: int64

  AuthTokenResponse:
    description: Authentication token used to access services
    allOf:
      - $ref: '#/definitions/AuthToken'

  PubKey:
    description: Generic Response
    properties:
      key:
        type: string
        description: RSA Public Key

  CoinbaseCheckout:
    description: Generic Response
    properties:
      checkoutID:
        type: string
        description: Coinbase checkout ID

  People:
    description: Generic Response
    allOf:
      - $ref: '#/definitions/Pagination'
      - properties:
          items:
            type: array
            items:
              $ref: '#/definitions/Person'

  Person:
    description: Generic Response
    allOf:
      - $ref: '#/definitions/Entity'
      - properties:
          prefix:
            type: string
          firstName:
            type: string
          middleNames:
            type: string
          lastName:
            type: string
          suffix:
            type: string
          nickname:
            type: string
          birthday:
            type: string
          jobTitle:
            type: string
          ownerFid:
            type: string
          defaultEmailFid:
            type: string
          defaultPhoneFid:
            type: string
          defaultAddressFid:
            type: string

  User:
    description: User
    allOf:
      - $ref: '#/definitions/Fid'
      - properties:
          username:
            type: string
            description: Username
          language:
            type: string
            description: Language
          timezone:
            type: string
            description: Timezone for this user

  Organisation:
    description: Organisation
    properties:
      orgName:
        type: string
      orgFid:
        type: string
      orgDomain:
        type: string
      primaryColour:
        type: string
      logo:
        type: string

  Brands:
    description: Brands
    properties:
      brands:
        type: array
        items:
          $ref: '#/definitions/Brand'

  AttachmentUrl:
    description: AttachmentUrl
    properties:
      url:
        type: string
        description: URL to upload attachment to

  Brand:
    description: Brand
    properties:
      brandName:
        type: string
      primaryDomain:
        type: string
      brandFid:
        type: string

  Payment:
    description: Payment
    allOf:
      - $ref: '#/definitions/Fid'
      - properties:
          direction:
            type: string
          currency:
            type: string
          amount:
            type: number
            format: float
          fee:
            type: number
            format: float
          feeCurrency:
            type: string
          type:
            type: string
            enum:
              - affiliate
              - invoice
              - order
              - unknown
              - preauth
          status:
            type: string
            enum:
              - pending
              - paid
              - refund-pending
              - refunded
              - partially-refunded
              - chargeback
              - chargeback-pending
          transactionId:
            type: string
          statusCode:
            type: string
          statusMessage:
            type: string
          statementDescriptor:
            type: string
          orderFid:
            type: string
          invoiceFid:
            type: string
          fraudFid:
            type: string
          processed:
            type: boolean
          processedDate:
            type: number
            format: int64
          subGatewayFid:
            type: string
          subGatewayName:
            type: string
          subGatewayTransactionId:
            type: string
          disputeFid:
            type: string
          sourceAccountType:
            type: string
          sourceAccountFid:
            type: string

  Customer:
    description: Customer
    allOf:
      - $ref: '#/definitions/Fid'
      - properties:
          name:
            type: string
          firstName:
            type: string
          lastName:
            type: string
          email:
            type: string
          phone:
            type: string
          currency:
            type: string
          externalReference:
            type: string
          companyFid:
            type: string
          timezone:
            type: string

  CustomerContact:
    description: Customer Contact
    allOf:
      - $ref: '#/definitions/Entity'
      - properties:
          ownerFid:
            type: string
          prefix:
            type: string
          firstName:
            type: string
          middleNames:
            type: string
          lastName:
            type: string
          suffix:
            type: string
          nickname:
            type: string
          birthday:
            type: string
          jobTitle:
            type: string
          defaultEmailFid:
            type: string
          defaultPhoneFid:
            type: string
          defaultAddressFid:
            type: string

  Advertiser:
    description: Advertiser
    allOf:
      - $ref: '#/definitions/Entity'
      - properties:
          type:
            type: string
          contactName:
            type: string
          companyName:
            type: string
          phoneFid:
            type: string
          emailFid:
            type: string
          website:
            type: string
          acceptedTerms:
            type: string
          suspended:
            type: string
          accountManagerFid:
            type: string
          foundationFid:
            type: string
          companyFid:
            type: string
          isDisabled:
            type: string
          email:
            type: string
          phone:
            type: string
          payoutType:
            type: string
          approved:
            type: boolean

  Advertisers:
    description: Advertisers
    allOf:
      - $ref: '#/definitions/Pagination'
      - properties:
          advertisers:
            type: array
            items:
              $ref: '#/definitions/Advertiser'

  AdvertiserCampaign:
    description: Campaign
    allOf:
      - $ref: '#/definitions/Entity'
      - properties:
          hash:
            type: string
          affiliateFid:
            type: string
          brandFid:
            type: string

  AdvertiserPixel:
    description: Pixel
    properties:
      url:
        type: string
      method:
        type: string
        enum:
          - iframe
          - img
          - js
          - curl
          - html
      content:
        type: string

  VisitorResponse:
    description: Traffic Visitor
    properties:
      deviceFid:
        type: string
      referrerUrl:
        type: string
      affiliateFid:
        type: string
      campaignHash:
        type: string
      sid1:
        type: string
      sid2:
        type: string
      sid3:
        type: string

  VisitorPostAction:
    description: Vistor Action
    properties:
      visitorId:
        type: string
      eventId:
        type: string
      sid1:
        type: string
      sid2:
        type: string
      sid3:
        type: string
      advertiserFid:
        type: string
      campaignFid:
        type: string
      commission:
        type: number
        format: float
      commissionCurrency:
        type: string
      pixels:
        type: array
        items:
          $ref: '#/definitions/AdvertiserPixel'

  VisitorReversalAction:
    description: Visitor Action Reversal
    properties:
      visitorId:
        type: string
      eventId:
        type: string
      advertiserFid:
        type: string
      campaignFid:
        type: string
      reversedCommission:
        type: number
        format: float
      feeCharged:
        type: number
        format: float
      commissionCurrency:
        type: string

  Licence:
    description: Licence
    properties:
      purchaseFid:
        type: string
      customerFid:
        type: string
      status:
        type: string
      dateCreated:
        description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
        type: string
        format: date-time
      lastRenewDate:
        description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
        type: string
        format: date-time
      renewDate:
        description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
        type: string
        format: date-time
      nextRenewDate:
        description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
        type: string
        format: date-time
      autoSuspendDate:
        description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
        type: string
        format: date-time
      autoCancelDate:
        description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
        type: string
        format: date-time
      startDate:
        description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
        type: string
        format: date-time
      endDate:
        description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
        type: string
        format: date-time
      trialStartDate:
        description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
        type: string
        format: date-time
      trialEndDate:
        description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
        type: string
        format: date-time
      cycleTerm:
        type: string
      cycleExact:
        type: string
      cycleType:
        $ref: '#/definitions/cycleTermType'
      cycle:
        description: Interval in ISO 8601 standard
        type: string

  Subscriptions:
    description: Generic Response
    allOf:
      - $ref: '#/definitions/Pagination'
      - properties:
          subscriptions:
            type: array
            items:
              $ref: '#/definitions/SubscriptionSummary'

  SubscriptionSummary:
    description: Generic Response
    allOf:
      - $ref: '#/definitions/Entity'
      - properties:
          lastRenewed:
            description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
            type: string
            format: date-time
          renewalDate:
            description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
            type: string
            format: date-time
          paidUntil:
            description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
            type: string
            format: date-time
          cycle:
            description: Interval in ISO 8601 standard
            type: string
          autoCharge:
            type: boolean
          productFid:
            type: string
          renewalPrice:
            type: number
            format: float
          status:
            type: string

  Subscription:
    description: Generic Response
    allOf:
      - $ref: '#/definitions/Entity'
      - properties:
          amount:
            type: number
            format: float
          autoCancelDate:
            description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
            type: string
            format: date-time
          autoCharge:
            type: boolean
          autoSuspendDate:
            description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
            type: string
            format: date-time
          cancelDays:
            type: integer
            format: int32
          cancelReason:
            type: string
          currency:
            type: string
          cycle:
            description: Interval in ISO 8601 standard
            type: string
          priceFid:
            type: string
          offerFid:
            type: string
          dateCancelled:
            description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
            type: string
            format: date-time
          dateCreated:
            description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
            type: string
            format: date-time
          dateInactive:
            description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
            type: string
            format: date-time
          dateModified:
            description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
            type: string
            format: date-time
          dateStateChanged:
            description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
            type: string
            format: date-time
          dateSuspended:
            description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
            type: string
            format: date-time
          dateUpgraded:
            description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
            type: string
            format: date-time
          discount:
            type: number
            format: float
          endDate:
            description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
            type: string
            format: date-time
          invoiceFid:
            type: string
          isPaid:
            type: boolean
          lastRenewDate:
            description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
            type: string
            format: date-time
          nextPaymentDate:
            description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
            type: string
            format: date-time
          nextRenewalAmount:
            type: number
            format: float
          nextRenewDate:
            description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
            type: string
            format: date-time
          paidRenewals:
            type: integer
            format: int32
          paidUntil:
            description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
            type: string
            format: date-time
          quantity:
            type: integer
            format: int32
          renewalAdvanceDays:
            type: integer
            format: int32
          renewDate:
            description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
            type: string
            format: date-time
          setupAmount:
            type: number
            format: float
          setupDiscount:
            type: number
            format: float
          shouldCancel:
            type: boolean
          shouldSuspend:
            type: boolean
          startDate:
            description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
            type: string
            format: date-time
          status:
            type: string
          suspendDays:
            type: integer
            format: int32
          suspendReason:
            type: string
          taxAmount:
            type: number
            format: float
          totalAmount:
            type: number
            format: float
          totalRenewals:
            type: integer
            format: int32
          trialEndDate:
            description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
            type: string
            format: date-time
          trialStartDate:
            description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
            type: string
            format: date-time
          uniqueReference:
            type: string

  CalculateSubscriptionRefund:
    description: Response from calculating a refund on a subscription
    properties:
      amountWithTax:
        type: number
        format: float
      amountWithoutTax:
        type: number
        format: float
      tax:
        type: number
        format: float
      terminationFee:
        type: number
        format: float
      terminationFeeWithTax:
        type: number
        format: float

  Invoices:
    description: Generic Response
    allOf:
      - $ref: '#/definitions/Pagination'
      - properties:
          invoices:
            type: array
            items:
              $ref: '#/definitions/InvoiceSummary'

  InvoiceSummary:
    description: Generic Response
    allOf:
      - $ref: '#/definitions/Entity'
      - properties:
          invoiceNumber:
            type: integer
            format: int32
          invoiceDate:
            description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
            type: string
            format: date-time
          currency:
            type: string
          dueDate:
            description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
            type: string
            format: date-time
          paymentDate:
            description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
            type: string
            format: date-time
          amountPaid:
            type: number
            format: float
          baseAmount:
            type: number
            format: float
          discountAmount:
            type: number
            format: float
          taxAmount:
            type: number
            format: float
          creditedAmount:
            type: number
            format: float
          totalAmount:
            type: number
            format: float
          outstandingAmount:
            type: number
            format: float
          refundAmount:
            type: number
            format: float
          invoiceStatus:
            type: string

  Invoice:
    description: Generic Response
    allOf:
      - $ref: '#/definitions/Entity'
      - properties:
          invoiceDate:
            description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
            type: string
            format: date-time
          invoiceNumber:
            type: integer
            format: int32
          currency:
            type: string
          dueDate:
            description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
            type: string
            format: date-time
          paymentDate:
            description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
            type: string
            format: date-time
          amountPaid:
            type: number
            format: float
          baseAmount:
            type: number
            format: float
          discountAmount:
            type: number
            format: float
          taxAmount:
            type: number
            format: float
          creditedAmount:
            type: number
            format: float
          totalAmount:
            type: number
            format: float
          outstandingAmount:
            type: number
            format: float
          refundAmount:
            type: number
            format: float
          invoiceStatus:
            type: string
          totalItems:
            type: integer
            format: int32
          invoiceItems:
            type: array
            items:
              $ref: '#/definitions/InvoiceItem'

  InvoiceItem:
    description: Generic Response
    allOf:
      - $ref: '#/definitions/Entity'
      - properties:
          totalAmount:
            type: number
            format: float
          subItems:
            type: array
            items:
              $ref: '#/definitions/InvoiceSubItem'

  InvoiceSubItem:
    description: Generic Response
    allOf:
      - $ref: '#/definitions/Entity'
      - properties:
          fromDate:
            description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
            type: string
            format: date-time
          toDate:
            description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
            type: string
            format: date-time
          perUnitAmount:
            type: number
            format: float
          totalAmount:
            type: number
            format: float
          itemType:
            type: string
          quantity:
            type: integer
            format: int32

  InvoiceCreditNote:
    description: Generic Response
    allOf:
      - $ref: '#/definitions/Entity'
      - properties:
          invoiceFid:
            type: string
          chargeRequestFid:
            type: string
          creditDate:
            description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
            type: string
            format: date-time
          amount:
            type: number
            format: float
          currency:
            type: string

  Pagination:
    description: Generic Response
    properties:
      limit:
        type: integer
        format: int32
      page:
        type: integer
        format: int32
      totalItems:
        type: integer
        format: int32

  Products:
    description: Generic Response
    properties:
      products:
        type: array
        items:
          $ref: '#/definitions/Product'

  Product:
    description: Generic Response
    allOf:
      - $ref: '#/definitions/Entity'
      - properties:
          productType:
            type: integer
            format: int32
          parentFid:
            type: string
          statementDescription:
            type: string
          trialDays:
            type: integer
            format: int32
          defaultPriceFid:
            type: string
          defaultPrice:
            $ref: '#/definitions/ProductPrice'
          taxable:
            type: integer
            format: int64
          taxGroupFid:
            type: string
          maxQuantity:
            type: integer
            format: int64
          allowQuantity:
            type: integer
            format: int32

  ProductGroups:
    description: Generic Response
    properties:
      groups:
        type: array
        items:
          $ref: '#/definitions/ProductGroup'

  ProductGroup:
    description: Generic Response
    allOf:
      - $ref: '#/definitions/Entity'
      - properties:
          products:
            type: array
            items:
              $ref: '#/definitions/Fid'

  ProductPrices:
    description: Generic Response
    properties:
      prices:
        type: array
        items:
          $ref: '#/definitions/ProductPrice'

  ProductPrice:
    description: Generic Response
    allOf:
      - $ref: '#/definitions/Entity'
      - properties:
          productFid:
            type: string
          currency:
            type: string
          price:
            type: string
          setupFee:
            type: string
          cycleType:
            $ref: '#/definitions/cycleTermType'
          cycleTerm:
            type: number
            format: int32
          cycleExact:
            type: string
          cycle:
            description: Interval in ISO 8601 standard
            type: string

  FraudScan:
    description: Result of a fraud scan
    properties:
      service:
        type: string
      score:
        type: string
      message:
        type: string
      requestId:
        type: string
      recommendation:
        type: string
      metaDataItems:
        type: array
        items:
          $ref: '#/definitions/FraudScanMetaData'

  FraudScanMetaData:
    description: Individual fraud scan metadata item
    properties:
      key:
        type: string
      value:
        type: string

  CalculatedSubscriptionModification:
    description: Generic Response
    properties:
      nextRenewalAmount:
        type: number
        format: float
      nextRenewalDiscount:
        type: number
        format: float
      nextRenewalTax:
        type: number
        format: float
      nextRenewalTotal:
        type: number
        format: float
      setupAmount:
        type: number
        format: float
      setupDiscount:
        type: number
        format: float
      chargeAmount:
        type: number
        format: float
      chargeTax:
        type: number
        format: float
      chargeTotal:
        type: number
        format: float

  Order:
    description: Generic Response
    allOf:
      - $ref: '#/definitions/Fid'
      - properties:
          orderHash:
            type: string
          state:
            type: number
            format: int32
          queueFid:
            type: string
          offerFid:
            type: string
          couponCode:
            type: string
          amount:
            type: number
            format: float
          setupAmount:
            type: number
            format: float
          setupDiscountAmount:
            type: number
            format: float
          taxAmount:
            type: number
            format: float
          totalAmount:
            type: number
            format: float
          currency:
            type: string
          country:
            type: string
          discountAmount:
            type: number
            format: float
          discountType:
            type: string
          approvedByFid:
            type: string
          userAgent:
            type: string
          userIp:
            type: string
          paymentAccountFid:
            type: string
          paymentServiceType:
            type: string
          lastPaymentFid:
            type: string
          brandFid:
            type: string
          customerFid:
            type: string
          fraudFid:
            type: string
          invoiceFid:
            type: string
          amountPaid:
            type: number
            format: float
          authorizeId:
            type: string

  OrderProducts:
    description: Generic Response
    properties:
      products:
        type: array
        items:
          $ref: '#/definitions/OrderProduct'

  OrderAddProducts:
    description: Generic Response
    allOf:
      - $ref: '#/definitions/OrderProducts'
      - properties:
          order:
            $ref: '#/definitions/Order'

  OrderProduct:
    description: Generic Response
    allOf:
      - $ref: '#/definitions/Entity'
      - properties:
          price:
            type: number
            format: float
          priceFid:
            type: string
          offerFid:
            type: string
          productFid:
            type: string
          quantity:
            type: integer
            format: int64
          renewalDate:
            description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
            type: string
            format: date-time
          purchaseFid:
            type: string
          currency:
            type: string
          discountAmount:
            type: number
            format: float
          setupFee:
            type: number
            format: float
          setupDiscountAmount:
            type: number
            format: float
          taxAmount:
            type: number
            format: float
          totalAmount:
            type: number
            format: float
          cycleType:
            type: number
            format: int32
          cycleTerm:
            type: number
            format: int32
          cycleExact:
            type: string
          cycle:
            description: Interval in ISO 8601 standard
            type: string
          parentFid:
            type: string

  OrderVerification:
    description: Generic Response
    properties:
      requireRedirect:
        type: boolean
      redirectUrl:
        type: string

  OrderConfirmation:
    description: Generic Response
    properties:
      paymentAccountFid:
        type: string
      paymentMode:
        $ref: '#/definitions/PaymentMode'
      success:
        type: boolean
      message:
        type: string

  PaymentAccounts:
    description: Generic Response
    properties:
      accounts:
        type: array
        items:
          $ref: '#/definitions/PaymentAccount'

  PaypalInit:
    description: Generic Response
    properties:
      redirectUrl:
        type: string

  PaymentAccount:
    description: Generic Response
    allOf:
      - $ref: '#/definitions/Entity'
      - properties:
          accountType:
            $ref: '#/definitions/PaymentAccountType'
          paymentMethod:
            $ref: '#/definitions/PaymentMethod'
          paymentMode:
            $ref: '#/definitions/PaymentMode'

  PaymentCards:
    description: Generic Response
    properties:
      cards:
        type: array
        items:
          $ref: '#/definitions/PaymentCard'

  PaymentCard:
    description: Generic Response
    allOf:
      - $ref: '#/definitions/Entity'
      - properties:
          nameOnCard:
            type: string
          expiryMonth:
            type: number
          expiryYear:
            type: number
          issue:
            type: number
          last4:
            type: number
          cardType:
            type: string

  Addresses:
    description: Generic Response
    properties:
      addresses:
        type: array
        items:
          $ref: '#/definitions/Address'

  Address:
    description: Generic Response
    allOf:
      - $ref: '#/definitions/Entity'
      - properties:
          address1:
            type: string
          address2:
            type: string
          address3:
            type: string
          town:
            type: string
          county:
            type: string
          country:
            type: string
          postalCode:
            type: string

  ConfigItems:
    description: Generic Response
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/ConfigItem'

  ConfigItem:
    description: Generic Response
    allOf:
      - $ref: '#/definitions/Entity'
      - properties:
          entityFid:
            type: string
          sectionName:
            type: string
          itemName:
            type: string
          value:
            type: string

  PaymentGateways:
    description: Generic Response
    allOf:
      - $ref: '#/definitions/Pagination'
      - properties:
          gateways:
            type: array
            items:
              $ref: '#/definitions/PaymentGateway'

  PaymentGateway:
    description: Generic Response
    allOf:
      - $ref: '#/definitions/Entity'
      - properties:
          externalId:
            type: string
          enabled:
            type: boolean
          brands:
            type: array
            items:
              type: string
          currencies:
            type: array
            items:
              type: string
          cardTypes:
            type: array
            items:
              type: string
          provider:
            type: string

  ProductOffers:
    description: Generic Response
    properties:
      offers:
        type: array
        items:
          $ref: '#/definitions/ProductOffer'

  ProductOffer:
    description: Generic Response
    allOf:
      - $ref: '#/definitions/Entity'
      - properties:
          couponCode:
            type: string
          applyFid:
            type: string
          maxUsages:
            type: integer
            format: int32
          expiryTime:
            description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
            type: string
            format: date-time
          discountAmount:
            type: number
            format: float
          discountType:
            $ref: '#/definitions/discountType'
          setupDiscountAmount:
            type: number
            format: float
          setupDiscountType:
            $ref: '#/definitions/discountType'
          term:
            type: integer
            format: int32
          termType:
            $ref: '#/definitions/cycleTermType'
          cycle:
            description: Interval in ISO 8601 standard
            type: string
          period:
            description: Interval in ISO 8601 standard
            type: string
          restrictive:
            type: boolean

  Tickets:
    description: Generic Response
    properties:
      tickets:
        type: array
        items:
          $ref: '#/definitions/Ticket'

  Ticket:
    description: Generic Response
    allOf:
      - $ref: '#/definitions/Entity'
      - properties:
          hash:
            type: string
          customerFid:
            type: string
          companyFid:
            type: string
          departmentFid:
            type: string
          queueFid:
            type: string
          agentFid:
            type: string
          slaFid:
            type: string
          ticketType:
            type: string
          status:
            type: number
            format: int64
          impact:
            type: number
            format: int64
          urgency:
            type: number
            format: int64
          priority:
            type: number
            format: int64
          tier:
            type: number
            format: int64
          outboundEmail:
            type: string
          outboundName:
            type: string
          inboundEmail:
            type: string
          inboundName:
            type: string
          isSpam:
            type: boolean
          responseTargetTime:
            type: number
            format: int64
          resolveTargetTime:
            type: number
            format: int64
          postCount:
            type: number
            format: int64
          lastReplySentTime:
            type: number
            format: int64
          lastReplyReceivedTime:
            type: number
            format: int64
          priorityAdjustment:
            type: number
            format: int64
          locked:
            type: boolean
          lockedByFid:
            type: string
          attachments:
            type: number
            format: int64
          restrictedAccess:
            type: boolean
          cc:
            type: string
          bcc:
            type: string
          language:
            type: string
          dataCreated:
            type: number
            format: int64
          dateModified:
            type: number
            format: int64

  ReasonGroups:
    description: Reason Groups
    properties:
      reasonGroups:
        type: array
        items:
          $ref: '#/definitions/ReasonGroup'

  ReasonGroup:
    description: Reason Group
    allOf:
      - $ref: '#/definitions/Entity'
      - properties:
          builtIn:
            type: boolean
          reasonCount:
            type: number
            format: int64
          type:
            $ref: '#/definitions/reasonGroupType'

  Reasons:
    description: Reasons
    properties:
      reasons:
        type: array
        items:
          $ref: '#/definitions/Reason'

  Reason:
    description: Reason
    allOf:
      - $ref: '#/definitions/Entity'
      - properties:
          groupFid:
            type: string
            description: FID for the reason group
          usedCount:
            type: number
            format: int64

  PropertyValue:
    description: Reason
    properties:
      propertyValue:
        description: Property Value
        type: string

  Services:
    description: Services
    properties:
      services:
        type: array
        items:
          $ref: '#/definitions/Service'

  Service:
    description: Service
    properties:
      name:
        type: string
      description:
        type: string
      status:
        type: string
      inheritedStatus:
        type: string
      visibility:
        type: string
      parentServiceFid:
        type: string
      id:
        type: number
        format: int64
      viewPolicy:
        type: string
      editPolicy:
        type: string
      dateCreated:
        type: number
        format: int64
      dateModified:
        type: number
        format: int64
      dateStateChanged:
        type: number
        format: int64
      displayName:
        type: string
      currentState:
        type: number
        format: int64
      fid:
        type: string
      brandFid:
        type: string

  ChatSessions:
    description: List of chat sessions
    allOf:
      - $ref: '#/definitions/Pagination'
      - properties:
          chatSessions:
            type: array
            items:
              $ref: '#/definitions/ChatSession'

  ChatSession:
    description: Chat session
    allOf:
      - $ref: '#/definitions/Entity'
      - properties:
          timeStarted:
            type: number
            format: int64
          timeEnded:
            type: number
            format: int64

  IncidentUpdates:
    description: Incident updates
    properties:
      incidentUpdates:
        type: array
        items:
          $ref: '#/definitions/IncidentUpdate'

  IncidentUpdate:
    description: Incident Update
    properties:
      status:
        type: string
      message:
        type: string
      id:
        type: number
        format: int64
      viewPolicy:
        type: string
      editPolicy:
        type: string
      dateCreated:
        type: number
        format: int64
      dateModified:
        type: number
        format: int64
      dateStateChanged:
        type: number
        format: int64
      displayName:
        type: string
      description:
        type: string
      currentState:
        type: number
        format: int64
      fid:
        type: string

  ServiceIncidents:
    description: Service Incidents
    properties:
      serviceIncidents:
        type: array
        items:
          $ref: '#/definitions/ServiceIncident'

  ServiceIncident:
    description: Service Incident
    allOf:
      - $ref: '#/definitions/Entity'
      - properties:
          timeStarted:
            type: number
            format: int64
          timeEnded:
            type: number
            format: int64
          serviceFid:
            type: string
          status:
            type: string
          dateCreated:
            type: number
            format: int64
          dateModified:
            type: number
            format: int64
          dateStateChanged:
            type: number
            format: int64

  IntegrationUser:
    description: Information about the user attempting to integrate
    properties:
      displayName:
        type: string
      userFid:
        type: string
      employeeFid:
        type: string
      roles:
        type: array
        description: Role Aliases
        items:
          type: string

  #Payloads

  AddressPayload:
    description: Address Payload
    properties:
      displayName:
        type: string
      description:
        type: string
      address1:
        type: string
      address2:
        type: string
      address3:
        type: string
      town:
        type: string
      county:
        type: string
      country:
        type: string
      postalCode:
        type: string
      setAsDefault:
        type: boolean

  ServiceAccountCredentialsPayload:
    description: Service credentials used to verify ownership of a user account
    properties:
      id:
        type: string
      key:
        type: string
    required:
      - id
      - key

  InvoiceCreditNotePayload:
    properties:
      displayName:
        type: string
      description:
        type: string
      chargeRequestFid:
        description: Charge Request FID
        type: string
      creditAmountType:
        $ref: '#/definitions/creditAmountType'
      amount:
        type: number
        format: float
      reasonFid:
        description: Reason FID
        type: string
      currency:
        description: Currency
        type: string
    required:
      - creditAmountType
      - amount

  ModifySubscriptionPayload:
    properties:
      priceFid:
        description: Price FID to modify subscription with
        type: string
      offerFid:
        description: Price FID to modify subscription with
        type: string
      mode:
        $ref: '#/definitions/ModifySubscriptionMode'
    required:
      - priceFid

  CalculateRefundPayload:
    properties:
      subscriptionRefundType:
        $ref: '#/definitions/SubscriptionRefundType'
      refundFromDate:
        description: Timestamp of when to calculate the refund from. Rounded down to the start of the day. Default to start of tomorrow
        type: number
        format: int32
      includeDetails:
        type: boolean
      withTerminationFee:
        type: boolean
    required:
      - subscriptionRefundType

  SubscriptionCancelPayload:
    properties:
      reasonFid:
        description: Reason FID
        type: string
      subscriptionRefundType:
        $ref: '#/definitions/SubscriptionRefundType'
      cancelAtNextRenewal:
        type: boolean
    required:
      - subscriptionRefundType

  CreatePolymerPayload:
    properties:
      polymerCode:
        description: Code for polymer type
        type: string
      name:
        description: Display name for this polymer
        type: string
      parentFid:
        description: Fid for the parent of this polymer e.g. customerFid
        type: string
      description:
        description: Description for this polymer
        type: string

  RequestUploadUrlPayload:
    properties:
      filename:
        description: Attachment file name
        type: string
      filesize:
        description: Attachment file size
        type: string
      md5checksum:
        description: Attachment checksum md5
        type: string
      mimeType:
        description: Attachment mime type
        type: string

  CreateAdvertiserPayload:
    description: Payload for creating an advertiser
    properties:
      username:
        type: string
        description: Username
      email:
        type: string
        description: Email Address
      password:
        type: string
        description: Password
      type:
        $ref: '#/definitions/advertiserType'
      displayName:
        description: Visible Display Name
        type: string
      contactName:
        type: string
        description: Name of the person
      companyName:
        type: string
        description: Name of the company
      phone:
        description: Phone Number
        type: string
      website:
        type: string
        description: URL
      accountManagerFid:
        description: FID of an Account Manager
        type: string
      foundationFid:
        description: FID of a valid Foundation
        type: string
      brandFid:
        description: FID of a valid Brand
        type: string
    required:
      - username
      - password
      - type
      - contactName

  CreateAdvertiserCampaignPayload:
    description: Payload for creating an advertiser campaign
    properties:
      brandFid:
        description: FID of a valid Brand
        type: string
      displayName:
        description: Visible Display Name
        type: string
    required:
      - brandFid
      - displayName

  keyValuePayload:
    description: Key Value Payload
    properties:
      key:
        type: string
      value:
        type: string

  PostActionPayload:
    properties:
      transactionId:
        description: Your unique transaction ID for this event e.g. Order ID
        type: string
      transactionValue:
        description: Your unique transaction ID for this event
        type: number
        format: float
      couponCode:
        description: Coupon code used for the transaction
        type: string
      returnPixels:
        description: |
          Setting to true will return advertiser pixels for this event
        type: boolean
        default: true
      productCode:
        type: string
        description: Product Code linked to this action
      productTerm:
        type: string
        description: Product Term
      paymentMethod:
        type: string
        description: Payment method used on this transaction
      username:
        type: string
        description: Username associated with this transaction (e.g. Join)
      userAgent:
        description: User Agent of the visitors browser 'HTTP_USER_AGENT'
        type: string
      encoding:
        description: Encoding from the visitors browser 'HTTP_ACCEPT_ENCODING'
        type: string
      language:
        description: Language from visitors browser 'HTTP_ACCEPT_LANGUAGE'
        type: string
      clientIp:
        description: IP Address of the visitor
        type: string
      externalReference:
        description: External (to Fortifi) Reference for this visitor e.g. a user ID
        type: string
      brandFid:
        description: FID of a valid Brand
        type: string
      campaignHash:
        description: |
          Advertiser Campaign to track this action to (if not already locked)
        type: string
      sid1:
        type: string
        description: Advertised sub tracking ID 1
      sid2:
        type: string
        description: Advertised sub tracking ID 2
      sid3:
        type: string
        description: Advertised sub tracking ID 3
      metaData:
        $ref: '#/definitions/metaData'
      time:
        description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
        type: string
        format: date-time
      useExistingDeviceIfAvailable:
        type: boolean
        description: If an existing device exists for the visitor, prefer that over the user agent sent in this payload
    required:
      - brandFid

  ReverseActionPayload:
    properties:
      userAgent:
        description: User Agent of the visitors browser 'HTTP_USER_AGENT'
        type: string
      encoding:
        description: Encoding from the visitors browser 'HTTP_ACCEPT_ENCODING'
        type: string
      language:
        description: Language from visitors browser 'HTTP_ACCEPT_LANGUAGE'
        type: string
      clientIp:
        description: IP Address of the visitor
        type: string
      externalReference:
        description: External (to Fortifi) Reference for this visitor e.g. a user ID
        type: string
      time:
        description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
        type: string
        format: date-time
      metaData:
        $ref: '#/definitions/metaData'
      sourceTransactionId:
        description: Your unique transaction ID for the event to be reversed
        type: string
      reason:
        $ref: '#/definitions/reversalReason'
      reversalAmount:
        description: Amount of revene refunded to the client from the original transaction / chargeback amount
        type: number
        format: float
      reversalId:
        description: Your unique transaction ID for this event e.g. Refund ID
        type: string
      eventId:
        description: If known, the Fortifi event ID for this visitors action
        type: string

  CreateCustomerPayload:
    description: Payload for creating a customer
    properties:
      visitorId:
        description: Visitor ID of the visitor
        type: string
      clientIp:
        description: IP Address of the visitor
        type: string
      externalReference:
        description: External (to Fortifi) Reference e.g. your internal Unique ID
        type: string
      time:
        description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
        type: string
        format: date-time
      brandFid:
        description: FID of a valid Brand
        type: string
      currency:
        description: Currency
        type: string
      phoneNumber:
        description: Phone Number
        type: string
      email:
        type: string
        description: Email Address
      firstName:
        description: First Name
        type: string
      lastName:
        description: Last Name
        type: string
      accountManagerFid:
        description: FID of an Account Manager
        type: string
      accountType:
        $ref: '#/definitions/customerAccountType'
      accountStatus:
        $ref: '#/definitions/customerAccountStatus'
      lifecycle:
        $ref: '#/definitions/customerLifecycle'
      subscriptionType:
        $ref: '#/definitions/customerSubscriptionType'
      language:
        type: string
        description: Language
    required:
      - brandFid

  SetCustomerLocationPayload:
    properties:
      continent:
        type: string
        description: Continent
      country:
        type: string
        description: Country
      county:
        type: string
        description: County
      city:
        type: string
        description: City
      postal:
        type: string
        description: Postal
      timezone:
        type: string
        description: Timezone
      clientIp:
        type: string
        description: Client IP Address

  SetAccountStatusPayload:
    properties:
      accountStatus:
        $ref: '#/definitions/customerAccountStatus'

  SetAccountTypePayload:
    properties:
      accountType:
        $ref: '#/definitions/customerAccountType'

  SetSubscriptionTypePayload:
    description: Subscription Type
    properties:
      subscriptionType:
        $ref: '#/definitions/customerSubscriptionType'

  PropertyValuePayload:
    description: Value Property
    properties:
      propertyValue:
        description: Property Value
        type: string

  PropertyBulkSetPayload:
    description: Set Many Properties
    properties:
      values:
        type: array
        description: Additional information to store
        items:
          $ref: '#/definitions/keyValuePayload'
      flags:
        type: array
        description: Additional information to store
        items:
          $ref: '#/definitions/keyValuePayload'
      incrementCounters:
        type: array
        description: Additional information to store
        items:
          $ref: '#/definitions/keyValuePayload'
      decrementCounters:
        type: array
        description: Additional information to store
        items:
          $ref: '#/definitions/keyValuePayload'

  PropertyFlagPayload:
    description: Flag Property
    properties:
      propertyValue:
        description: Property Flag Value
        type: boolean

  PropertyCounterPayload:
    description: Counter Property
    properties:
      propertyValue:
        description: Property Counter Adjustment
        type: integer
        format: int32

  TriggerActionPayload:
    properties:
      metaData:
        $ref: '#/definitions/metaData'
      time:
        description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
        type: string
        format: date-time
      alias:
        type: string
        description: Your alias for the event to be triggered
      triggerMessenger:
        type: boolean
        description: If set to true, transactional messenger chains will be triggered

  CardDataPayload:
    properties:
      cardDisplayName:
        description: Visible Display Name
        type: string
      encryptedCardNumber:
        description: Card number encrypted using your public key
        type: string
      startMonth:
        description: Start Month of the card
        type: integer
        format: int32
      startYear:
        description: Start Year of the card
        type: integer
        format: int32
      expiryMonth:
        description: Expiration Month of the card
        type: integer
        format: int32
      expiryYear:
        description: Expiration Year of the card
        type: integer
        format: int32
      last4:
        description: Last 4 digits of the credit card number
        type: string
      cardType:
        description: Card issuer (visa, mastercard, etc)
        type: string
      issue:
        description: Issue number of the card
        type: integer
        format: int32
      cardHolder:
        description: Name as appears on card
        type: string
      addressFid:
        description: FID of an existing address to use with the card
        type: string
      addressLine1:
        description: Address Line 1 of the card
        type: string
      addressLine2:
        description: Address Line 2 of the card
        type: string
      addressLine3:
        description: Address Line 3 of the card
        type: string
      addressCity:
        description: City for the card
        type: string
      addressState:
        description: State/County of the card
        type: string
      addressCountry:
        description: Country of the card
        type: string
      addressPostal:
        description:  Postal/Zip Code of the card
        type: string
      preAuthAmount:
        description: Pre Auth the card for this value to verify the card can be charged.  (Pre Auth will be voided)
        type: number
        format: float
      isDefault:
        description: Is this card should be used as the primary card on the account
        type: boolean

  CardUpdatePayload:
    description: Update card details
    properties:
      cardHolder:
        description: Name as appears on card
        type: string
      startMonth:
        description: Start Month of the card
        type: integer
        format: int32
      startYear:
        description: Start Year of the card
        type: integer
        format: int32
      expiryMonth:
        description: Expiration Month of the card
        type: integer
        format: int32
      expiryYear:
        description: Expiration Year of the card
        type: integer
        format: int32
      issue:
        description: Issue number of the card
        type: integer
        format: int32
      addressFid:
        description: FID of an existing address to use with the card
        type: string
      addressLine1:
        description: Address Line 1 of the card
        type: string
      addressLine2:
        description: Address Line 2 of the card
        type: string
      addressLine3:
        description: Address Line 3 of the card
        type: string
      addressCity:
        description: City for the card
        type: string
      addressState:
        description: State/County of the card
        type: string
      addressCountry:
        description: Country of the card
        type: string
      addressPostal:
        description:  Postal/Zip Code of the card
        type: string
      asDefault:
        type: boolean

  CreateOrderPayload:
    properties:
      paymentAccountFid:
        description: FID for the payment account you wish to charge the customer through
        type: string
      brandFid:
        description: FID of a valid Brand
        type: string
      customerFid:
        type: string
        description: FID for the customer placing the order
      clientIp:
        description: IP Address of the visitor
        type: string
      userAgent:
        description: User Agent of the visitors browser 'HTTP_USER_AGENT'
        type: string
      type:
        $ref: '#/definitions/CreateOrderType'
      productPriceFids:
        type: array
        description: Product price FIDs to add
        items:
          type: string
      offerFids:
        type: array
        description: Offer FIDs to apply to the order
        items:
          type: string
      chargeId:
        description: Charge ID provided by ChargeHive.com
        type: string

  OrderProductsPayload:
    properties:
      productPriceFids:
        type: array
        description: Product price FIDs to add
        items:
          type: string
      quantityProductPriceFids:
        type: array
        description: Products to add with specified quantity
        items:
          $ref: '#/definitions/OrderProductQuantityPayload'
      namesProductPriceFids:
        type: array
        description: Products to add with display names
        items:
          $ref: '#/definitions/OrderProductDisplayNamePayload'

  AddOrderProductsPayload:
    allOf:
      - $ref: '#/definitions/OrderProductsPayload'

  OrderProductQuantityPayload:
    properties:
      priceFid:
        description: Price FID to modify subscription with
        type: string
      quantity:
        type: integer
        format: int64
        default: 1
    required:
      - priceFid

  OrderProductDisplayNamePayload:
    properties:
      priceFid:
        description: Price FID to modify subscription with
        type: string
      displayName:
        type: string
    required:
      - priceFid

  FinalizeOrderPayload:
    properties:
      chargeId:
        description: ChargeHive Charge ID
        type: string
      methodId:
        description: Payment Method ID
        type: string
      transactionId:
        description: Transaction ID which authorized this order
        type: string

  ConfirmOrderPayload:
    properties:
      paymentServiceFid:
        description: FID for the payment service you wish to charge the customer through
        type: string
      paymentAccountFid:
        description: FID for the payment account you wish to charge the customer through
        type: string
      paymentServiceProcessor:
        $ref: '#/definitions/PaymentServiceProcessor'

  ConfirmCardOrderPayload:
    allOf:
      - $ref: '#/definitions/ConfirmOrderPayload'
      - properties:
          cvv:
            type: string

  ConfirmOrderWithNewCardPayload:
    properties:
      cardDisplayName:
        description: Visible Display Name
        type: string
      paymentServiceFid:
        description: FID for the payment service you wish to charge the customer through
        type: string
      encryptedCardNumber:
        description: Card number encrypted using your public key
        type: string
      startMonth:
        description: Start Month of the card
        type: integer
        format: int32
      startYear:
        description: Start Year of the card
        type: integer
        format: int32
      expiryMonth:
        description: Expiration Month of the card
        type: integer
        format: int32
      expiryYear:
        description: Expiration Year of the card
        type: integer
        format: int32
      issue:
        description: Issue number of the card
        type: integer
        format: int32
      last4:
        description: Last 4 digits of the credit card number
        type: string
      cardType:
        description: Card issuer (visa, mastercard, etc)
        type: string
      cardHolder:
        description: Name as appears on card
        type: string
      addressFid:
        description: FID of an existing address to use with the card
        type: string
      addressLine1:
        description: Address Line 1 of the card
        type: string
      addressLine2:
        description: Address Line 2 of the card
        type: string
      addressLine3:
        description: Address Line 3 of the card
        type: string
      addressCity:
        description: City for the card
        type: string
      addressState:
        description: State/County of the card
        type: string
      addressCountry:
        description: Country of the card
        type: string
      addressPostal:
        description:  Postal/Zip Code of the card
        type: string
      isDefault:
        description: Is this card should be used as the primary card on the account
        type: boolean

  ConfirmPayPalOrderPayload:
    allOf:
      - $ref: '#/definitions/ConfirmOrderPayload'
      - properties:
          token:
            type: string

  VerifyOrderPayload:
    allOf:
      - $ref: '#/definitions/ConfirmOrderPayload'
      - properties:
          successUrl:
            type: string
          cancelUrl:
            type: string
          failUrl:
            type: string

  CreateTicketPayload:
    properties:
      customerEmail:
        type: string
      customerName:
        type: string
      customerFid:
        type: string
      ticketType:
        type: string
      brandFid:
        type: string
      queueFid:
        type: string
      departmentFid:
        type: string
      departmentEmail:
        type: string
      departmentName:
        type: string
      subject:
        type: string
      textBody:
        type: string
      htmlBody:
        type: string

  #Properties
  creditAmountType:
    description: Credit amount type
    type: string
    enum:
      - percent_of_remaining
      - percent_of_total
      - fixed
  ModifySubscriptionMode:
    description: Mode to modify subscription with
    type: string
    enum:
      - prorate
      - extend
      - replace
  PaymentAccountType:
    description: Payment account type
    type: string
    enum:
      - unknown
      - visa
      - mastercard
      - amex
      - jcb
      - discover
      - diners
      - encrypted
      - paypal_personal
      - paypal_premier
      - paypal_business
      - paypal_verified
      - paypal_unverified
      - paypal
      - bitcoin
      - account_balance
  PaymentMethod:
    description: Payment Method
    type: string
    enum:
      - creditcard
      - debitcard
      - cheque
      - cash
      - prepaidcard
      - directdebit
      - bacs
      - standingorder
      - chaps
      - onlineservice
      - telephone
      - creditnote
      - virtualcard
      - giftcard
      - unknown
      - multiple
      - paypal
      - bitcoin
      - account_balance
  PaymentMode:
    description: Payment Mode
    type: string
    enum:
      - automatic
      - request
  metaData:
    type: array
    description: Additional information to store
    items:
      $ref: '#/definitions/keyValuePayload'
  reversalReason:
    description: The reason for reversing the action
    type: string
    enum:
      - chargeback
      - cancel
      - fraud
  advertiserType:
    description: Advertiser Type
    type: string
    enum:
      - affiliate
      - network
      - customer
  customerAccountType:
    description: Account Type
    type: string
    enum:
      - unknown
      - student
      - charity
      - business
      - residential
      - enterprise
      - group
  customerAccountStatus:
    description: Account Status
    type: string
    enum:
      - setup
      - active
      - suspended
      - expired
      - cancelled
  cycleTermType:
    description: Term Type
    type: string
    enum:
      - onetime
      - lifetime
      - day
      - week
      - month
      - year
  discountType:
    description: Discount Type
    type: string
    enum:
      - fixed
      - percentage
  customerLifecycle:
    description: Customer Lifecycle Stage
    type: string
    enum:
      - closed
      - cold
      - customer
      - evangelist
      - lead
      - mql
      - opportunity
      - other
      - prospect
      - recommended
      - sql
      - subscriber
  customerSubscriptionType:
    description: Customer Subscription Status
    type: string
    enum:
      - none
      - trial
      - free
      - paid
  PaymentServiceProcessor:
    description: Payment Service Processor Type
    type: string
    enum:
      - paypal
      - wire
      - blackhole
      - cheque
      - prepayment
      - fortifipay
      - coinbase
  CreateOrderType:
    description: Order Type (Must be initial to Auth Cards)
    type: string
    enum:
      - initial
      - purchase
  SubscriptionRefundType:
    description: Subscription Refund Type
    type: string
    enum:
      - prorate
      - full
  reasonGroupType:
    description: Reason Group Type
    type: string
    enum:
      - cancel
      - suspend
      - refund
      - credit
