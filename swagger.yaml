swagger: '2.0'
info:
  title: Fortifi API
  version: '3.142.0'
  termsOfService: 'https://fortifi.io/legal/terms/api'
  description: >
    The second version of the Fortifi API is an exciting step forward towards

    making it easier for businesses to have open access to their data. We created it

    so that you can improve your business flows, and interact with your customers

    and data in more innovative ways.



    Build something great!



    Once you've

    [registered your service account](https://yourdomain.fortifi.cloud/developers/service-accounts/) it's easy

    to start requesting and posting data to and from Fortifi.



    All endpoints are only accessible via https and are located at

    `api.fortifi.io`. For instance: you can grab a list of all your brands

    by accessing the following URL with your Access Token

    (replace ACCESS_TOKEN with your own):

    ```
      https://api.fortifi.io/v1/brands?access_token=ACCESS_TOKEN

    ```

    For non-GET requests, you must pass your ACCESS_TOKEN in the Authorization header else you will get an access denied
    response

    ```
        Authorization: Bearer ACCESS_TOKEN

    ```


    ## Limits

    Be nice. If you're sending too many requests too quickly, we'll send back a

    `503` error code (server unavailable).

    You are limited to 5000 requests per hour per `access_token`.



    ## Request Methods

    We do our best to have all URLs

    [RESTful](https://en.wikipedia.org/wiki/Representational_state_transfer).

    Every endpoint (URL) may support one of four different http verbs. GET

    requests fetch information about an object, POST requests create objects,

    PUT requests update objects, and finally DELETE requests will delete

    objects.



    ## Structure



    ### The Envelope

    Every response is contained by an envelope. That is, each response has a

    predictable set of keys with which you can expect to interact:

    ```json

    {
        'meta': {
            'code': 200
        },
        'data': {
            ...
        }
    }

    ```



    #### META

    The meta key is used to communicate extra information about the response to

    the developer. If all goes well, you'll only ever see a code key with

    value 200.

    However, sometimes things go wrong, and in that case you might see a

    response like:

    ```json

    {
        'meta': {
            'type': 'OAuthException',
            'code': 400,
            'message': '...'
        }
    }

    ```


    #### DATA

    The data key is the meat of the response. It may be a list or dictionary,

    but either way this is where you'll find the data you requested.

    #### JSONP

    If you're writing an AJAX application, and you'd like to wrap our response

    with a callback, all you have to do is specify a callback parameter with

    any API call:

    ```

    https://api.fortifi.io/v1/brands?access_token=ACCESS_TOKEN&callback=callbackFunction

    ```

    Would respond with:

    ```js

    callbackFunction({
        ...
    });

    ```
host: api.fortifi.io
schemes:
  - https
basePath: /v1
produces:
  - application/json
consumes:
  - application/json

externalDocs:
  description: Find out more about the Fortifi api
  url: https://docs.fortifi.io/

securityDefinitions:
  OAuth:
    type: oauth2
    tokenUrl: 'https://api.fortifi.io/oauth/token'
    flow: password
    scopes:
      'basic': Basic Read Access
      'visitor': Read/Write On Visitors
      'advertiser': Read/Write On Advertisers
      'customer': Read/Write On Customers
      'customer.readonly': Read Only on Customers
      'entity.properties': Read/Write On Entity Properties
      'entity.config': Read/Write On Entity Configuration
      'orders': Read/Write On Orders
      'orders.readonly': Read Only On Orders
      'products': Read/Write On Products
      'entity.events': Read/Write on Events
      'payment.methods': Read/Write On Payment Methods
      'contact': Read/Write On Contacts
      'polymer.readonly': Read Polymers
      'polymer': Read/Write On Polymers
      'product.readonly': Read Product Information
      'product': Read/Write On Products
      'purchase.readonly': Read Only on purchases
      'support': Read/Write On Support
      'support.readonly': Read Only on Support
      'reasons': Read/Write On reasons
      'reasons.readonly': Read Only on reasons
      'configuration.readonly': Read only for configuration
      'reservations': Read/Write reservations

  accessToken:
    type: apiKey
    in: query
    name: access_token

tags:
  - name: Authentication
  - name: Brands
  - name: Marketing
  - name: Customers
  - name: Entities
  - name: Orders
  - name: Payment Methods
  - name: Custom Properties
  - name: Configuration
  - name: Contacts
  - name: Polymers
  - name: Messenger
  - name: Products
  - name: Licence
  - name: Support
  - name: Service Status
  - name: Reasons
  - name: Events
  - name: Deprecated
  - name: Labels
  - name: Reservations
  - name: Finance

paths:
  '/account/verification':
    post:
      summary: Main Entry for Verification
      tags:
        - Account
      security:
        - OAuth:
            - account
        - accessToken: [ ]
      parameters:
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/AccountVerificationPayload'
      responses:
        200:
          description: Account Verification
          schema:
            $ref: '#/definitions/AccountVerificationResponse'
        x-404:
          description: Failed Account Verification
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
  /accountant/transaction/search:
    post:
      tags:
        - Accountant
      security:
        - OAuth:
            - basic
        - accessToken: [ ]
      summary: Find an Account Transaction
      description: |
        Find an Account Transaction based on purchase information
      parameters:
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/FindTransactionPayload'
      responses:
        200:
          description: Find Transaction Response
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/FindTransactionResponse'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
  /advertisers:
    post:
      deprecated: true
      summary: Create a new advertiser
      security:
        - OAuth:
            - advertiser
        - accessToken: []
      tags:
        - Deprecated
      parameters:
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateAdvertiserPayload'
      responses:
        200:
          description: Advertiser Created
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Fid'
        x-400:
          description: |
            Invalid data supplied
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

    get:
      deprecated: true
      summary: List advertisers
      security:
        - OAuth:
            - advertiser
        - accessToken: []
      tags:
        - Deprecated
      parameters:
        - name: limit
          in: query
          description: 'Maximum number of records per page (default: 20)'
          required: false
          type: integer
        - name: page
          in: query
          description: 'Page number (default: 1)'
          required: false
          type: integer
      responses:
        200:
          description: List of advertisers
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Advertisers'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  /advertisers/{advertiserFid}:
    get:
      deprecated: true
      security:
        - OAuth:
            - advertiser
        - accessToken: []
      tags:
        - Deprecated
      summary: Retrieve an advertiser
      parameters:
        - $ref: '#/parameters/advertiserFid'
      responses:
        200:
          description: Loaded Advertiser
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Advertiser'
        x-404:
          description: Advertiser not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  /advertisers/{advertiserFid}/approved:
    put:
      deprecated: true
      security:
        - OAuth:
            - advertiser
        - accessToken: []
      tags:
        - Deprecated
      summary: Set approved status on an advertiser
      parameters:
        - $ref: '#/parameters/advertiserFid'
      responses:
        200:
          description: Approved Advertiser
        x-404:
          description: Advertiser not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

    delete:
      deprecated: true
      summary: Remove approved status on an advertiser
      tags:
        - Deprecated
      security:
        - OAuth:
            - advertiser
        - accessToken: []
      parameters:
        - $ref: '#/parameters/advertiserFid'
      responses:
        200:
          description: Advertiser no longer approved
        x-404:
          description: Advertiser not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  /advertisers/{advertiserFid}/campaigns:
    post:
      deprecated: true
      summary: Create a new advertiser campaign
      security:
        - OAuth:
            - advertiser
        - accessToken: []
      tags:
        - Deprecated
      parameters:
        - $ref: '#/parameters/advertiserFid'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateAdvertiserCampaignPayload'
      responses:
        200:
          description: Campaign Created
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Fid'
        x-400:
          description: Invalid data supplied
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  /advertisers/{advertiserFid}/campaigns/{advertiserCampaignFid}:
    get:
      deprecated: true
      security:
        - OAuth:
            - advertiser
        - accessToken: []
      tags:
        - Deprecated
      summary: Retrieve an advertiser campaign
      parameters:
        - $ref: '#/parameters/advertiserFid'
        - $ref: '#/parameters/advertiserCampaignFid'
      responses:
        200:
          description: Loaded Campaign
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/AdvertiserCampaign'
        x-404:
          description: Campaign not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
  /appstore/{customerFid}/google:
    post:
      tags:
        - Appstore
      security:
        - OAuth:
            - basic
        - accessToken: [ ]
      summary: Post a new Google notification
      description: |
        Post a new Google notification.
      parameters:
        - $ref: '#/parameters/customerFid'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateGoogleNotificationPayload'
      responses:
        200:
          description: Bool Response
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/BoolMessage'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  /appstore/{customerFid}/apple:
    post:
      tags:
        - Appstore
      security:
        - OAuth:
            - basic
        - accessToken: [ ]
      summary: Post a new Apple notification
      description: |
        Post a new Apple notification.
      parameters:
        - $ref: '#/parameters/customerFid'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateAppleNotificationPayload'
      responses:
        200:
          description: Bool Response
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/BoolMessage'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
  '/attachment/{entityFid}':
    post:
      summary: Create An Attachment
      tags:
        - attachment
      security:
        - OAuth:
            - attachment
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/entityFid'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateAttachmentPayload'
      responses:
        200:
          description: Attachment Successfully Created
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/BoolMessage'
        x-400:
          description: Couldn't Create Attachment
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
  /brands:
    get:
      tags:
        - Brands
      security:
        - OAuth:
            - basic
        - accessToken: []
      summary: Your Brand
      operationId: getBrands
      description: |
        Retrieve a list of all the brands within your Fortifi account
      responses:
        200:
          description: Brand Information
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Brands'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
  /presetChat:
    post:
      summary: Create a Preset Chat Instance
      tags:
        - Chat
      security:
        - OAuth:
            - chat
        - accessToken: [ ]
      parameters:
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreatePresetChatSessionPayload'
      responses:
        200:
          description: Device created/updated
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/PresetChatSessionLink'
        x-400:
          description: Information provided is not valid
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  /presetChat/{sessionId}:
    get:
      summary: Get a Preset Chat by ID
      tags:
        - Chat
      security:
        - OAuth:
            - chat
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/sessionId'
      responses:
        200:
          description: Preset Chat Session
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/PresetChatSession'
        x-404:
          description: Preset Chat not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
  /comments:
    post:
      summary: Apply a comment/note against a data-node
      tags:
        - Comments
      security:
        - OAuth:
            - comments
        - accessToken: [ ]
      parameters:
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateCommentPayload'
      responses:
        200:
          description: Comment/Note created
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/CommentResponse'
        x-400:
          description: Information provided is not valid
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
  /contacts/findByReference/{contactReference}:
    get:
      summary: Find a person with a reference
      tags:
        - Contacts
      security:
        - OAuth:
            - contact
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/contactReference'
      responses:
        200:
          description: Person info
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Person'
        x-404:
          description: Person not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/contacts/emails/{emailAddress}/confirm':
    put:
      summary: Confirm email address
      tags:
        - Contacts
      security:
        - OAuth:
            - contact
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/emailAddress'
      responses:
        200:
          description: Email Address Confirmed
        x-404:
          description: Email Address not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/contacts/emails/{emailAddress}/unsubscribe':
    put:
      summary: Unsubscribe an email address
      tags:
        - Contacts
      security:
        - OAuth:
            - contact
        - accessToken: [ ]
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/emailAddress'
        - $ref: '#/parameters/unsubscribeType'
        - name: brandFid
          in: formData
          type: string
          description: Brand to unsubscribe the email address from
        - name: groupFid
          in: formData
          type: string
          description: Group to unsubscribe the email address from
      responses:
        200:
          description: Email Address Unsubscribed
        x-404:
          description: Email Address not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/contacts/emails/{emailAddress}/subscribe':
    put:
      summary: Subscribe an email address
      tags:
        - Contacts
      security:
        - OAuth:
            - contact
        - accessToken: [ ]
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/emailAddress'
        - name: brandFid
          in: formData
          type: string
          description: Brand to subscribe the email address from
        - name: groupFid
          in: formData
          type: string
          description: Group to unsubscribe the email address from
        - $ref: '#/parameters/userAgent'
        - $ref: '#/parameters/encoding'
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/clientIp'
        - $ref: '#/parameters/optInStatus'
        - $ref: '#/parameters/optInData'
      responses:
        200:
          description: Email Address Subscribed
        x-404:
          description: Email Address not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/contacts/phone/{phoneNumber}/confirm':
    put:
      summary: Confirm phone number
      tags:
        - Contacts
      security:
        - OAuth:
            - contact
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/phoneNumber'
      responses:
        200:
          description: Phone Number Confirmed
        x-404:
          description: Phone Number not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/contacts/{contactFid}/addresses':
    get:
      summary: List contact addresses
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/contactFid'
      responses:
        200:
          schema:
            $ref: '#/definitions/Addresses'
          description: List of addresses
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
    post:
      summary: Add an address to a contact
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/contactFid'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/AddressPayload'
      responses:
        200:
          description: Address Added
        x-404:
          description: Contact not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/contacts/{contactFid}/addresses/{addressFid}':
    delete:
      summary: Remove an address from a contact
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/contactFid'
        - $ref: '#/parameters/addressFid'
      responses:
        200:
          description: Address removed
        x-404:
          description: Address or contact not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/contacts/{contactFid}/emails':
    get:
      summary: List contact emails
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/contactFid'
      responses:
        200:
          schema:
            $ref: '#/definitions/Emails'
          description: List of emails
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
    post:
      summary: Add an email address to a contact
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/contactFid'
        - name: emailAddress
          in: formData
          required: true
          type: string
        - name: setAsDefault
          in: formData
          required: false
          type: boolean
      responses:
        200:
          description: Email Added
        x-404:
          description: Contact not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/contacts/{contactFid}/emails/{emailFid}':
    delete:
      summary: Remove an email from a contact
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/contactFid'
        - $ref: '#/parameters/emailFid'
      responses:
        200:
          description: Email removed
        x-404:
          description: Email or contact not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/contacts/{contactFid}/phones':
    get:
      summary: List contact phones
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/contactFid'
      responses:
        200:
          schema:
            $ref: '#/definitions/Phones'
          description: List of phones
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
    post:
      summary: Add a phone number to a contact
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/contactFid'
        - name: phoneNumber
          in: formData
          required: true
          type: string
        - name: displayName
          in: formData
          type: string
        - name: setAsDefault
          in: formData
          required: false
          type: boolean
        - $ref: '#/parameters/optInStatus'
      responses:
        200:
          description: Phone Number Added
        x-404:
          description: Contact not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/contacts/{contactFid}/phones/{phoneFid}':
    delete:
      summary: Remove a phone
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/contactFid'
        - $ref: '#/parameters/phoneFid'
      responses:
        200:
          description: Phone removed
        x-404:
          description: Contact or phone not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/contacts/device/{hardwareId}/unsubscribe':
    put:
      summary: Unsubscribe a device
      tags:
        - Contacts
      security:
        - OAuth:
            - contact
        - accessToken: [ ]
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/hardwareId'
        - $ref: '#/parameters/unsubscribeType'
        - name: brandFid
          in: formData
          type: string
          description: Brand to unsubscribe the device from
        - name: groupFid
          in: formData
          type: string
          description: Group to unsubscribe the device from
        - name: entityFid
          in: formData
          type: string
          description: Entity to unsubscribe the device from (Fid)
      responses:
        200:
          description: Device Unsubscribed
        x-404:
          description: Device not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/contacts/device/{hardwareId}/subscribe':
    put:
      summary: Subscribe an device
      tags:
        - Contacts
      security:
        - OAuth:
            - contact
        - accessToken: [ ]
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/hardwareId'
        - name: brandFid
          in: formData
          type: string
          description: Brand to subscribe the device to
        - name: groupFid
          in: formData
          type: string
          description: Group to subscribe the device to
        - name: entityFid
          in: formData
          type: string
          description: Customer or Contact Fid linked to device (Fid)
        - $ref: '#/parameters/userAgent'
        - $ref: '#/parameters/encoding'
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/clientIp'
        - $ref: '#/parameters/optInStatus'
        - $ref: '#/parameters/optInData'
      responses:
        200:
          description: Device Subscribed
        x-404:
          description: Device not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
  '/customers/{customerFid}/payments/{paymentFid}/chargeback':
    post:
      summary: Initiate a chargeback on a payment
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: []
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/paymentFid'
        - name: dateSubmitted
          type: string
          format: date-time
          in: formData
          required: true
          description: Date the chargeback was received (Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z)
        - name: reasonCode
          type: string
          in: formData
          required: true
          description: Chargeback Reason Code (see https://github.com/packaged/rwd/blob/master/src/Finance/Chargeback/ChargebackReasonHelper.php)
        - name: caseNumber
          type: string
          in: formData
          required: true
          description: Case Number
        - name: amount
          type: number
          format: float
          in: formData
          required: true
          description: Disputed Amount
        - $ref: '#/parameters/chargebackState'
        - $ref: '#/parameters/chargebackSource'
        - name: refunded
          type: boolean
          in: formData
          required: true
          description: If this payment has been refunded by the alert
        - name: description
          type: string
          in: formData
          required: false
          description: Notes
        - name: feeCurrency
          type: string
          in: formData
          required: false
          description: 3 Character Currency code for the fee
        - name: feeAmount
          type: number
          format: float
          in: formData
          required: false
          description: Fee Amount
      responses:
        200:
          description: Chargeback Opened
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Fid'
        x-400:
          description: Invalid Payload
        x-404:
          description: Invalid Payment Fid
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/chargebacks/{chargebackFid}':
    put:
      summary: Action a chargeback
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: []
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/customerFid'
        - name: chargebackFid
          in: path
          type: string
          required: true
          description: Chargeback FID to use
        - name: reasonCode
          type: string
          in: formData
          required: true
          description: Chargeback Reason Code (see https://github.com/packaged/rwd/blob/master/src/Finance/Chargeback/ChargebackReasonHelper.php)
        - name: caseNumber
          type: string
          in: formData
          required: true
          description: Case Number
        - $ref: '#/parameters/chargebackState'
        - name: refunded
          type: boolean
          in: formData
          required: true
          description: If this payment has been refunded by the alert
        - name: description
          type: string
          in: formData
          required: false
          description: Notes
      responses:
        200:
          description: Chargeback Actioned
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/BoolMessage'
        x-400:
          description: Invalid Payload
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
  '/customers/{customerFid}/contacts':
    get:
      summary: List of people
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/customerFid'
        - name: limit
          in: query
          description: 'Maximum number of records per page (default: 20)'
          required: false
          type: integer
        - name: page
          in: query
          description: 'Page number (default: 1)'
          required: false
          type: integer
      responses:
        200:
          description: List of people
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/People'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
    post:
      summary: Create a new contact for a customer
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      consumes:
        - multipart/form-data
        - application/json
      parameters:
        - $ref: '#/parameters/customerFid'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateCustomerContactPayload'
      responses:
        200:
          description: FID of the new contact
        x-404:
          description: Customer not found
        x-409:
          description: Conflict
        default:
          description: Error
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Fid'

  '/customers/{customerFid}/contacts/{contactFid}':
    put:
      summary: Update a contacts information
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/contactFid'
        - name: prefix
          in: formData
          required: false
          description: Prefix
          type: string
        - name: firstName
          in: formData
          required: false
          description: First Name
          type: string
        - name: middleNames
          in: formData
          required: false
          description: Middle Names
          type: string
        - name: lastName
          in: formData
          required: false
          description: Last Name
          type: string
        - name: suffix
          in: formData
          required: false
          description: Suffix
          type: string
        - name: nickname
          in: formData
          required: false
          description: Nickname
          type: string
        - name: birthday
          in: formData
          required: false
          description: Birthday
          type: string
        - name: jobTitle
          in: formData
          required: false
          description: Job Title
          type: string
        - name: defaultEmailFid
          in: formData
          required: false
          description: Default Email FID
          type: string
        - name: defaultPhoneFid
          in: formData
          required: false
          description: Default Phone FID
          type: string
        - name: defaultAddressFid
          in: formData
          required: false
          description: Default Address FID
          type: string
        - name: externalReference
          in: formData
          required: false
          description: External Reference
          type: string
      responses:
        200:
          description: Contact Updated
        x-404:
          description: Contact or Customer not found
        x-409:
          description: Conflict
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
    get:
      summary: Retrieve information about a contact
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/contactFid'
        - name: allAddresses
          in: query
          required: false
          description: Load all addresses
          type: boolean
        - name: allEmails
          in: query
          required: false
          description: Load all emails
          type: boolean
        - name: allPhones
          in: query
          required: false
          description: Load all phones
          type: boolean
      responses:
        200:
          description: Contact Info
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Person'
        x-404:
          description: Contact or Customer not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
    delete:
      summary: Remove a contact
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/contactFid'
      responses:
        200:
          description: Contact removed
        x-404:
          description: Contact or Customer not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'


  '/customers/{customerFid}/addresses':
    get:
      summary: List customers addresses
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/customerFid'
      responses:
        200:
          schema:
            $ref: '#/definitions/Addresses'
          description: List of addresses
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
    post:
      summary: Add an address to a customer
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/customerFid'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/AddressPayload'
      responses:
        200:
          description: Address Added
        x-404:
          description: Customer not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/addresses/{addressFid}':
    delete:
      summary: Remove an address
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/addressFid'
      responses:
        200:
          description: Address removed
        x-404:
          description: Address not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/emails':
    get:
      summary: List customers emails
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/customerFid'
      responses:
        200:
          schema:
            $ref: '#/definitions/Emails'
          description: List of emails
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
    post:
      summary: Add an email address to a customer
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/customerFid'
        - name: emailAddress
          in: formData
          required: true
          type: string
        - name: setAsDefault
          in: formData
          required: false
          type: boolean
      responses:
        200:
          description: Email Added
        x-404:
          description: Customer not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/emails/{emailFid}':
    delete:
      summary: Remove an email
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/emailFid'
      responses:
        200:
          description: Email removed
        x-404:
          description: Email not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/phones':
    get:
      summary: List customers phones
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/customerFid'
      responses:
        200:
          schema:
            $ref: '#/definitions/Phones'
          description: List of phones
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
    post:
      summary: Add a phone number to a customer
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/customerFid'
        - name: phoneNumber
          in: formData
          required: true
          type: string
        - name: displayName
          in: formData
          type: string
        - name: setAsDefault
          in: formData
          required: false
          type: boolean
        - $ref: '#/parameters/optInStatus'
      responses:
        200:
          description: Phone Number Added
        x-404:
          description: Customer not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/phones/{phoneFid}':
    delete:
      summary: Remove a phone
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/phoneFid'
      responses:
        200:
          description: Phone removed
        x-404:
          description: Phone not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
  '/customers/{customerFid}/chatSessions':
    get:
      summary: Retrieve chat sessions for customer
      tags:
        - Customers
      security:
        - OAuth:
            - customer
            - customer.readonly
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/customerFid'
        - name: limit
          in: query
          description: 'Maximum number of records per page (default: 20)'
          required: false
          type: integer
        - name: page
          in: query
          description: 'Page number (default: 1)'
          required: false
          type: integer
      responses:
        200:
          description: Chat sessions
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/ChatSessions'
        x-404:
          description: Customer not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/interactions':
    post:
      summary: Create an interaction
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/interactionType'
      responses:
        200:
          description: Create Interaction Response
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/CreateInteraction'
        x-404:
          description: Customer not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
    get:
      summary: List Customer interactions
      tags:
        - Customers
        - Interaction
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/customerFid'
      responses:
        200:
          schema:
            $ref: '#/definitions/CustomerInteractions'
          description: List Customer Interactions
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/tickets':
    post:
      summary: Create a new support ticket
      description: >
        The attachments property is an array of unique filenames that have been created using ```/upload/uploadUrl```
      tags:
        - Customers
        - Support
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/customerFid'
        - name: subject
          in: formData
          required: true
          description: Subject of the support ticket
          type: string
        - name: content
          in: formData
          required: true
          description: Content of the support ticket
          type: string
        - name: recipient
          in: formData
          required: true
          description: Receiver email address e.g. support@yourdomain.com
          type: string
        - name: sender
          in: formData
          required: true
          description: Sender email address e.g. user@customer.com
          type: string
        - name: departmentFid
          in: formData
          required: false
          description: Department FID
          type: string
        - name: attachments
          in: formData
          required: false
          type: array
          items:
            type: string
      responses:
        200:
          description: Ticket Created
        x-404:
          description: Customer not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
    get:
      summary: Get support tickets for customer
      tags:
        - Customers
        - Support
      security:
        - OAuth:
            - entity.config
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/customerFid'
        - name: limit
          in: query
          description: 'Maximum number of records per page (default: 20)'
          required: false
          type: integer
        - name: page
          in: query
          description: 'Page number (default: 1)'
          required: false
          type: integer
        - name: sortDirection
          in: query
          description: 'Sort the tickets in a specific order (default: ASC)'
          required: false
          type: string
        - name: sortBy
          in: query
          description: 'Sort the tickets by a specific field (default: dateCreated)'
          required: false
          type: string
      responses:
        200:
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Tickets'
          description: Ticket collection
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/tickets/{ticketFid}/posts/{ticketPostTimestamp}/attachments':
    get:
      summary: Get attachments for a ticket post
      tags:
        - Customers
        - Support
      security:
        - OAuth:
            - entity.config
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/ticketFid'
        - $ref: '#/parameters/ticketPostTimestamp'
      responses:
        200:
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Attachments'
          description: List of ticket attachments
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/tickets/{ticketFid}/posts':
    get:
      summary: Retrieve ticket posts for a ticket
      tags:
        - Customers
        - Support
      security:
        - OAuth:
            - entity.config
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/ticketFid'
        - name: limit
          in: query
          description: 'Maximum number of records per page (default: 20, max: 100)'
          required: false
          type: integer
        - name: beforeTimestamp
          in: query
          description: 'Show posts before timestamp'
          required: false
          type: integer
          format: int64
        - name: includeHtml
          in: query
          description: 'Respond with the html body as a part of the response'
          type: boolean
          required: false
      responses:
        200:
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/TicketPosts'
          description: Ticket Data
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
    post:
      summary: Post a reply to a ticket
      description: >
        The attachments property is an array of unique filenames that have been created using ```/upload/uploadUrl```
      tags:
        - Customers
        - Support
      security:
        - OAuth:
            - entity.config
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/ticketFid'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/TicketReplyPayload'
      responses:
        200:
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/TicketPost'
          description: Ticket Data
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/tickets/{ticketFid}':
    get:
      summary: Retrieve a single ticket for a customer
      tags:
        - Customers
        - Support
      security:
        - OAuth:
            - entity.config
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/ticketFid'
      responses:
        200:
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Ticket'
          description: Ticket Data
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
  '/customers/{customerFid}/invoices':
    get:
      summary: List of invoice summaries for given customer
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/customerFid'
        - name: limit
          in: query
          description: 'Maximum number of records per page (default: 20)'
          required: false
          type: integer
        - name: page
          in: query
          description: 'Page number (default: 1)'
          required: false
          type: integer
      responses:
        200:
          description: List of invoices summaries
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Invoices'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/invoices/{invoiceFid}':
    get:
      summary: Retreive a specific itemised invoice
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/invoiceFid'
      responses:
        200:
          description: Loaded invoice
          schema:
            $ref: '#/definitions/Invoice'
        x-404:
          description: Invoice not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/invoices/{invoiceFid}/download':
    get:
      summary: Retreive a specific itemised invoice PDF
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/invoiceFid'
        - name: filename
          in: query
          type: string
      responses:
        200:
          description: Download URL
          schema:
            $ref: '#/definitions/InvoiceDownloadResponse'
        x-404:
          description: Invoice not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/invoices/retry':
    put:
      summary: Retry payment of all customer invoices which are in invoice
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/customerFid'
      responses:
        200:
          description: Invoice set to retry payment
        x-404:
          description: Customer or Invoice not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/invoices/{invoiceFid}/retry':
    put:
      summary: Retry payment of invoice
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/invoiceFid'
      responses:
        200:
          description: Invoice set to retry payment
        x-404:
          description: Customer or Invoice not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/invoices/{invoiceFid}/creditNote':
    post:
      summary: Add a credit note to a customers invoice
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/invoiceFid'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/InvoiceCreditNotePayload'
      responses:
        200:
          description: Credit Note Added
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/InvoiceCreditNote'
        x-404:
          description: Invoice not found
        x-400:
          description: Issue adding credit note to invoice
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
  '/customers/{customerFid}/accountStatus':
    put:
      summary: Update a customers status
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/customerFid'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/SetAccountStatusPayload'
      responses:
        200:
          description: Customer Status Updated
        x-404:
          description: Customer not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'


  '/customers/{customerFid}/lifecycleStage':
    put:
      summary: Update a customers lifecycle stage
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/customerFid'
        - name: customerLifecycle
          in: formData
          required: true
          type: string
      responses:
        200:
          description: Customer lifecycle updated
        x-404:
          description: Customer not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/location':
    put:
      summary: Update a customers location
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/customerFid'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/SetCustomerLocationPayload'
      responses:
        200:
          description: Customer Status Updated
        x-404:
          description: Customer not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/accountType':
    put:
      summary: Update a customers status
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/customerFid'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/SetAccountTypePayload'
      responses:
        200:
          description: Customer Status Updated
        x-404:
          description: Customer not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/subscriptionType':
    put:
      summary: Update a customers status
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/customerFid'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/SetSubscriptionTypePayload'
      responses:
        200:
          description: Customer Status Updated
        x-404:
          description: Customer not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/qualified':
    put:
      summary: Mark customer as qualified, this action cannot be undone.
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/isoTime'
      responses:
        200:
          description: Customer Marked
        x-404:
          description: Customer not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/chargeback':
    put:
      summary: Mark customer as charged back, this action cannot be undone.
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/isoTime'
      responses:
        200:
          description: Customer Marked
        x-404:
          description: Customer not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/fraud':
    put:
      summary: Mark customer as fraudulent, this action cannot be undone.
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/isoTime'
      responses:
        200:
          description: Customer Marked
        x-404:
          description: Customer not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/purchased':
    put:
      summary: Mark customer as purchased, this action cannot be undone.
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/isoTime'
      responses:
        200:
          description: Customer Marked
        x-404:
          description: Customer not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/loyal':
    put:
      summary: Set customer loyalty flag
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/customerFid'
      responses:
        200:
          description: Customer Loyalty Acknowledged
        x-404:
          description: Customer not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

    delete:
      summary: Remove customer loyalty flag
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/customerFid'
      responses:
        200:
          description: Customer No Longer Loyal
        x-404:
          description: Customer not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/vip':
    put:
      summary: Set customer as VIP
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/customerFid'
      responses:
        200:
          description: Customer Now VIP
        x-404:
          description: Customer not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

    delete:
      summary: Remove customer VIP Status
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/customerFid'
      responses:
        200:
          description: Customer No Longer VIP
        x-404:
          description: Customer not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/currency':
    put:
      summary: Set customer Currency
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/customerFid'
        - name: currency
          in: formData
          required: true
          description: Currency (ISO 4217, 3 Character Code)
          type: string
      responses:
        200:
          description: Customer Currency Updated
        x-404:
          description: Customer not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'



  '/customers/{customerFid}/linkVisitor':
    put:
      summary: Link visitor to customer record
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/customerFid'
        - name: visitorId
          in: formData
          required: true
          description: Visitors Id
          type: string
      responses:
        200:
          description: Visitor ID linked to customer
        x-404:
          description: Customer or visitor not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/externalReference':
    put:
      summary: Update a customers external reference
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/customerFid'
        - name: externalReference
          in: formData
          required: true
          description: New External Reference
          type: string
      responses:
        200:
          description: External Reference Updated
        x-404:
          description: Customer not found
        x-409:
          description: Conflict
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
  '/customers/{customerFid}/note':
    post:
      summary: Save a note against a customer
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: []
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/customerFid'
        - name: note
          in: formData
          required: true
          description: Text content of note
          type: string
        - $ref: '#/parameters/noteColor'
      responses:
        200:
          description: Customer note saved
        x-400:
          description: Invalid Payload
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
  '/customers/{customerFid}/paymentAccounts':
    get:
      summary: List customers payment accounts
      tags:
        - Customers
        - Payment Methods
      security:
        - OAuth:
            - payment.methods
        - accessToken: []
      parameters:
        - $ref: '#/parameters/customerFid'
      responses:
        200:
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/PaymentAccounts'
          description: List of payment accounts
        x-400:
          description: Error retrieving payment accounts
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'


  '/customers/{customerFid}/paymentAccounts/{paymentAccountFid}':
    get:
      summary: Retrieve payment account
      tags:
        - Customers
        - Payment Methods
      security:
        - OAuth:
            - payment.methods
        - accessToken: []
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/paymentAccountFid'
      responses:
        200:
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/PaymentAccount'
          description: Payment Method Information
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/paymentMethods':
    get:
      summary: List customers payment methods
      tags:
        - Customers
        - Payment Methods
      security:
        - OAuth:
            - payment.methods
        - accessToken: []
      parameters:
        - $ref: '#/parameters/customerFid'
      responses:
        200:
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/PaymentMethods'
          description: List of payment methods
        x-400:
          description: Error retrieving payment methods
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/paymentMethods/{paymentMethodFid}':
    get:
      summary: Retrieve a payment method
      tags:
        - Customers
        - Payment Methods
      security:
        - OAuth:
            - payment.methods
        - accessToken: []
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/paymentMethodFid'
      responses:
        200:
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/PaymentMethodResponse'
          description: Payment Method Information
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

    put:
      summary: Update a payment method
      tags:
        - Customers
        - Payment Methods
      security:
        - OAuth:
            - payment.methods
        - accessToken: []
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/paymentMethodFid'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/PaymentMethodUpdatePayload'
      responses:
        200:
          description: Payment Method Updated
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

    delete:
      summary: Archive a payment method
      tags:
        - Customers
        - Payment Methods
      security:
        - OAuth:
            - payment.methods
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/paymentMethodFid'
      responses:
        200:
          description: Payment Method Archived
        x-409:
          description: Payment Method In Use
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/paymentMethods/paypal/initialise':
    post:
      summary: Initialise a new paypal agreement for existing subscriptions
      tags:
        - Customers
        - Payment Methods
      security:
        - OAuth:
            - payment.methods
        - accessToken: []
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/paymentServiceFid'
        - $ref: '#/parameters/subscriptionFids'
        - name: successUrl
          type: string
          in: formData
          required: true
        - name: cancelUrl
          type: string
          in: formData
          required: true
        - name: failUrl
          type: string
          in: formData
          required: true
      responses:
        200:
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/PaypalInit'
          description: Redirect instructions
        x-501:
          description: Inable to initialise Paypal agreement
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/paymentMethods/paypal/complete':
    post:
      summary: Complete a paypal agreement created with initialise
      tags:
        - Customers
        - Payment Methods
      security:
        - OAuth:
            - payment.methods
        - accessToken: []
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/paymentServiceFid'
        - $ref: '#/parameters/subscriptionFids'
        - name: token
          type: string
          in: formData
          required: true
      responses:
        200:
          description: Successfully created agreement
        x-400:
          description: Failed to complete Paypal agreement
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/paymentMethods/cards':
    get:
      summary: List customers card payment methods
      tags:
        - Customers
        - Payment Methods
      security:
        - OAuth:
            - payment.methods
        - accessToken: []
      parameters:
        - $ref: '#/parameters/customerFid'
      responses:
        200:
          schema:
            $ref: '#/definitions/PaymentCards'
          description: List of cards
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/paymentMethods/cards/{cardFid}':
    delete:
      tags:
        - Customers
        - Payment Methods
      security:
        - OAuth:
            - payment.methods
        - accessToken: []
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/cardFid'
      responses:
        200:
          description: Card Removed
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

    put:
      tags:
        - Customers
        - Payment Methods
      security:
        - OAuth:
            - payment.methods
        - accessToken: []
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/cardFid'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/CardUpdatePayload'
      summary: Update a card
      responses:
        200:
          description: Card Updated
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/paymentMethods/cards/{cardFid}/lock':
    post:
      tags:
        - Customers
        - Payment Methods
      security:
        - OAuth:
            - payment.methods
        - accessToken: []
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/cardFid'
      responses:
        200:
          description: Card Locked
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
  '/customers/{customerFid}/paymentMethods/createPending':
    post:
      summary: Create a new pending payment method
      security:
        - OAuth:
            - payment
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/customerFid'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreatePendingPaymentMethodPayload'
      responses:
        200:
          description: Pending Payment Method Created
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Fid'
        x-400:
          description: |
            Invalid data supplied
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/payments/{paymentFid}':
    get:
      summary: Retrieve a payment
      tags:
        - Customers
      security:
        - OAuth:
            - customer
            - customer.readonly
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/paymentFid'
      responses:
        200:
          description: Loaded Payment
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Payment'
        x-404:
          description: Customer or payment not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/payments/{paymentFid}/refund':
    put:
      summary: Refund a payment
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/paymentFid'
        - name: totalRefund
          in: formData
          required: true
          description: Total Refund
          type: number
        - name: reasonFid
          in: formData
          required: true
          description: Reason FID
          type: string
        - name: refundType
          in: formData
          required: true
          description: Refund Type
          type: string
        - name: addCreditToInvoice
          in: formData
          required: true
          description: Add Credit to Invoice
          type: boolean
      responses:
        200:
          description: Payment Refunded
        x-404:
          description: Payment Not Found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
  '/customers/{customerFid}/subscriptions':
    get:
      summary: List of subscription summaries for given customer
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/customerFid'
        - name: limit
          in: query
          description: 'Maximum number of records per page (default: 20)'
          required: false
          type: integer
        - name: page
          in: query
          description: 'Page number (default: 1)'
          required: false
          type: integer
      responses:
        200:
          description: List of subscription summaries
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Subscriptions'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/subscriptions/{subscriptionFid}':
    get:
      summary: Retreive a specific subscription
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/subscriptionFid'
      responses:
        200:
          description: Loaded subscription
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Subscription'
        x-404:
          description: Subscription not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
    put:
      summary: Update a subscription
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/subscriptionFid'
        - name: displayName
          in: formData
          required: false
          description: Name of the subscription
          type: string
        - name: description
          in: formData
          required: false
          description: Description for the subscription
          type: string
      responses:
        200:
          description: Subscription Updated
        x-403:
          description: Invalid customer specified for the subscription
        x-404:
          description: Subscription or Customer not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/subscriptions/{subscriptionFid}/periods':
    get:
      summary: Retreive the periods for a subscription
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/subscriptionFid'
      responses:
        200:
          description: A purchase period
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Periods'
        x-404:
          description: Purchase period not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/subscriptions/{subscriptionFid}/periods/{periodFid}/refund':
    put:
      summary: Refund a subscription period
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/subscriptionFid'
        - $ref: '#/parameters/periodFid'
        - name: refundAmount
          in: formData
          type: number
        - name: reason
          in: formData
          type: string
        - name: addCreditToInvoice
          in: formData
          type: boolean
      responses:
        200:
          description: Refund Actioned
        x-404:
          description: Purchase period not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/subscriptions/{subscriptionFid}/enableAutoCharge':
    put:
      summary: Enable auto charge on specific subscription
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/subscriptionFid'
      responses:
        200:
          description: Auto charge enabled
        x-404:
          description: Subscription not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/subscriptions/{subscriptionFid}/disableAutoCharge':
    put:
      summary: Disable auto charge on specific subscription
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/subscriptionFid'
      responses:
        200:
          description: Auto charge disabled
        x-404:
          description: Subscription not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/subscriptions/{subscriptionFid}/autoCancelDays':
    put:
      summary: Set auto cancel days on a subscription
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/subscriptionFid'
        - name: days
          in: formData
          required: true
          type: number
          format: int32
      responses:
        200:
          description: Auto cancel days set
        x-404:
          description: Subscription not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/subscriptions/{subscriptionFid}/autoSuspendDays':
    put:
      summary: Set auto suspend days on a subscription
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/subscriptionFid'
        - name: days
          in: formData
          required: true
          type: number
          format: int32
      responses:
        200:
          description: Auto suspend days set
        x-404:
          description: Subscription not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/subscriptions/{subscriptionFid}/setAdvanceDays':
    put:
      summary: Set advance days on a subscription
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/subscriptionFid'
        - name: days
          in: formData
          required: true
          type: number
          format: int32
      responses:
        200:
          description: Advance days set
        x-404:
          description: Subscription not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'


  '/customers/{customerFid}/subscriptions/{subscriptionFid}/renewalMode':
    put:
      summary: Set the renewal mode of a subscription
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/subscriptionFid'
        - name: renewalMode
          in: formData
          required: true
          type: string
        - name: reason
          in: formData
          type: string
        - name: note
          in: formData
          type: string
      responses:
        200:
          description: Renewal mode set
        x-400:
          description: Invalid payload
        x-404:
          description: Subscription not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/subscriptions/{subscriptionFid}/setParentSubscription':
    put:
      summary: Set parent subscription on a subscription
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/subscriptionFid'
        - name: parentSubscriptionFid
          in: formData
          required: true
          type: string
      responses:
        200:
          description: Parent subscription set
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Fid'
        x-400:
          description: Cannot create cyclic reference
        x-404:
          description: Subscription not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/subscriptions/{subscriptionFid}/calculateModification':
    put:
      summary: Calculates the changes before a modification to a subscription
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/subscriptionFid'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/ModifySubscriptionPayload'
      responses:
        200:
          description: Calculated result of modification
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/CalculatedSubscriptionModification'
        x-400:
          description: Invalid payload data
        x-404:
          description: Subscription or Customer not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/subscriptions/{subscriptionFid}/calculateRefund':
    put:
      summary: Calculates the result of a potential refund on a subscription
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/subscriptionFid'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/CalculateRefundPayload'
      responses:
        200:
          description: Returns calculated refund amounts
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/CalculateSubscriptionRefund'
        x-400:
          description: Invalid payload data
        x-404:
          description: Subscription not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'


  '/customers/{customerFid}/subscriptions/{subscriptionFid}/setPaymentAccount':
    put:
      summary: Set paymentAccount for subscription. If changing a payment method from an Automatic Payment Method such as PayPal Recurring Payments, any other subscriptions paid with the same Agreement will be set to Default Payment Method and the Agreement will be cancelled
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/subscriptionFid'
        - name: paymentAccountFid
          in: formData
          type: string
      responses:
        200:
          description: New payment method set
        x-404:
          description: Subscription or PaymentAccount not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/subscriptions/{subscriptionFid}/modify':
    put:
      summary: Modify an existing subscription with a new price. Returns new open order to be completed
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/subscriptionFid'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/ModifySubscriptionPayload'
      responses:
        200:
          description: Created new open order
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Order'
        x-400:
          description: Invalid payload data
        x-404:
          description: Subscription not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/subscriptions/{subscriptionFid}/updateRenewalPrice':
    put:
      summary: Modify an existing subscription with a new price which will be used for the next renewal
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/subscriptionFid'
        - name: priceFid
          in: formData
          required: true
          type: string
      responses:
        200:
          description: Subscription price updated
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Fid'
        x-400:
          description: Invalid payload data
        x-404:
          description: Subscription not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/subscriptions/{subscriptionFid}/applyOffer':
    put:
      summary: Apply an offer to a subscription
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/subscriptionFid'
        - name: offerFid
          in: formData
          required: true
          type: string
      responses:
        200:
          description: Offer applied
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/subscriptions/{subscriptionFid}/preRenew':
    put:
      summary: Pre-renew an existing subscription with a different price. Returns new open order to be completed
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/subscriptionFid'
        - name: priceFid
          in: formData
          required: true
          description: Price FID
          type: string
      responses:
        200:
          description: Created new open order
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Fid'
        x-400:
          description: Invalid payload data
        x-404:
          description: Subscription not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/subscriptions/{subscriptionFid}/cancel':
    put:
      summary: Cancel a subscripion. Returns subscription FID.
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/subscriptionFid'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/SubscriptionCancelPayload'
      responses:
        200:
          description: Subscription cancelled
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/SubscriptionCancellation'
        x-400:
          description: Invalid payload data
        x-404:
          description: Subscription not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/subscriptions/{subscriptionFid}/reactivate':
    put:
      summary: Reactivate a subscription. Returns subscription FID.
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/subscriptionFid'
      responses:
        200:
          description: Subscription reactivated
        x-400:
          description: Invalid payload data
        x-404:
          description: Subscription not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/subscriptions/{subscriptionFid}/allocations':
    get:
      summary: Retreive a subscriptions resource allocations
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/subscriptionFid'
      responses:
        200:
          description: Loaded allocations
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/ResourceAllocations'
        x-404:
          description: Subscription not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/subscriptions/{subscriptionFid}/cancelFlow/reasons':
    get:
      summary: Retreive the available cancellation reasons for a subscription
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/subscriptionFid'
      responses:
        200:
          description: Cancel Flow Reasons
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/CancelFlowReasons'
        x-404:
          description: Subscription not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/subscriptions/{subscriptionFid}/cancelFlow/{flowSearch}/abandon':
    put:
      summary: Abandon a cancel flow
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/subscriptionFid'
        - $ref: '#/parameters/flowSearch'
      responses:
        200:
          description: Cancel Flow State
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/CancelFlowState'
        x-404:
          description: Flow not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/subscriptions/{subscriptionFid}/cancelFlow':
    get:
      summary: Retreive a list of active cancel flows
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/subscriptionFid'
      responses:
        200:
          description: List Of Cancel Flows
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/CancelFlowStates'
        x-404:
          description: No Cancel Flows Found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
    post:
      summary: Start a cancel flow, and retrieve its state
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/subscriptionFid'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/ActionCancelFlowPayload'
      responses:
        200:
          description: Cancel Flow State
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/CancelFlowState'
        x-404:
          description: Flow not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/subscriptions/{subscriptionFid}/cancelFlow/empty':
    post:
      summary: Create an empty cancel flow
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/subscriptionFid'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/StartCancelFlowPayload'
      responses:
        200:
          description: Cancel Flow State
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/CancelFlowState'
        x-404:
          description: Flow not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/subscriptions/{subscriptionFid}/cancelFlow/{flowSearch}':
    get:
      summary: Retreive the state of a cancel flow
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/subscriptionFid'
        - $ref: '#/parameters/flowSearch'
      responses:
        200:
          description: Cancel Flow State
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/CancelFlowState'
        x-404:
          description: Flow not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
    put:
      summary: Post an action for a cancel flow, and retrieve its latest state
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/subscriptionFid'
        - $ref: '#/parameters/flowSearch'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/ActionCancelFlowPayload'
      responses:
        200:
          description: Cancel Flow State
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/CancelFlowState'
        x-404:
          description: Flow not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/subscriptions/{subscriptionFid}/cancelFlow/{flowSearch}/options':
    get:
      summary: Retrieve cancel flow options
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/subscriptionFid'
        - $ref: '#/parameters/flowSearch'
      responses:
        200:
          description: Cancel Flow Options
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/CancelFlowOptions'
        x-404:
          description: Flow not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
    post:
      summary: Set cancel flow options
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/subscriptionFid'
        - $ref: '#/parameters/flowSearch'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/CancelFlowOptionsPayload'
      responses:
        200:
          description: Create Cancel Flow Options
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/CancelFlowOptions'
        x-404:
          description: Flow not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/subscriptions/{subscriptionFid}/retentionFlow/reasons':
    get:
      summary: Retreive the available retention reasons for a subscription
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/subscriptionFid'
      responses:
        200:
          description: Retention Flow Reasons
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/RetentionFlowReasons'
        x-404:
          description: Subscription not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/subscriptions/{subscriptionFid}/retentionFlow/{flowSearch}/abandon':
    put:
      summary: Abandon a retention flow
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/subscriptionFid'
        - $ref: '#/parameters/flowSearch'
      responses:
        200:
          description: Retention Flow State
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/RetentionFlowState'
        x-404:
          description: Flow not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/subscriptions/{subscriptionFid}/retentionFlow':
    get:
      summary: Retreive a list of active retention flows
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/subscriptionFid'
      responses:
        200:
          description: List Of Retention Flows
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/RetentionFlowStates'
        x-404:
          description: No Retention Flows Found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
    post:
      summary: Start a retention flow, and retrieve its state
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/subscriptionFid'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/ActionRetentionFlowPayload'
      responses:
        200:
          description: Retention Flow State
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/RetentionFlowState'
        x-404:
          description: Flow not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/subscriptions/{subscriptionFid}/retentionFlow/empty':
    post:
      summary: Create an empty retention flow
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/subscriptionFid'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/StartRetentionFlowPayload'
      responses:
        200:
          description: Retention Flow State
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/RetentionFlowState'
        x-404:
          description: Flow not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/subscriptions/{subscriptionFid}/retentionFlow/{flowSearch}':
    get:
      summary: Retreive the state of a retention flow
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/subscriptionFid'
        - $ref: '#/parameters/flowSearch'
      responses:
        200:
          description: Retention Flow State
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/RetentionFlowState'
        x-404:
          description: Flow not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
    put:
      summary: Post an action for a cancel flow, and retrieve its latest state
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/subscriptionFid'
        - $ref: '#/parameters/flowSearch'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/ActionRetentionFlowPayload'
      responses:
        200:
          description: Retention Flow State
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/RetentionFlowState'
        x-404:
          description: Flow not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/subscriptions/{subscriptionFid}/retentionFlow/{flowSearch}/options':
    get:
      summary: Retrieve retention flow options
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/subscriptionFid'
        - $ref: '#/parameters/flowSearch'
      responses:
        200:
          description: Retention Flow Options
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/RetentionFlowOptions'
        x-404:
          description: Flow not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
    post:
      summary: Set retention flow options
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/subscriptionFid'
        - $ref: '#/parameters/flowSearch'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/RetentionFlowOptionsPayload'
      responses:
        200:
          description: Create Retention Flow Options
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/RetentionFlowOptions'
        x-404:
          description: Flow not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'


  '/customers/{customerFid}/subscriptions/{subscriptionFid}/provisioning/retry':
    put:
      summary: Retry the provisioning step
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/subscriptionFid'
      responses:
        200:
          description: Provisioning Queued
        x-400:
          description: Retry Provisioning Failed
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'


  '/customers/{customerFid}/subscriptions/{subscriptionFid}/cancelRequest':
    post:
      summary: Create a cancel request for a subscription
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/customerFid'
        - $ref: '#/parameters/subscriptionFid'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateCancelRequestPayload'
      responses:
        200:
          description: Boolean Response
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/BoolMessage'
        x-404:
          description: Failed to create cancel request
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
  '/customers/{customerFid}/orders':
    get:
      summary: List customer orders
      tags:
          - Customers
      security:
        - OAuth:
            - customer
        - accessToken: []
      parameters:
        - $ref: '#/parameters/customerFid'
        - name: filter
          in: query
          required: false
          type: string
        - name: externalReference
          in: query
          required: false
          type: string
        - name: state
          in: query
          required: false
          type: string
        - name: isLikeExternalReference
          in: query
          required: false
          type: boolean
      responses:
        200:
          description: Customer Orders
          schema:
            $ref: '#/definitions/Orders'
        x-404:
          description: Customer not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/billingData':
    put:
      summary: Update a customers billing data
      tags:
        - Customers
      security:
        - OAuth:
            - customer
        - accessToken: []
      parameters:
        - $ref: '#/parameters/customerFid'
        - name: billingType
          in: formData
          type: string
        - name: taxNumber
          in: formData
          type: string
        - name: companyNumber
          in: formData
          type: string
        - name: knownIP
          in: formData
          type: string
      responses:
        200:
          description: Customer Status Updated
        x-404:
          description: Customer not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
  '/customers/{customerFid}/sar':
    post:
      summary: Subject Access Request
      tags:
          - Customers
      description: |
        Initiate a Subject Access Request.  A URL will be sent via a webhook (CustomerWHE::SUBJECT_ACCESS_REQUEST), once the archive is ready for download
      security:
        - OAuth:
            - customer
        - accessToken: []
      parameters:
        - $ref: '#/parameters/customerFid'
      responses:
        200:
          description: Subject Access Request
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/BoolMessage'
        x-400:
          description: Invalid payload data
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'


  '/customers/{customerFid}/anonymize':
    post:
      summary: Anonymize customer data
      tags:
        - Customers
      description: |
        Anonymize customer data
      security:
        - OAuth:
            - customer
        - accessToken: []
      parameters:
        - $ref: '#/parameters/customerFid'
        - name: customer
          in: formData
          type: boolean
        - name: tickets
          in: formData
          type: boolean
        - name: chats
          in: formData
          type: boolean
        - name: orders
          in: formData
          type: boolean
        - name: emails
          in: formData
          type: boolean
        - name: phones
          in: formData
          type: boolean
        - name: addresses
          in: formData
          type: boolean
        - name: paymentAccounts
          in: formData
          type: boolean
      responses:
        200:
          description: Anonymize Request
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/BoolMessage'
        x-400:
          description: Invalid payload data
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
  '/customers/{customerFid}/sentEmails':
    get:
      summary: List Emails sent to a Customer
      tags:
        - Customers
        - Messenger
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/customerFid'
      responses:
        200:
          schema:
            $ref: '#/definitions/SentEmails'
          description: List of Emails sent to Customer
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
  /customers:
    post:
      summary: Create a new customer
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      tags:
        - Customers
      parameters:
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateCustomerPayload'
      responses:
        200:
          description: Customer Created
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Customer'
        x-404:
          description: |
            The brand Fid you are trying to add a customer to does not exist
        x-409:
          description: |
            The external reference has already been used to create a customer
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  /customers/findByReference:
    get:
      security:
        - OAuth:
            - customer
            - customer.readonly
        - accessToken: [ ]
      tags:
        - Customers
      summary: Find a customer by your reference
      parameters:
        - name: reference
          in: query
          description: Your reference for the customer
          type: string
        - name: retrieveBillingData
          in: query
          type: boolean
      responses:
        200:
          description: Located Customer
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Customer'
        x-404:
          description: Customer not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  /customers/findByEmail:
    get:
      security:
        - OAuth:
            - customer
            - customer.readonly
        - accessToken: [ ]
      tags:
        - Customers
      summary: Find a customer by brand and email address
      parameters:
        - name: email
          in: query
          description: Email address for the customer
          type: string
        - name: brandFid
          in: query
          description: Brand Fid to search for
          type: string
        - name: retrieveBillingData
          in: query
          type: boolean
      responses:
        200:
          description: Located Customer
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Customer'
        x-404:
          description: Customer not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}':
    get:
      security:
        - OAuth:
            - customer
            - customer.readonly
        - accessToken: [ ]
      tags:
        - Customers
      summary: Retrieve a customer
      parameters:
        - $ref: '#/parameters/customerFid'
        - name: retrieveBillingData
          in: query
          type: boolean
      responses:
        200:
          description: Loaded Customer
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Customer'
        x-404:
          description: Customer not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
    put:
      security:
        - OAuth:
            - customer
            - customer.readonly
        - accessToken: [ ]
      tags:
        - Customers
      summary: Update a customer
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/customerFid'
        - name: firstName
          in: formData
          type: string
        - name: lastName
          in: formData
          type: string
        - name: displayName
          in: formData
          type: string
      responses:
        200:
          description: Customer Updated
        x-404:
          description: Customer not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
    delete:
      security:
        - OAuth:
            - customer
        - accessToken: [ ]
      tags:
        - Customers
      summary: Archive a customer
      parameters:
        - $ref: '#/parameters/customerFid'
      responses:
        200:
          description: Customer Archived
        x-403:
          description: It is not possible to archive this customer
        x-404:
          description: Customer not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/customers/{customerFid}/upgradePaymentAccount':
    put:
      security:
        - OAuth:
            - customer
            - customer.readonly
        - accessToken: [ ]
      tags:
        - Customers
      summary: Upgrade customer from fortifi pay to chargehive
      parameters:
        - $ref: '#/parameters/customerFid'
      responses:
        200:
          description: Customer queued for upgrade or already upgraded
        x-404:
          description: Customer not found
        x-403:
          description: Customer cannot be upgraded at this time
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
  '/device/upsert':
    post:
      summary: Create a Device or update and existing one
      tags:
        - Devices
      security:
        - OAuth:
            - device
        - accessToken: [ ]
      parameters:
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpsertDevicePayload'
      responses:
        200:
          description: Device created/updated
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Fid'
        x-400:
          description: Information provided is not valid
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/device/{hardwareId}':
    delete:
      summary: Remove a Device
      tags:
        - Devices
      security:
        - OAuth:
            - device
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/hardwareId'
        - name: entityFid
          in: formData
          type: string
          description: Entity FID assigned to the device (CST or CONT)
          required: false
      responses:
        200:
          description: Device Subscribed
        x-404:
          description: Device not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
  '/entities/{entityFid}/config/{sectionName}':
    delete:
      summary: Remove a config section, or property from an entity
      tags:
        - Entities
        - Configuration
      security:
        - OAuth:
            - entity.config
        - accessToken: [ ]
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/entityFid'
        - $ref: '#/parameters/sectionName'
        - name: itemName
          in: formData
          type: string
      responses:
        200:
          description: Config Item Deleted
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

    get:
      summary: Retrieve a config section
      tags:
        - Entities
        - Configuration
      security:
        - OAuth:
            - entity.config
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/entityFid'
        - $ref: '#/parameters/sectionName'
      responses:
        200:
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/ConfigItems'
          description: List Of Config Items
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

    post:
      summary: Write a config item
      tags:
        - Entities
        - Configuration
      security:
        - OAuth:
            - entity.config
        - accessToken: [ ]
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/entityFid'
        - $ref: '#/parameters/sectionName'
        - name: itemName
          in: formData
          required: true
          type: string
        - name: value
          in: formData
          required: true
          type: string
      responses:
        200:
          description: Config Item Saved
        x-400:
          description: Invalid Entity
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/entities/{entityFid}/config/{sectionName}/items/{itemName}':
    get:
      summary: Retrieve a config item
      tags:
        - Entities
        - Configuration
      security:
        - OAuth:
            - entity.config
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/entityFid'
        - $ref: '#/parameters/sectionName'
        - $ref: '#/parameters/itemName'
      responses:
        200:
          description: Config Item
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/ConfigItem'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/entities/{entityFid}/attachments/uploadUrl':
    post:
      summary: Create an upload url
      security:
        - OAuth:
            - entity.attachments
        - accessToken: [ ]
      tags:
        - Entities
      parameters:
        - $ref: '#/parameters/entityFid'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/RequestUploadUrlPayload'
      responses:
        200:
          description: Attachment upload URL
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/AttachmentUrl'
        x-400:
          description: |
            Invalid data supplied
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/entities/{entityFid}/labels':
    get:
      summary: Get all labels for an entity
      tags:
        - Entities
        - Labels
      security:
        - OAuth:
            - entity.labels
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/entityFid'
      responses:
        200:
          description: Labels
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Labels'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/entities/{entityFid}/labels/assign':
    put:
      summary: Assign label to entity
      tags:
        - Entities
        - Labels
      security:
        - OAuth:
            - entity.labels
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/entityFid'
        - name: label
          in: formData
          type: string
        - name: value
          in: formData
          type: string
      responses:
        200:
          description: Properties Saved
        x-400:
          description: Invalid Entity
        x-403:
          description: Access Denied
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/entities/{entityFid}/properties':
    get:
      summary: Get all properties for an entity
      tags:
        - Entities
        - Custom Properties
      security:
        - OAuth:
            - entity.properties
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/entityFid'
      responses:
        200:
          description: Entity Properties
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Properties'
        x-400:
          description: Invalid Entity
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

    put:
      summary: Write multiple entity properties
      tags:
        - Entities
        - Custom Properties
      security:
        - OAuth:
            - entity.properties
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/entityFid'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/PropertyBulkSetPayload'
      responses:
        200:
          description: Properties Saved
        x-400:
          description: Invalid Entity
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/entities/{entityFid}/properties/values/{propertyName}':
    get:
      summary: Get a property value from an entity
      tags:
        - Entities
        - Custom Properties
      security:
        - OAuth:
            - entity.properties
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/entityFid'
        - $ref: '#/parameters/propertyName'
      responses:
        200:
          description: Property Value
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/PropertyValue'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
    delete:
      summary: Remove a value property from an entity
      tags:
        - Entities
        - Custom Properties
      security:
        - OAuth:
            - entity.properties
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/entityFid'
        - $ref: '#/parameters/propertyName'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/PropertyValuePayload'
      responses:
        200:
          description: Property Deleted
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

    put:
      summary: Write an entity value property
      tags:
        - Entities
        - Custom Properties
      security:
        - OAuth:
            - entity.properties
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/entityFid'
        - $ref: '#/parameters/propertyName'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/PropertyValuePayload'

      responses:
        200:
          description: Property Saved
        x-400:
          description: Invalid Entity
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/entities/{entityFid}/properties/flags/{propertyName}':
    get:
      summary: Get a flag property from an entity
      tags:
        - Entities
        - Custom Properties
      security:
        - OAuth:
            - entity.properties
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/entityFid'
        - $ref: '#/parameters/propertyName'
      responses:
        200:
          description: Flag Value
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/PropertyFlag'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
    delete:
      summary: Remove a flag from an entity
      tags:
        - Entities
        - Custom Properties
      security:
        - OAuth:
            - entity.properties
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/entityFid'
        - $ref: '#/parameters/propertyName'

      responses:
        200:
          description: Property Deleted
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

    put:
      summary: Write an entity flag
      tags:
        - Entities
        - Custom Properties
      security:
        - OAuth:
            - entity.properties
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/entityFid'
        - $ref: '#/parameters/propertyName'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/PropertyFlagPayload'

      responses:
        200:
          description: Flag Saved
        x-400:
          description: Invalid Entity
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'


  '/entities/{entityFid}/properties/counters/{propertyName}':
    delete:
      summary: Remove a counter from an entity
      tags:
        - Entities
        - Custom Properties
      security:
        - OAuth:
            - entity.properties
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/entityFid'
        - $ref: '#/parameters/propertyName'

      responses:
        200:
          description: Property Deleted
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/entities/{entityFid}/properties/counters/{propertyName}/increment':
    put:
      summary: Increment an entity counter
      tags:
        - Entities
        - Custom Properties
      security:
        - OAuth:
            - entity.properties
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/entityFid'
        - $ref: '#/parameters/propertyName'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/PropertyCounterPayload'

      responses:
        200:
          description: Counter Incremented
        x-400:
          description: Invalid Entity
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/entities/{entityFid}/properties/counters/{propertyName}/decrement':
    put:
      summary: Decrement an entity counter
      tags:
        - Entities
        - Custom Properties
      security:
        - OAuth:
            - entity.properties
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/entityFid'
        - $ref: '#/parameters/propertyName'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/PropertyCounterPayload'

      responses:
        200:
          description: Counter Decremented
        x-400:
          description: Invalid Entity
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/entities/{entityFid}/events':
    post:
      summary: Trigger a new event
      tags:
        - Entities
        - Events
      security:
        - OAuth:
            - entity.events
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/entityFid'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/TriggerActionPayload'
      responses:
        200:
          description: Event Triggered
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
  '/finance/payments':
    get:
      summary: Perform a payment search
      tags:
        - Finance
      security:
        - accessToken: [ ]
      parameters:
        - name: transactionId
          in: query
          description: 'Transaction ID'
          required: false
          type: string
        - name: currency
          in: query
          description: '3 Character Currency Code'
          required: false
          type: string
        - name: transactionDate
          in: query
          description: 'Transaction Date'
          required: false
          type: string
          format: date-time
        - name: dateTolerance
          in: query
          description: 'Number of days tolerance on the transaction date'
          required: false
          type: number
        - name: first6last4
          in: query
          description: 'Locate based on the first 6 and last 4 of a card number'
          required: false
          type: string
        - name: arn
          in: query
          description: 'Acquirer reference number'
          required: false
          type: string
        - name: authCode
          in: query
          description: 'Transaction Auth Code'
          required: false
          type: string
        - name: amount
          in: query
          description: 'Transaction amount'
          required: false
          type: number
          format: float
      responses:
        200:
          description: Transactions
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Payments'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
  '/flow/{flowFid}/log':
    post:
      summary: Create Flow
      tags:
        - Flow
      security:
        - OAuth:
            - flow
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/flowFid'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/FlowLogMetricPayload'
      responses:
        200:
          description: Result of metric log
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/BoolMessage'
        x-404:
          description: Flow not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
  '/interactions/journey':
    post:
      summary: Create A Customer Journey
      tags:
        - interactions
      security:
        - OAuth:
            - interactions
        - accessToken: [ ]
      parameters:
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateJourneyTrackPayload'
      responses:
        200:
          description: Customer Journey Created
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Fid'
        x-400:
          description: Information provided is not valid
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/interactions/{interactionFid}/client/connected':
    post:
      summary: A Client has connected to the Interaction
      tags:
        - interactions
      security:
        - OAuth:
            - interactions
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/interactionFid'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/InteractionActionPayload'
      responses:
        200:
          description: Client Connected
          schema:
            $ref: '#/definitions/Envelope'
        x-400:
          description: Information provided is not valid
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/interactions/{interactionFid}/client/disconnected':
    post:
      summary: A Client has disconnected from the Interaction
      tags:
        - interactions
      security:
        - OAuth:
            - interactions
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/interactionFid'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/InteractionActionPayload'
      responses:
        200:
          description: Client Disconnected
          schema:
            $ref: '#/definitions/Envelope'
        x-400:
          description: Information provided is not valid
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/interactions/{interactionFid}/message':
    post:
      summary: Add a message to a Interaction
      tags:
        - interactions
      security:
        - OAuth:
            - interactions
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/interactionFid'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/AddInteractionMessagePayload'
      responses:
        200:
          description: Add Message Response
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/BoolMessage'
        x-400:
          description: Couldnt add message to interaction
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/interactions/{interactionFid}':
    get:
      summary: Get an interaction
      tags:
        - interactions
      security:
        - OAuth:
            - interactions
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/interactionFid'
      responses:
        200:
          description: Interaction
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/InteractionResponse'
        x-400:
          description: The Interaction could not be retrieved
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/interactions/{interactionFid}/messages':
    get:
      summary: Get all Messages on an interaction
      tags:
        - interactions
      security:
        - OAuth:
            - interactions
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/interactionFid'
        - name: sinceTime
          in: query
          required: false
          type: string
        - name: sortOrder
          in: query
          required: false
          type: string
      responses:
        200:
          description: Interaction Messages
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/InteractionMessagesResponse'
        x-400:
          description: The Interaction messages could not be retrieved
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/interactions/{interactionFid}/feedback':
    post:
      summary: Submit Feedback to an interaction
      tags:
        - interactions
      security:
        - OAuth:
            - interactions
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/interactionFid'
        - name: rating
          in: query
          required: true
          type: number
      responses:
        200:
          description: Feedback Updated Response
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/BoolMessage'
        x-400:
          description: The Interaction feedback could not be submitted
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/interactions/invite':
    post:
      summary: Create an interaction Invite
      tags:
        - interactions
      security:
        - OAuth:
            - interactions
        - accessToken: [ ]
      parameters:
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateInteractionInvitationPayload'
      responses:
        200:
          description: Successfully create an interaction invite
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/InteractionInviteStatusResponse'
        x-400:
          description: Couldn't create an interaction invite
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/interactions/invite/{inviteCode}':
    post:
      summary: Accept an interaction Invite
      tags:
        - interactions
      security:
        - OAuth:
            - interactions
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/inviteCode'
        - name: contactFid
          in: query
          required: false
          type: string
        - name: dataNodeFid
          in: query
          required: false
          type: string
      responses:
        200:
          description: Accepted an interaction invite
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/InteractionResponse'
        x-400:
          description: Couldn't accept an interaction invite
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/interactions/invite/{inviteCode}/status':
    get:
      summary: Get an interaction Invite Status
      tags:
        - interactions
      security:
        - OAuth:
            - interactions
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/inviteCode'
        - name: contactFid
          in: query
          required: false
          type: string
        - name: dataNodeFid
          in: query
          required: false
          type: string
      responses:
        200:
          description: An interaction invite Status
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/InteractionInviteStatusResponse'
        x-400:
          description: Couldn't get an interaction invite status
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'


  '/interactions/{interactionFid}/attachment':
    post:
      summary: Create an Interaction Attachment
      tags:
        - interactions
      security:
        - OAuth:
            - interactions
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/interactionFid'
        - name: filename
          in: query
          required: false
          type: string
      responses:
        200:
          description: Attachment Successfully Created
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/BoolMessage'
        x-400:
          description: Couldn't add attachment to interaction
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/interactions/{interactionFid}/customerClosed':
    post:
      summary: The Customer has purposely closed the interaction
      tags:
        - interactions
      security:
        - OAuth:
            - interactions
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/interactionFid'
      responses:
        200:
          description: Interaction Closed Response
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/BoolMessage'
        x-400:
          description: The Interaction could not be closed
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
  '/licence/check':
    get:
      summary: Retrieve A Licence
      tags:
        - Licence
      security:
        - OAuth:
            - purchase.readonly
        - accessToken: []
      parameters:
        - name: key
          in: query
          type: string
      responses:
        200:
          description: Licence Information
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Licence'
        x-404:
          description: Licence Not Valid
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
  /me:
    get:
      summary: Current User
      tags:
        - Authentication
      security:
        - OAuth:
            - basic
        - accessToken: []
      operationId: getMe
      description: |
        Retrieve information about the current connected user (you)
      responses:
        200:
          description: User Information
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/User'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/integrations/verifyUser':
    get:
      summary: Verify a user
      tags:
        - Authentication
      security:
        - accessToken: []
      parameters:
        - name: verifyKey
          in: query
          description: 'Verify key found in ?fortifiverify=VERIFYKEY'
          required: true
          type: string
        - name: remoteIp
          in: query
          description: 'IP of the user connecting'
          required: true
          type: string
      responses:
        200:
          description: Integration User
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/IntegrationUser'
        x-403:
          description: Unable to verify user
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
  '/messenger/deliveries/{deliveryFid}/unsubscribe':
    put:
      summary: Unsubscribe an email based on the delivery fid
      tags:
        - Messenger
        - Contacts
      security:
        - OAuth:
            - contact
        - accessToken: []
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/deliveryFid'
        - $ref: '#/parameters/userAgent'
        - $ref: '#/parameters/encoding'
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/clientIp'
      responses:
        200:
          description: Email Address Unsubscribed
        x-404:
          description: Email Address not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/messenger/deliveries/{deliveryFid}/subscribe':
    put:
      summary: Subscribe an email based on the delivery fid
      tags:
        - Contacts
        - Messenger
      security:
        - OAuth:
            - contact
        - accessToken: []
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/deliveryFid'
        - $ref: '#/parameters/userAgent'
        - $ref: '#/parameters/encoding'
        - $ref: '#/parameters/language'
        - $ref: '#/parameters/clientIp'
        - $ref: '#/parameters/optInStatus'
        - $ref: '#/parameters/optInData'
      responses:
        200:
          description: Email Address Subscribed
        x-404:
          description: Email Address not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
  /orders:
    post:
      summary: Create a new order
      tags:
        - Orders
      security:
        - OAuth:
            - orders
        - accessToken: [ ]
      parameters:
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateOrderPayload'
      responses:
        200:
          description: Order created successfully
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Order'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/orders/{orderFid}':
    get:
      summary: Retrieve an order
      tags:
        - Orders
      security:
        - OAuth:
            - orders.readonly
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/orderFid'
      responses:
        200:
          description: Order retrieved
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Order'
        x-404:
          description: Order not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/orders/{orderFid}/items':
    get:
      summary: List an orders items
      tags:
        - Orders
      security:
        - OAuth:
            - orders.readonly
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/orderFid'
      responses:
        200:
          description: List of order items
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/OrderProducts'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/orders/{orderFid}/items/{productFid}/{orderItemFid}':
    put:
      summary: Update an order item
      tags:
        - Orders
      security:
        - OAuth:
            - orders
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/orderFid'
        - $ref: '#/parameters/productFid'
        - $ref: '#/parameters/orderItemFid'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateOrderItemPayload'
      responses:
        200:
          description: Order retrieved
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/BoolMessage'
        x-404:
          description: Order not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/orders/{orderFid}/verify':
    put:
      summary: Verify an order, returning any security urls
      tags:
        - Orders
      security:
        - OAuth:
            - orders
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/orderFid'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/VerifyOrderPayload'
      responses:
        200:
          description: Order payment account verified
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/OrderVerification'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/orders/{orderFid}/cancel':
    put:
      summary: Cancel an order
      tags:
        - Orders
      security:
        - OAuth:
            - orders
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/orderFid'
      responses:
        200:
          description: Order cancelled
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/BoolMessage'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/orders/{orderFid}/finalize':
    put:
      summary: Mark an order as finalized
      tags:
        - Orders
      security:
        - OAuth:
            - orders
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/orderFid'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/FinalizeOrderPayload'
      responses:
        200:
          description: Order Finalized
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/orders/{orderFid}/confirmCard':
    put:
      summary: Confirm an order, authorize the payment
      tags:
        - Orders
      security:
        - OAuth:
            - orders
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/orderFid'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/ConfirmCardOrderPayload'
      responses:
        200:
          description: Order confirmed and payment authroized
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/OrderConfirmation'
        x-503:
          description: There are no payment gateways available to handle your request
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/orders/{orderFid}/confirmPayPal':
    put:
      summary: Confirm an order, authorize the payment
      tags:
        - Orders
      security:
        - OAuth:
            - orders
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/orderFid'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/ConfirmPayPalOrderPayload'
      responses:
        200:
          description: Order confirmed and payment authroized
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/OrderConfirmation'
        x-503:
          description: There are no payment gateways available to handle your request
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/orders/{orderFid}/setChargeId':
    put:
      summary: Set a ChargeHive.com Charge ID on an order
      tags:
        - Orders
      security:
        - OAuth:
            - orders
        - accessToken: [ ]
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/orderFid'
        - name: chargeId
          in: formData
          required: true
          description: Charge ID provided by ChargeHive.com
          type: string
      responses:
        200:
          description: Charge ID Accepted
          schema:
            $ref: '#/definitions/Envelope'
        400:
          description: Invalid Charge ID
          schema:
            $ref: '#/definitions/Envelope'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/orders/{orderFid}/externalReference':
    put:
      summary: Set the external reference on an order
      tags:
        - Orders
      security:
        - OAuth:
            - orders
        - accessToken: [ ]
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/orderFid'
        - name: externalReference
          in: formData
          required: true
          description: New External Reference
          type: string
        - name: displayName
          in: formData
          required: false
          description: New Display Name
          type: string
      responses:
        200:
          description: External Reference Updated
          schema:
            $ref: '#/definitions/Envelope'
        x-400:
          description: Unable to set external reference
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/orders/{orderFid}/fraudScan':
    get:
      summary: Retrieve fraud scan
      tags:
        - Orders
      security:
        - OAuth:
            - orders.readonly
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/orderFid'
      responses:
        200:
          description: Fraud scan result
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/FraudScan'
        x-404:
          description: Fraud scan not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/orders/{orderFid}/triggerOnDemand':
    put:
      summary: Trigger OnDemand schedule for an order
      tags:
        - Orders
      security:
        - OAuth:
            - orders
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/orderFid'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/TriggerOnDemandOrderPayload'
      responses:
        200:
          description: Order OnDemand Trigger result
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/BoolMessage'
        x-404:
          description: Order not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/orders/{orderFid}/products':
    get:
      summary: Retrieve order products
      tags:
        - Orders
      security:
        - OAuth:
            - orders.readonly
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/orderFid'
      responses:
        200:
          description: List of order products
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/OrderProducts'
        x-404:
          description: Order not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
    post:
      summary: Add a product to an order
      tags:
        - Orders
      security:
        - OAuth:
            - orders
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/orderFid'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/AddOrderProductsPayload'
      responses:
        200:
          description: Product added to the order successfully
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/OrderAddProducts'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
    put:
      summary: Set the products on an order
      tags:
        - Orders
      security:
        - OAuth:
            - orders
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/orderFid'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/OrderProductsPayload'
      responses:
        200:
          description: Order products successfully updated
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/OrderAddProducts'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/orders/{orderFid}/products/{orderProductFid}':
    delete:
      summary: Remove a product from an order
      tags:
        - Orders
      security:
        - OAuth:
            - orders
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/orderFid'
        - $ref: '#/parameters/orderProductFid'
      responses:
        200:
          description: Product removed from the order successfully
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/orders/{orderFid}/products/{orderProductFid}/quantity':
    put:
      summary: Set the quantity of a product on an order
      tags:
        - Orders
      security:
        - OAuth:
            - orders
        - accessToken: [ ]
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/orderFid'
        - $ref: '#/parameters/orderProductFid'
        - name: quantity
          in: formData
          required: true
          type: number
          format: int64
      responses:
        200:
          description: Quantity updated
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/orders/{orderFid}/offers':
    post:
      summary: Add an offer to an order
      tags:
        - Orders
      security:
        - OAuth:
            - orders
        - accessToken: [ ]
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/orderFid'
        - name: offerFid
          in: formData
          required: true
          type: string
        - name: productFid
          in: formData
          type: string
        - name: orderItemFid
          in: formData
          type: string
        - name: replace
          in: formData
          type: boolean
      responses:
        200:
          description: Offer added to the order successfully
        x-404:
          description: Order not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/orders/{orderFid}/offers/{offerFid}':
    delete:
      summary: Remove an offer from an order
      tags:
        - Orders
      security:
        - OAuth:
            - orders
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/orderFid'
        - $ref: '#/parameters/offerFid'
      responses:
        200:
          description: Offer removed from the order successfully
        x-404:
          description: Order not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/orders/{orderFid}/products/{orderProductFid}/setInitialTerm':
    put:
      summary: Set the initial term of a product on an order
      tags:
        - Orders
      security:
        - OAuth:
            - orders
        - accessToken: [ ]
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/orderFid'
        - $ref: '#/parameters/orderProductFid'
        - name: startDate
          in: formData
          required: false
          type: string
        - name: endDate
          in: formData
          required: false
          type: string
      responses:
        200:
          description: Initial term updated
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
  /organisation:
    get:
      summary: Current Organisation
      tags:
        - Authentication
      security:
        - OAuth:
            - basic
        - accessToken: []
      operationId: getOrganisation
      description: |
        Retrieve information about the current organisation
      responses:
        200:
          description: Organisation Information
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Organisation'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
  '/payments/transaction/{transactionId}':
    get:
      summary: Retrieve a payment by transaction ID
      tags:
        - Customers
      security:
        - OAuth:
            - customer
            - customer.readonly
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/transactionId'
      responses:
        200:
          description: Loaded Payment
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Payment'
        x-404:
          description: Customer or payment not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
  '/polymers/{parentFid}':
    post:
      summary: Create a new polymer
      tags:
        - Polymers
      security:
        - OAuth:
            - polymer
        - accessToken: [ ]
      parameters:
        - name: parentFid
          in: path
          required: true
          type: string
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreatePolymerPayload'
      responses:
        200:
          description: Polymer created
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Fid'
        x-400:
          description: Information provided is not valid
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/polymers/{parentFid}/{polymerFid}':
    get:
      summary: Read a polymer
      tags:
        - Polymers
      security:
        - OAuth:
            - polymer.readonly
        - accessToken: [ ]
      parameters:
        - name: parentFid
          in: path
          required: true
          type: string
        - name: polymerFid
          in: path
          required: true
          type: string
        - name: dataKeys
          in: query
          required: true
          type: array
          items:
            type: string
        - name: allData
          in: query
          required: true
          type: boolean
      responses:
        200:
          description: Polymer Information
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Polymer'
        x-404:
          description: Polymer not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/polymers/list/{code}/{parentFid}':
    get:
      summary: List polymers by type
      tags:
        - Polymer
      security:
        - OAuth:
            - polymer.readonly
        - accessToken: [ ]
      parameters:
        - name: parentFid
          in: path
          required: true
          type: string
        - name: code
          in: path
          required: true
          type: string
        - name: dataKeys
          in: query
          required: true
          type: array
          items:
            type: string
      responses:
        200:
          description: List of Polymers
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Polymers'
        x-400:
          description: Information provided is not valid
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
  /products:
    get:
      summary: List all products
      tags:
        - Products
      security:
        - OAuth:
            - product.readonly
        - accessToken: [ ]
      responses:
        200:
          description: Products retrieved
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Products'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/products/{productFid}/availability/check':
    post:
      summary: Check Product Availability
      tags:
        - Products
      security:
        - OAuth:
            - product.readonly
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/productFid'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/AvailabilityCheckPayload'
      responses:
        200:
          description: Result of availability check
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/AvailabilityCheckResponse'
        x-404:
          description: Product not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/products/{productFid}/availability/reserve':
    post:
      summary: Reserve Product
      tags:
        - Products
      security:
        - OAuth:
            - product.readonly
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/productFid'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/AvailabilityReservePayload'
      responses:
        200:
          description: Result of reservation
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/AvailabilityReserveResponse'
        x-404:
          description: Product not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/products/{productFid}/prices':
    get:
      summary: Retrieve Product Prices
      tags:
        - Products
      security:
        - OAuth:
            - product.readonly
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/productFid'
        - name: currency
          in: formData
          required: false
          type: string
      responses:
        200:
          description: List of product prices
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/ProductPrices'
        x-404:
          description: Product not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/products/{productFid}/pricebands':
    get:
      summary: Retrieve Product Price Bands
      tags:
        - Products
      security:
        - OAuth:
            - product.readonly
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/productFid'
        - name: currency
          in: formData
          required: false
          type: string
      responses:
        200:
          description: List of product price bands
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/ProductPriceBands'
        x-404:
          description: Product not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/products/{productFid}/skus':
    get:
      summary: Retrieve Product SKUs
      tags:
        - Products
      security:
        - OAuth:
            - product.readonly
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/productFid'
      responses:
        200:
          description: List of product skus
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/ProductSkus'
        x-404:
          description: Product not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/products/groups':
    get:
      summary: Get a list of all product groups
      tags:
        - Products
      security:
        - OAuth:
            - product.readonly
        - accessToken: [ ]
      responses:
        200:
          description: Products groups
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/ProductGroups'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/products/groups/{productGroupFid}/products':
    get:
      summary: Get a list of products belonging to the group
      tags:
        - Products
      security:
        - OAuth:
            - product.readonly
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/productGroupFid'
      responses:
        200:
          description: Products
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Products'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/products/offers':
    get:
      summary: Retrieve all offers
      tags:
        - Products
      security:
        - OAuth:
            - product.readonly
        - accessToken: [ ]
      responses:
        200:
          description: Available Offers
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/ProductOffers'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
  '/properties':
    get:
      summary: Get defined properties
      tags:
        - Properties
      security:
        - OAuth:
            - properties.readonly
        - accessToken: []
      consumes:
        - multipart/form-data
      parameters:
        - name: baseFids
          in: query
          required: true
          type: array
          items:
            type: string
      responses:
        200:
          description: Defined Properties
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/PropertyDefinitions'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
  /publishers:
    post:
      summary: Create a new publisher
      security:
        - OAuth:
            - publisher
        - accessToken: [ ]
      tags:
        - Marketing
      parameters:
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreatePublisherPayload'
      responses:
        200:
          description: Publisher Created
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Publisher'
        x-400:
          description: Invalid data supplied
        x-409:
          description: Conflict
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

    get:
      summary: List publishers
      security:
        - OAuth:
            - publisher
        - accessToken: [ ]
      tags:
        - Marketing
      parameters:
        - name: limit
          in: query
          description: 'Maximum number of records per page (default: 20)'
          required: false
          type: integer
        - name: page
          in: query
          description: 'Page number (default: 1)'
          required: false
          type: integer
      responses:
        200:
          description: List of publishers
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Publishers'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  /publishers/{publisherFid}:
    get:
      security:
        - OAuth:
            - publisher
        - accessToken: [ ]
      tags:
        - Marketing
      summary: Retrieve a publisher
      parameters:
        - $ref: '#/parameters/publisherFid'
      responses:
        200:
          description: Loaded Publisher
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Publisher'
        x-404:
          description: Publisher not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

    delete:
      summary: Delete a publisher
      security:
        - OAuth:
            - publisher
        - accessToken: [ ]
      tags:
        - Marketing
      parameters:
        - $ref: '#/parameters/publisherFid'
      responses:
        200:
          description: Publisher Deleted
        x-404:
          description: Publisher not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  /publishers/{publisherFid}/restore:
    put:
      summary: Restore a publisher
      security:
        - OAuth:
            - publisher
        - accessToken: [ ]
      tags:
        - Marketing
      parameters:
        - $ref: '#/parameters/publisherFid'
      responses:
        200:
          description: Publisher restored
        x-404:
          description: Publisher not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  /publishers/{publisherFid}/enable:
    put:
      summary: Enable a publisher
      security:
        - OAuth:
            - publisher
        - accessToken: [ ]
      tags:
        - Marketing
      parameters:
        - $ref: '#/parameters/publisherFid'
      responses:
        200:
          description: Publisher enabled
        x-404:
          description: Publisher not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  /publishers/{publisherFid}/disable:
    put:
      summary: Disable a publisher
      security:
        - OAuth:
            - publisher
        - accessToken: [ ]
      tags:
        - Marketing
      parameters:
        - $ref: '#/parameters/publisherFid'
      responses:
        200:
          description: Publisher disabled
        x-404:
          description: Publisher not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  /publishers/{publisherFid}/approved:
    put:
      security:
        - OAuth:
            - publisher
        - accessToken: [ ]
      tags:
        - Marketing
      summary: Set approved status on an publisher
      parameters:
        - $ref: '#/parameters/publisherFid'
      responses:
        200:
          description: Approved Publisher
        x-404:
          description: Publisher not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

    delete:
      summary: Remove approved status on an publisher
      tags:
        - Marketing
      security:
        - OAuth:
            - publisher
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/publisherFid'
      responses:
        200:
          description: Publisher no longer approved
        x-404:
          description: Publisher not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  /publishers/{publisherFid}/campaigns:
    get:
      summary: List campaigns
      security:
        - OAuth:
            - publisher
        - accessToken: [ ]
      tags:
        - Marketing
      parameters:
        - $ref: '#/parameters/publisherFid'
        - name: limit
          in: query
          description: 'Maximum number of records per page (default: 20)'
          required: false
          type: integer
        - name: page
          in: query
          description: 'Page number (default: 1)'
          required: false
          type: integer
      responses:
        200:
          description: List of campaigns
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/PublisherCampaigns'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
    post:
      summary: Create a new publisher campaign
      security:
        - OAuth:
            - publisher
        - accessToken: [ ]
      tags:
        - Marketing
      parameters:
        - $ref: '#/parameters/publisherFid'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreatePublisherCampaignPayload'
      responses:
        200:
          description: Campaign Created
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/PublisherCampaign'
        x-400:
          description: Invalid data supplied
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  /publishers/{publisherFid}/campaigns/{publisherCampaignFid}:
    get:
      security:
        - OAuth:
            - publisher
        - accessToken: [ ]
      tags:
        - Marketing
      summary: Retrieve a publisher campaign
      parameters:
        - $ref: '#/parameters/publisherFid'
        - $ref: '#/parameters/publisherCampaignFid'
      responses:
        200:
          description: Loaded Campaign
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/PublisherCampaign'
        x-404:
          description: Campaign not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  /publishers/{publisherFid}/finance/costImport:
    post:
      summary: Import cost data
      security:
        - OAuth:
            - publisher
        - accessToken: [ ]
      tags:
        - Finance
      parameters:
        - $ref: '#/parameters/publisherFid'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/ImportCostPayload'
      responses:
        200:
          description: Cost data imported
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/ImportCost'
        x-400:
          description: Invalid data supplied
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  /publishers/{publisherFid}/finance/costImport/{costImportFid}:
    get:
      summary: Retrieve the status of cost import
      security:
        - OAuth:
            - publisher
        - accessToken: [ ]
      tags:
        - Finance
      parameters:
        - $ref: '#/parameters/publisherFid'
        - $ref: '#/parameters/costImportFid'
      responses:
        200:
          description: Cost Import Status
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/BoolMessage'
        x-404:
          description: Cost Import not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
  '/reasons/groups':
    get:
      summary: Get a list of all reason groups
      tags:
          - Reasons
      security:
        - OAuth:
            - reasons.readonly
        - accessToken: []
      parameters:
        - $ref: '#/parameters/reasonGroupType'
      responses:
        200:
          description: Reason groups
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/ReasonGroups'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/reasons/groups/{reasonGroupFid}':
    get:
      summary: Get all the reasons for the reason group
      tags:
        - Reasons
      security:
        - OAuth:
            - reasons.readonly
        - accessToken: []
      parameters:
        - $ref: '#/parameters/reasonGroupFid'
      responses:
        200:
          description: Reason Group retrieved
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Reasons'
        x-404:
          description: reasonGroupFid not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
  '/reservations/{key}/{application}/{brandFid}':
    get:
      security:
        - OAuth:
            - reservations
        - accessToken: [ ]
      tags:
        - Reservations
      summary: Retrieve reservations
      description: This call will return information related to how a visitor arrived
      parameters:
        - $ref: '#/parameters/key'
        - $ref: '#/parameters/application'
        - $ref: '#/parameters/brandFid'
      responses:
        200:
          description: Pixels
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Reservations'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/reservations/{key}/{application}/{brandFid}/{customerFid}':
    post:
      security:
        - OAuth:
            - reservations
        - accessToken: [ ]
      tags:
        - Reservations
      summary: Make a new reservation
      description: Reserve against a key
      parameters:
        - $ref: '#/parameters/key'
        - $ref: '#/parameters/application'
        - $ref: '#/parameters/brandFid'
        - $ref: '#/parameters/customerFid'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/ReservationPayload'
      responses:
        x-409:
          description: Reservation already exists
        200:
          description: Pixels
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Reservation'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
  '/review':
    post:
      summary: Create a new Review and Review audit
      tags:
        - Reviews
      security:
        - OAuth:
            - review
        - accessToken: [ ]
      parameters:
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateReviewPayload'
      responses:
        200:
          description: Review created
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Fid'
        x-400:
          description: Information provided is not valid
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
    put:
      summary: Update a Review
      tags:
        - Reviews
      security:
        - OAuth:
            - review
        - accessToken: [ ]
      parameters:
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateReviewPayload'
      responses:
        200:
          description: Review Update
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/BoolMessage'
        x-400:
          description: Information provided is not valid
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'


  '/services':
    get:
      summary: Retrieve all services
      tags:
          - Service Status
      security:
        - OAuth:
            - entity.properties
        - accessToken: []
      responses:
        200:
          description: Service listing
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Services'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'


  '/services/{serviceFid}/incidents':
    get:
      summary: Retrieve incidents for service within timeframe
      tags:
        - Service Status
      security:
        - OAuth:
            - entity.properties
        - accessToken: []
      parameters:
        - $ref: '#/parameters/serviceFid'
        - name: startDate
          in: query
          type: string
          format: date-time
        - name: endDate
          in: query
          type: string
          format: date-time
      responses:
        200:
          description: Service incidents
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/ServiceIncidents'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/services/{serviceFid}/incidents/{incidentFid}/updates':
    get:
      summary: Retrieve incident updates for incident
      tags:
        - Service Status
      security:
        - OAuth:
            - entity.properties
        - accessToken: []
      parameters:
        - $ref: '#/parameters/serviceFid'
        - $ref: '#/parameters/incidentFid'
      responses:
        200:
          description: Service incidents
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/IncidentUpdates'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
  /svcauth/verify:
    post:
      summary: Verify service account / Get Access Token
      tags:
        - Authentication
      operationId: getServiceAuthToken
      description: |
        User service account credentials to retrieve an API token
      parameters:
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/ServiceAccountCredentialsPayload'
      responses:
        200:
          description: Token
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/AuthToken'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
  '/tickets':
    post:
      summary: Create a support ticket
      description: >
        The attachments property is an array of unique filenames that have been created using ```/upload/uploadUrl```
      tags:
        - Support
      security:
        - OAuth:
            - support
        - accessToken: [ ]
      parameters:
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateTicketPayload'
      responses:
        200:
          description: Ticket Information
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Ticket'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/tickets/{ticketFid}':
    get:
      summary: Get a ticket
      tags:
        - Support
      security:
        - OAuth:
            - support
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/ticketFid'
      responses:
        200:
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/Ticket'
          description: Ticket Data
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/tickets/{ticketFid}/status':
    put:
      summary: Set the status of a ticket
      tags:
        - Support
      security:
        - OAuth:
            - support
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/ticketFid'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/TicketStatusPayload'
      responses:
        200:
          description: Success Response
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/BoolMessage'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/tickets/{ticketFid}/posts':
    get:
      summary: Retrieve ticket posts for a ticket
      tags:
        - Support
      security:
        - OAuth:
            - entity.config
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/ticketFid'
        - name: limit
          in: query
          description: 'Maximum number of records per page (default: 20, max: 100)'
          required: false
          type: integer
        - name: beforeTimestamp
          in: query
          description: 'Show posts before timestamp'
          required: false
          type: integer
          format: int64
        - name: includeHtml
          in: query
          description: 'Respond with the html body as a part of the response'
          type: boolean
          required: false
      responses:
        200:
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/TicketPosts'
          description: Ticket Data
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'


  '/tickets/{ticketFid}/note':
    post:
      summary: Create a note against the ticket
      tags:
        - Support
      security:
        - OAuth:
            - support
        - accessToken: [ ]
      parameters:
        - $ref: '#/parameters/ticketFid'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/AddTicketNotePayload'
      responses:
        200:
          description: Success Response
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/BoolMessage'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
  '/upload/uploadUrl':
    post:
      summary: Create an upload attachment url
      description: >
        This call will give you a URL to PUT files to and a unique filename.
        You can upload files to the URL like this:
        ```curl -X PUT -d @filename -H 'content-type: text/plain' 'url'```
      security:
        - OAuth:
            - attachments
        - accessToken: []
      tags:
        - Entities
      parameters:
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/RequestUploadUrlPayload'
      responses:
        200:
          description: Attachment upload URL
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/AttachmentUrl'
        x-400:
          description: |
            Invalid data supplied
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
  /version:
    get:
      summary: Current Version
      tags:
        - Authentication
      security:
        - OAuth:
            - basic
        - accessToken: []
      operationId: getVersion
      description: |
        Retrieve the current version of the Fortifi api
      responses:
        200:
          description: Version
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    type: string
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'
  '/visitors/{visitorId}':
    get:
      security:
        - OAuth:
            - visitor
        - accessToken: []
      tags:
          - Marketing
      summary: Retrieve information about a visitor
      description: This call will return information related to how a visitor arrived
      parameters:
        - $ref: '#/parameters/visitorId'
      responses:
        200:
          description: Pixels
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/VisitorResponse'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/visitors/{visitorId}/pixels':
    get:
      security:
        - OAuth:
            - visitor
        - accessToken: []
      tags:
        - Marketing
      summary: Retrieve pending pixels for this visitor
      description: This call will release pixels from the pending queue on read
      parameters:
        - $ref: '#/parameters/visitorId'
      responses:
        200:
          description: Pixels
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    type: array
                    items:
                      $ref: '#/definitions/AdvertiserPixel'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/visitors/{visitorId}/actions/{actionKey}':
    post:
      summary: Track an action
      tags:
        - Marketing
      description: |
        Track an action such as a lead or acquisition
      security:
        - OAuth:
            - visitor
        - accessToken: []
      parameters:
        - $ref: '#/parameters/visitorId'
        - name: actionKey
          description: Action key of the action to track e.g. lead
          in: path
          required: true
          type: string
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/PostActionPayload'

      responses:
        200:
          description: Action Tracked
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/VisitorPostAction'
        x-409:
          description: |
            The transaction ID specified has already been used for this action
        x-400:
          description: |
            Not enough information was provided to complete your request
            e.g. Missing Visitor ID and/or Client IP
        x-404:
          description: |
            The actionKey specified does not exist
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

  '/visitors/{visitorId}/actions/{actionKey}/reverse':
    post:
      summary: Reverse a previously tracked action
      tags:
        - Marketing
      description: |
        When an action has been reversed, e.g. cancelled, refunded
      security:
        - OAuth:
            - visitor
        - accessToken: []
      parameters:
        - $ref: '#/parameters/visitorId'
        - name: actionKey
          description: Action key of the action to reverse e.g. lead
          in: path
          required: true
          type: string
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/ReverseActionPayload'

      responses:
        200:
          description: Action Reversed
          schema:
            allOf:
              - $ref: '#/definitions/Envelope'
              - properties:
                  data:
                    $ref: '#/definitions/VisitorReversalAction'
        x-404:
          description: |
            The action you are trying to reverse cannot be found
        x-409:
          description: |
            The action specified has already been reversed
        x-423:
          description: |
            The event you are reversing is currently locked
        default:
          description: Error
          schema:
            $ref: '#/definitions/Envelope'

parameters:
  interactionType:
    name: interactionType
    description: Interaction Type
    required: true
    type: string
    in: formData
    enum:
      - unknown
      - voice
      - email
      - chat
      - ticket
      - meeting
      - remote
      - letter
      - social
  isoTime:
    name: isoTime
    description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
    type: string
    format: date-time
    in: formData
  userAgent:
    name: userAgent
    description: User Agent of the visitors browser 'HTTP_USER_AGENT'
    type: string
    in: formData
  language:
    name: language
    description: Language from visitors browser 'HTTP_ACCEPT_LANGUAGE'
    type: string
    in: formData
  encoding:
    name: encoding
    description: Encoding from the visitors browser 'HTTP_ACCEPT_ENCODING'
    type: string
    in: formData
  clientIp:
    name: clientIp
    description: IP Address of the visitor
    type: string
    in: formData
  optInStatus:
    name: optInStatus
    description: Status of customer email opt-in
    in: formData
    type: string
    enum:
      - no
      - clicked
      - confirmed
  unsubscribeType:
    name: unsubscribeType
    description: Unsubscribe Level
    in: formData
    type: string
    enum:
      - soft
      - hard
  optInData:
    name: optInData
    description: Additional data to store against opt-in
    in: formData
    type: array
    items:
      type: string
  chargebackState:
    name: state
    type: string
    in: formData
    enum:
      - alert
      - initiated
      - disputed
      - won
      - lost
      - undisputed_loss
    description: Current State
    required: true
  chargebackSource:
    name: source
    type: string
    in: formData
    enum:
      - gateway
      - ethoca
      - verifi
    description: Source of the alert, or gateway for everything else
    required: true
  visitorId:
    name: visitorId
    in: path
    type: string
    required: true
    description: |
      'Visitor ID from the cookie.
      If providing a pre-linked external reference, should be set to 'byref'.
      If no visitor ID is known, client IP should be provided and visitorId should be set to 'unknown''
  advertiserFid:
    name: advertiserFid
    in: path
    type: string
    required: true
    description: Advertiser FID to use
  publisherFid:
    name: publisherFid
    in: path
    type: string
    required: true
    description: Publisher FID to use
  costImportFid:
    name: costImportFid
    in: path
    type: string
    required: true
    description: Cost Import FID to use
  advertiserCampaignFid:
    name: advertiserCampaignFid
    in: path
    type: string
    required: true
    description: Advertiser Campaign FID to use
  publisherCampaignFid:
    name: publisherCampaignFid
    in: path
    type: string
    required: true
    description: Publisher Campaign FID to use
  customerFid:
    name: customerFid
    in: path
    type: string
    required: true
    description: Customer FID to use
  ticketPostTimestamp:
    name: ticketPostTimestamp
    in: path
    type: integer
    format: int64
    required: true
    description: Ticket Post Timestamp
  paymentMethodFid:
    name: paymentMethodFid
    in: path
    type: string
    required: true
    description: Payment Method FID to use
  paymentAccountFid:
    name: paymentAccountFid
    in: path
    type: string
    required: true
    description: Payment Account FID to use
  ticketFid:
    name: ticketFid
    in: path
    type: string
    required: true
    description: Ticket FID to use
  contactFid:
    name: contactFid
    in: path
    type: string
    required: true
    description: Contact FID to use
  flowFid:
    name: flowFid
    in: path
    type: string
    required: true
    description: Flow FID to use
  addressFid:
    name: addressFid
    in: path
    type: string
    required: true
    description: Address FID to use
  emailFid:
    name: emailFid
    in: path
    type: string
    required: true
    description: Email FID to use
  phoneFid:
    name: phoneFid
    in: path
    type: string
    required: true
    description: Phone FID to use
  noteColor:
    name: colour
    in: formData
    required: false
    description: Colour of the new ticket
    type: string
    enum:
      - blue
      - red
      - orange
      - yellow
      - indigo
      - violet
      - green
      - pink
      - grey
  paymentFid:
    name: paymentFid
    in: path
    type: string
    required: true
    description: Payment FID to use
  invoiceFid:
    name: invoiceFid
    in: path
    type: string
    required: true
    description: Invoice Fid to use
  paymentServiceFid:
    name: paymentServiceFid
    description: Payment Service FID to use
    type: string
    required: true
    in: formData
  subscriptionFid:
    name: subscriptionFid
    in: path
    type: string
    required: true
    description: Subscription FID to use
  periodFid:
    name: periodFid
    in: path
    type: string
    required: true
    description: Period FID to use
  subscriptionFids:
    name: subscriptionFids
    description: Subscription FIDs
    type: array
    items:
      type: string
    required: true
    in: formData
  emailAddress:
    name: emailAddress
    in: path
    type: string
    required: true
    description: Email Address
  hardwareId:
    name: hardwareId
    in: path
    type: string
    required: true
    description: Hardware ID
  phoneNumber:
    name: phoneNumber
    in: path
    type: string
    required: true
    description: Phone Number
  deliveryFid:
    name: deliveryFid
    in: path
    type: string
    required: true
    description: Delivery FID
  entityFid:
    name: entityFid
    in: path
    type: string
    required: true
    description: Entity FID to use
  serviceFid:
    name: serviceFid
    in: path
    type: string
    required: true
    description: Service FID to use
  incidentFid:
    name: incidentFid
    in: path
    type: string
    required: true
    description: Incident FID to use
  propertyName:
    name: propertyName
    in: path
    required: true
    type: string
    description: Property Name
  sectionName:
    name: sectionName
    in: path
    required: true
    type: string
    description: Section Name
  itemName:
    name: itemName
    in: path
    required: true
    type: string
    description: Item Name
  productFid:
    name: productFid
    in: path
    required: true
    type: string
  productGroupFid:
    name: productGroupFid
    in: path
    required: true
    type: string
  orderFid:
    name: orderFid
    in: path
    required: true
    type: string
  orderItemFid:
    name: orderItemFid
    in: path
    required: true
    type: string
  offerFid:
    name: offerFid
    in: path
    required: true
    type: string
    description: Offer FID or Coupon Code
  orderProductFid:
    name: orderProductFid
    in: path
    required: true
    type: string
  cardFid:
    name: cardFid
    in: path
    required: true
    type: string
  reasonGroupFid:
    name: reasonGroupFid
    in: path
    required: true
    type: string
  reasonGroupType:
    name: reasonGroupType
    in: query
    required: false
    type: string
  contactReference:
    name: contactReference
    in: path
    required: true
    type: string
  key:
    name: key
    in: path
    required: true
    type: string
  application:
    name: application
    in: path
    required: true
    type: string
  brandFid:
    name: brandFid
    in: path
    required: true
    type: string
  flowSearch:
    name: flowSearch
    in: path
    type: string
    required: true
    description: The unique code or fid for the flow you wish to retrieve
  sessionId:
    name: sessionId
    in: path
    type: string
    required: true
    description: The session id of a fortifi chat
  transactionId:
    name: transactionId
    in: path
    type: string
    required: true
  interactionFid:
    name: interactionFid
    in: path
    type: string
    required: true
  inviteCode:
    name: inviteCode
    in: path
    type: string
    required: true


definitions:
  creditAmountType:
    description: Credit amount type
    type: string
    enum:
      - percent_of_remaining
      - percent_of_total
      - fixed
  ModifySubscriptionMode:
    description: Mode to modify subscription with
    type: string
    enum:
      - prorate
      - extend
      - replace
  PaymentAccountType:
    description: Payment account type
    type: string
    enum:
      - unknown
      - visa
      - mastercard
      - amex
      - jcb
      - discover
      - diners
      - encrypted
      - paypal_personal
      - paypal_premier
      - paypal_business
      - paypal_verified
      - paypal_unverified
      - paypal
      - bitcoin
      - account_balance
  PaymentMethod:
    description: Payment Method
    type: string
    enum:
      - creditcard
      - debitcard
      - cheque
      - cash
      - prepaidcard
      - directdebit
      - bacs
      - standingorder
      - chaps
      - onlineservice
      - telephone
      - creditnote
      - virtualcard
      - giftcard
      - unknown
      - multiple
      - paypal
      - bitcoin
      - account_balance
  PaymentMode:
    description: Payment Mode
    type: string
    enum:
      - automatic
      - request
  reversalReason:
    description: The reason for reversing the action
    type: string
    enum:
      - chargeback
      - cancel
      - fraud
  AdvertiserType:
    description: Advertiser Type
    type: string
    enum:
      - affiliate
      - network
      - customer
      - display
      - priority_affiliate
      - offline
      - ppc
      - internal
      - search_engine
      - mobile
      - email
      - retarget
      - content
  publisherType:
    description: Publisher Type
    type: string
    enum:
      - affiliate
      - network
      - customer
      - display
      - priority_affiliate
      - offline
      - ppc
      - internal
      - search_engine
      - mobile
      - email
      - retarget
      - content
      - native
      - social
      - push
      - video
      - tv
      - seo
      - app_install
      - podcast
      - influencer
  customerAccountType:
    description: Account Type
    type: string
    enum:
      - unknown
      - student
      - charity
      - business
      - residential
      - enterprise
      - group
  customerAccountStatus:
    description: Account Status
    type: string
    enum:
      - setup
      - active
      - suspended
      - expired
      - cancelled
  cycleTermType:
    description: Term Type
    type: string
    enum:
      - onetime
      - lifetime
      - day
      - week
      - month
      - year
  discountType:
    description: Discount Type
    type: string
    enum:
      - fixed
      - percentage
  customerLifecycle:
    description: Customer Lifecycle Stage
    type: string
    enum:
      - closed
      - cold
      - customer
      - evangelist
      - lead
      - mql
      - opportunity
      - other
      - prospect
      - recommended
      - sql
      - subscriber
  customerSubscriptionType:
    description: Customer Subscription Status
    type: string
    enum:
      - none
      - trial
      - free
      - paid
  PaymentServiceProcessor:
    description: Payment Service Processor Type
    type: string
    enum:
      - paypal
      - wire
      - blackhole
      - cheque
      - prepayment
      - fortifipay
  CreateOrderType:
    description: Order Type (Must be initial to Auth Cards)
    type: string
    enum:
      - initial
      - purchase
  SubscriptionRefundType:
    description: Subscription Refund Type
    type: string
    enum:
      - prorate
      - full
  reasonGroupType:
    description: Reason Group Type
    type: string
    enum:
      - cancel
      - suspend
      - refund
      - credit
  purchaseStatus:
    description: Purchase Status
    type: string
    enum:
      - setup
      - trial
      - active
      - inactive
      - upgraded
      - suspended
      - cancelled
      - deleted
      - ended
      - setting_up
      - invalid
      - provision_prepare
      - provisioning
      - provisioned
      - provisioning_failed
  ticketStatus:
    description: Ticket Status
    type: string
    enum:
      - open
      - on_hold
      - pending_reply
      - resolved
      - invalid
      - duplicate
      - closed
      - trash
  appstoreNotificationType:
    description: Appstore Type
    type: string
    enum:
      - appstore_subscription_purchase
      - appstore_subscription_cancel
      - appstore_subscription_renew
  EnvelopeMeta:
    description: Envelope Meta
    properties:
      requestId:
        type: string
        description: Request ID
      code:
        type: number
        format: int32
        description: Status code
      message:
        type: string
        description: Status message
    required:
      - requestId
      - code
      - message

  Envelope:
    description: Envelope
    x-response-property: data
    properties:
      meta:
        $ref: '#/definitions/EnvelopeMeta'
      data:
        type: object
    required:
      - meta
      - data
  Fid:
    description: Generic Response
    properties:
      fid:
        type: string
        description: Object FID
    required:
      - fid

  Entity:
    description: Generic Response
    allOf:
      - $ref: '#/definitions/Fid'
      - properties:
          displayName:
            type: string
            description: Display Name
          description:
            type: string
            description: Description

  BoolMessage:
    description: Generic Response
    properties:
      message:
        type: string
        description: Status Message
      result:
        type: boolean
        description: Success or Not
    required:
      - message
      - result

  AuthToken:
    description: Authentication token used to access services
    properties:
      token:
        type: string
      expiry:
        type: number
        format: int64

  PubKey:
    description: Generic Response
    properties:
      key:
        type: string
        description: RSA Public Key

  People:
    description: People list
    allOf:
      - $ref: '#/definitions/Pagination'
      - properties:
          items:
            type: array
            items:
              $ref: '#/definitions/Person'

  Person:
    description: A person
    allOf:
      - $ref: '#/definitions/Entity'
      - properties:
          prefix:
            type: string
          firstName:
            type: string
          middleNames:
            type: string
          lastName:
            type: string
          suffix:
            type: string
          nickname:
            type: string
          birthday:
            type: string
          externalReference:
            type: string
          jobTitle:
            type: string
          ownerFid:
            type: string
          defaultEmailFid:
            type: string
          defaultEmail:
            type: string
            description: Default email
          defaultPhoneFid:
            type: string
          defaultPhone:
            type: string
            description: Default phone
          defaultAddressFid:
            type: string
          emails:
            $ref: '#/definitions/Emails'
            description: Only loaded with a flag
          phones:
            $ref: '#/definitions/Phones'
            description: Only loaded with a flag
          addresses:
            $ref: '#/definitions/Addresses'
            description: Only loaded with a flag

  Addresses:
    description: Generic Response
    properties:
      addresses:
        type: array
        items:
          $ref: '#/definitions/Address'

  Address:
    description: Generic Response
    allOf:
      - $ref: '#/definitions/Entity'
      - properties:
          address1:
            type: string
          address2:
            type: string
          address3:
            type: string
          town:
            type: string
          county:
            type: string
          country:
            type: string
          postalCode:
            type: string

  Phones:
    description: Generic Response
    properties:
      phones:
        type: array
        items:
          $ref: '#/definitions/Phone'

  Phone:
    description: Generic Response
    allOf:
      - $ref: '#/definitions/Entity'
      - properties:
          phone:
            type: string

  Emails:
    description: Generic Response
    properties:
      emails:
        type: array
        items:
          $ref: '#/definitions/Email'

  Email:
    description: Generic Response
    allOf:
      - $ref: '#/definitions/Entity'
      - properties:
          email:
            type: string
          messageGroups:
            $ref: '#/definitions/MessageGroups'

  MessageGroups:
    description: Generic Response
    properties:
      groups:
        type: array
        items:
          $ref: '#/definitions/MessageGroup'

  MessageGroup:
    description: Generic Response
    allOf:
      - $ref: '#/definitions/Entity'
      - properties:
          status:
            type: string


  User:
    description: User
    allOf:
      - $ref: '#/definitions/Fid'
      - properties:
          username:
            type: string
            description: Username
          language:
            type: string
            description: Language
          timezone:
            type: string
            description: Timezone for this user

  Organisation:
    description: Organisation
    properties:
      orgName:
        type: string
      orgFid:
        type: string
      orgDomain:
        type: string
      primaryColour:
        type: string
      logo:
        type: string

  Brands:
    description: Brands
    properties:
      brands:
        type: array
        items:
          $ref: '#/definitions/Brand'

  AttachmentUrl:
    description: Attachment URL
    properties:
      url:
        type: string
        description: URL to upload attachment to
      file:
        type: string

  Brand:
    description: Brand
    properties:
      brandName:
        type: string
      primaryDomain:
        type: string
      brandFid:
        type: string

  Payments:
    description: Payments
    properties:
      payments:
        type: array
        items:
          $ref: '#/definitions/Payment'

  Payment:
    description: Payment
    allOf:
      - $ref: '#/definitions/Fid'
      - properties:
          direction:
            type: string
          currency:
            type: string
          amount:
            type: number
            format: float
          fee:
            type: number
            format: float
          feeCurrency:
            type: string
          type:
            type: string
            enum:
              - affiliate
              - invoice
              - order
              - unknown
              - preauth
          status:
            type: string
            enum:
              - pending
              - paid
              - refund-pending
              - refunded
              - partially-refunded
              - chargeback
              - chargeback-pending
          transactionId:
            type: string
          statusCode:
            type: string
          statusMessage:
            type: string
          statementDescriptor:
            type: string
          orderFid:
            type: string
          invoiceFid:
            type: string
          fraudFid:
            type: string
          processed:
            type: boolean
          processedDate:
            type: number
            format: int64
          subGatewayFid:
            type: string
          subGatewayName:
            type: string
          subGatewayTransactionId:
            type: string
          disputeFid:
            type: string
          sourceAccountType:
            type: string
          sourceAccountFid:
            type: string
          sourceFid:
            type: string

  CreateInteraction:
    description: Create Interaction Response
    properties:
      link:
        type: string
      code:
        type: string

  CustomerFlags:
    description: Flags assigned to the customer
    properties:
      qualified:
        type: boolean
      renewing:
        type: boolean
      fraud:
        type: boolean
      chargeback:
        type: boolean
      discount:
        type: boolean
      impulse:
        type: boolean
      refunded:
        type: boolean
      hasSubscribed:
        type: boolean
      isSubscribed:
        type: boolean
      hasPurchased:
        type: boolean
      loyal:
        type: boolean
      vip:
        type: boolean
      testAccount:
        type: boolean

  Customer:
    description: Customer
    allOf:
      - $ref: '#/definitions/Fid'
      - properties:
          id:
            type: string
          name:
            type: string
          displayName:
            type: string
          firstName:
            type: string
          lastName:
            type: string
          email:
            type: string
          phone:
            type: string
          phoneNumber:
            type: string
          currency:
            type: string
          externalReference:
            type: string
          companyFid:
            type: string
          timezone:
            type: string
          billingType:
            type: string
          taxNumber:
            type: string
          companyNumber:
            type: string
          knownIP:
            type: string
          accountManagerFid:
            type: string
          affiliateFid:
            type: string
          foundationFid:
            type: string
          affiliateType:
            type: string
          campaignFid:
            type: string
          sid1:
            type: string
          sid2:
            type: string
          sid3:
            type: string
          lifecycleStage:
            type: string
          accountType:
            type: string
          accountStatus:
            type: string
          subscriptionType:
            type: string
          continent:
            type: string
          country:
            type: string
          county:
            type: string
          city:
            type: string
          postal:
            type: string
          flags:
            $ref: '#/definitions/CustomerFlags'

  Advertiser:
    description: DEPRECATED
    allOf:
      - $ref: '#/definitions/Entity'
      - properties:
          type:
            type: string
          contactName:
            type: string
          companyName:
            type: string
          phoneFid:
            type: string
          emailFid:
            type: string
          website:
            type: string
          acceptedTerms:
            type: string
          suspended:
            type: string
          accountManagerFid:
            type: string
          foundationFid:
            type: string
          companyFid:
            type: string
          isDisabled:
            type: string
          email:
            type: string
          phone:
            type: string
          payoutType:
            type: string
          approved:
            type: boolean

  Publisher:
    description: Publisher
    allOf:
      - $ref: '#/definitions/Entity'
      - properties:
          type:
            $ref: '#/definitions/publisherType'
          contactName:
            type: string
          companyName:
            type: string
          phoneFid:
            type: string
          emailFid:
            type: string
          website:
            type: string
          acceptedTerms:
            type: string
          suspended:
            type: string
          accountManagerFid:
            type: string
          foundationFid:
            type: string
          brandFid:
            type: string
          isDisabled:
            type: string
          email:
            type: string
          phone:
            type: string
          payoutType:
            type: string
          approved:
            type: boolean

  Advertisers:
    description: DEPRECATED
    allOf:
      - $ref: '#/definitions/Pagination'
      - properties:
          advertisers:
            type: array
            items:
              $ref: '#/definitions/Publisher'

  Publishers:
    description: Publishers
    allOf:
      - $ref: '#/definitions/Pagination'
      - properties:
          publishers:
            type: array
            items:
              $ref: '#/definitions/Publisher'

  AdvertiserCampaign:
    description: DEPRECATED
    allOf:
      - $ref: '#/definitions/Entity'
      - properties:
          hash:
            type: string
          affiliateFid:
            type: string
          brandFid:
            type: string

  PublisherCampaigns:
    description: Publisher Campaigns
    allOf:
      - $ref: '#/definitions/Pagination'
      - properties:
          campaigns:
            type: array
            items:
              $ref: '#/definitions/PublisherCampaign'

  PublisherCampaign:
    description: Publisher Campaign
    allOf:
      - $ref: '#/definitions/Entity'
      - properties:
          hash:
            type: string
          affiliateFid:
            type: string
          brandFid:
            type: string

  ImportCostPayload:
    description: Import Publisher Cost csv
    properties:
      filename:
        type: string
      mimeType:
        type: string
      data:
        type: string

  ImportCost:
    description: Import Publisher Cost Response
    properties:
      fid:
        type: string
      message:
        type: string
      result:
        type: boolean

  AdvertiserPixel:
    description: Pixel
    properties:
      url:
        type: string
      method:
        type: string
        enum:
          - iframe
          - img
          - js
          - curl
          - html
      content:
        type: string

  VisitorResponse:
    description: Traffic Visitor
    properties:
      deviceFid:
        type: string
      referrerUrl:
        type: string
      affiliateFid:
        type: string
      campaignHash:
        type: string
      sid1:
        type: string
      sid2:
        type: string
      sid3:
        type: string

  VisitorPostAction:
    description: Vistor Action
    properties:
      visitorId:
        type: string
      eventId:
        type: string
      sid1:
        type: string
      sid2:
        type: string
      sid3:
        type: string
      advertiserFid:
        type: string
      campaignFid:
        type: string
      commission:
        type: number
        format: float
      commissionCurrency:
        type: string
      pixels:
        type: array
        items:
          $ref: '#/definitions/AdvertiserPixel'

  VisitorReversalAction:
    description: Visitor Action Reversal
    properties:
      visitorId:
        type: string
      eventId:
        type: string
      advertiserFid:
        type: string
      campaignFid:
        type: string
      reversedCommission:
        type: number
        format: float
      feeCharged:
        type: number
        format: float
      commissionCurrency:
        type: string

  Licence:
    description: Licence
    properties:
      purchaseFid:
        type: string
      customerFid:
        type: string
      status:
        type: string
      dateCreated:
        description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
        type: string
        format: date-time
      lastRenewDate:
        description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
        type: string
        format: date-time
      renewDate:
        description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
        type: string
        format: date-time
      nextRenewDate:
        description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
        type: string
        format: date-time
      autoSuspendDate:
        description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
        type: string
        format: date-time
      autoCancelDate:
        description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
        type: string
        format: date-time
      startDate:
        description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
        type: string
        format: date-time
      endDate:
        description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
        type: string
        format: date-time
      trialStartDate:
        description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
        type: string
        format: date-time
      trialEndDate:
        description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
        type: string
        format: date-time
      cycleTerm:
        type: string
      cycleExact:
        type: string
      cycleType:
        $ref: '#/definitions/cycleTermType'
      cycle:
        description: Interval in ISO 8601 standard
        type: string

  ResourceAllocations:
    description: Resource Allocations
    allOf:
      - $ref: '#/definitions/Pagination'
      - properties:
          allocations:
            type: array
            items:
              $ref: '#/definitions/ResourceAllocation'

  ResourceAllocation:
    description: Resource Allocation
    properties:
      resourceFid:
        type: string
      allocation:
        type: string
      resourceGatewayPath:
        type: string

  Periods:
    description: Generic Response
    allOf:
      - $ref: '#/definitions/Pagination'
      - properties:
          periods:
            type: array
            items:
              $ref: '#/definitions/Period'

  Period:
    description: A purchase period
    allOf:
      - $ref: '#/definitions/Entity'
      - properties:
          chargeDate:
            type: integer
            format: int64
          status:
            type: string
          refundReason:
            type: string
          periodFid:
            type: string
          paymentFid:
            type: string
          refundAmount:
            type: number
            format: float
          taxAmount:
            type: number
            format: float
          totalAmount:
            type: number
            format: float
          amountPaid:
            type: number
            format: float
          creditedAmount:
            type: number
            format: float
          outstandingAmount:
            type: number
            format: float
          periodStart:
            type: integer
            format: int64
          periodEnd:
            type: integer
            format: int64

  Subscriptions:
    description: Generic Response
    allOf:
      - $ref: '#/definitions/Pagination'
      - properties:
          subscriptions:
            type: array
            items:
              $ref: '#/definitions/Subscription'

  Subscription:
    description: Generic Response
    allOf:
      - $ref: '#/definitions/Entity'
      - properties:
          paidUntil:
            description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
            type: string
            format: date-time
          cycle:
            description: Interval in ISO 8601 standard
            type: string
          autoCharge:
            type: boolean
          productFid:
            type: string
          status:
            $ref: '#/definitions/purchaseStatus'
          amount:
            type: number
            format: float
          autoCancelDate:
            description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
            type: string
            format: date-time
          autoSuspendDate:
            description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
            type: string
            format: date-time
          cancelDays:
            type: integer
            format: int32
          cancelReason:
            type: string
          currency:
            type: string
          parentFid:
            type: string
          productManagerType:
            type: string
          priceFid:
            type: string
          skuFid:
            type: string
          offerFid:
            type: string
          dateCancelled:
            description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
            type: string
            format: date-time
          dateCreated:
            description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
            type: string
            format: date-time
          dateInactive:
            description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
            type: string
            format: date-time
          dateModified:
            description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
            type: string
            format: date-time
          dateStateChanged:
            description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
            type: string
            format: date-time
          dateSuspended:
            description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
            type: string
            format: date-time
          dateUpgraded:
            description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
            type: string
            format: date-time
          discount:
            type: number
            format: float
          endDate:
            description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
            type: string
            format: date-time
          invoiceFid:
            type: string
          isPaid:
            type: boolean
          lastRenewDate:
            description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
            type: string
            format: date-time
          nextPaymentDate:
            description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
            type: string
            format: date-time
          nextRenewalAmount:
            type: number
            format: float
          nextRenewDate:
            description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
            type: string
            format: date-time
          paidRenewals:
            type: integer
            format: int32
          quantity:
            type: integer
            format: int32
          renewalAdvanceDays:
            type: integer
            format: int32
          renewDate:
            description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
            type: string
            format: date-time
          setupAmount:
            type: number
            format: float
          setupDiscount:
            type: number
            format: float
          shouldCancel:
            type: boolean
          shouldSuspend:
            type: boolean
          startDate:
            description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
            type: string
            format: date-time
          suspendDays:
            type: integer
            format: int32
          suspendReason:
            type: string
          taxAmount:
            type: number
            format: float
          totalAmount:
            type: number
            format: float
          totalRenewals:
            type: integer
            format: int32
          trialEndDate:
            description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
            type: string
            format: date-time
          trialStartDate:
            description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
            type: string
            format: date-time
          uniqueReference:
            description: Licence Key / Membership Number
            type: string
          identity:
            description: An identity for this subscription, this is a non unique identfier
            type: string
          externalReference:
            description: Unique External Identifier for this subscription
            type: string
          sourceFid:
            description: The FID of the object that created this subscription (most commonly, order fid)
            type: string

  SubscriptionCancellation:
    description: Generic Response
    allOf:
      - $ref: '#/definitions/Subscription'
      - properties:
          amountWithTax:
            type: number
            format: float
          amountWithoutTax:
            type: number
            format: float
          tax:
            type: number
            format: float
          terminationFee:
            type: number
            format: float
          terminationFeeWithTax:
            type: number
            format: float

  CalculateSubscriptionRefund:
    description: Response from calculating a refund on a subscription
    properties:
      amountWithTax:
        type: number
        format: float
      amountWithoutTax:
        type: number
        format: float
      tax:
        type: number
        format: float
      terminationFee:
        type: number
        format: float
      terminationFeeWithTax:
        type: number
        format: float

  Invoices:
    description: Generic Response
    allOf:
      - $ref: '#/definitions/Pagination'
      - properties:
          invoices:
            type: array
            items:
              $ref: '#/definitions/InvoiceSummary'

  InvoiceSummary:
    description: Generic Response
    allOf:
      - $ref: '#/definitions/Entity'
      - properties:
          invoiceName:
            type: string
          invoiceNumber:
            type: integer
            format: int32
          invoiceDate:
            description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
            type: string
            format: date-time
          currency:
            type: string
          dueDate:
            description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
            type: string
            format: date-time
          paymentDate:
            description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
            type: string
            format: date-time
          amountPaid:
            type: number
            format: float
          baseAmount:
            type: number
            format: float
          discountAmount:
            type: number
            format: float
          taxAmount:
            type: number
            format: float
          creditedAmount:
            type: number
            format: float
          totalAmount:
            type: number
            format: float
          outstandingAmount:
            type: number
            format: float
          refundAmount:
            type: number
            format: float
          invoiceStatus:
            type: string

  Invoice:
    description: Generic Response
    allOf:
      - $ref: '#/definitions/Entity'
      - properties:
          invoiceDate:
            description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
            type: string
            format: date-time
          invoiceName:
            type: string
          invoiceNumber:
            type: integer
            format: int32
          currency:
            type: string
          dueDate:
            description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
            type: string
            format: date-time
          paymentDate:
            description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
            type: string
            format: date-time
          amountPaid:
            type: number
            format: float
          baseAmount:
            type: number
            format: float
          discountAmount:
            type: number
            format: float
          taxAmount:
            type: number
            format: float
          creditedAmount:
            type: number
            format: float
          totalAmount:
            type: number
            format: float
          outstandingAmount:
            type: number
            format: float
          refundAmount:
            type: number
            format: float
          invoiceStatus:
            type: string
          totalItems:
            type: integer
            format: int32
          invoiceItems:
            type: array
            items:
              $ref: '#/definitions/InvoiceItem'
          chargeId:
            type: string

  InvoiceDownloadResponse:
    description: Generic Response
    properties:
      url:
        type: string

  InvoiceItem:
    description: Generic Response
    allOf:
      - $ref: '#/definitions/Entity'
      - properties:
          productFid:
            type: string
          purchaseFid:
            type: string
          totalAmount:
            type: number
            format: float
          subItems:
            type: array
            items:
              $ref: '#/definitions/InvoiceSubItem'

  InvoiceTaxItem:
    description: Generic Response
    allOf:
      - $ref: '#/definitions/Entity'
      - properties:
          productFid:
            type: string
          purchaseFid:
            type: string
          amount:
            type: number
            format: float

  InvoiceDiscountItem:
    description: Generic Response
    allOf:
      - $ref: '#/definitions/Entity'
      - properties:
          productFid:
            type: string
          purchaseFid:
            type: string
          amount:
            type: number
            format: float


  InvoiceSubItem:
    description: Generic Response
    allOf:
      - $ref: '#/definitions/Entity'
      - properties:
          fromDate:
            description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
            type: string
            format: date-time
          toDate:
            description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
            type: string
            format: date-time
          perUnitAmount:
            type: number
            format: float
          totalAmount:
            type: number
            format: float
          itemType:
            type: string
          quantity:
            type: integer
            format: int32

  InvoiceCreditNote:
    description: Generic Response
    allOf:
      - $ref: '#/definitions/Entity'
      - properties:
          invoiceFid:
            type: string
          chargeRequestFid:
            type: string
          creditDate:
            description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
            type: string
            format: date-time
          amount:
            type: number
            format: float
          currency:
            type: string

  Pagination:
    description: Generic Response
    properties:
      limit:
        type: integer
        format: int32
      page:
        type: integer
        format: int32
      totalItems:
        type: integer
        format: int32

  Products:
    description: Generic Response
    properties:
      products:
        type: array
        items:
          $ref: '#/definitions/Product'

  Product:
    description: Generic Response
    allOf:
      - $ref: '#/definitions/Entity'
      - properties:
          productType:
            type: integer
            format: int32
          parentFid:
            type: string
          statementDescription:
            type: string
          trialDays:
            type: integer
            format: int32
          defaultPriceFid:
            type: string
          defaultPrice:
            $ref: '#/definitions/ProductPrice'
          taxable:
            type: integer
            format: int64
          taxGroupFid:
            type: string
          maxQuantity:
            type: integer
            format: int64
          allowQuantity:
            type: integer
            format: int32
          managerType:
            type: string

  ProductGroups:
    description: Generic Response
    properties:
      groups:
        type: array
        items:
          $ref: '#/definitions/ProductGroup'

  ProductGroup:
    description: Generic Response
    allOf:
      - $ref: '#/definitions/Entity'
      - properties:
          products:
            type: array
            items:
              $ref: '#/definitions/Fid'

  ProductPriceBands:
    description: Product Prices
    properties:
      pricebands:
        type: array
        items:
          $ref: '#/definitions/ProductPriceBand'

  ProductPriceBand:
    description: Product Price
    allOf:
      - $ref: '#/definitions/Entity'
      - properties:
          productFid:
            type: string


  ProductPrices:
    description: Product Prices
    properties:
      prices:
        type: array
        items:
          $ref: '#/definitions/ProductPrice'

  ProductPrice:
    description: Product Price
    allOf:
      - $ref: '#/definitions/Entity'
      - properties:
          productFid:
            type: string
          currency:
            type: string
          price:
            type: string
          setupFee:
            type: string
          cycleType:
            $ref: '#/definitions/cycleTermType'
          cycleTerm:
            type: number
            format: int32
          cycleExact:
            type: string
          cycle:
            description: Interval in ISO 8601 standard
            type: string
          priceBandFid:
            type: string
          skuFid:
            type: string
          taxInclusive:
            type: boolean

  ProductSkus:
    description: Product SKUs
    properties:
      skus:
        type: array
        items:
          $ref: '#/definitions/ProductSku'

  ProductSku:
    description: Product SKU
    allOf:
      - $ref: '#/definitions/Entity'
      - properties:
          productFid:
            type: string
          sku:
            type: string
          priceBandFid:
            type: string
          resourcePoolFid:
            type: string

  FlowLogMetricPayload:
    description: Flow Log Metric
    properties:
      actionTimestamp:
        type: number
        format: int64
      companyFid:
        type: string
      sessionId:
        type: string
      action:
        type: string
      language:
        type: string
      languageSpecific:
        type: string
      os:
        type: string
      osVersion:
        type: string
      osBlended:
        type: string
      platform:
        type: string
      device:
        type: string
      client:
        type: string
      clientVersion:
        type: string
      clientBlended:
        type: string
      ip:
        type: string
      city:
        type: string
      country:
        type: string
      state:
        type: string
      postal:
        type: string
      timezone:
        type: string
      continent:
        type: string
      affiliateFid:
        type: string
      foundationFid:
        type: string
      affiliateType:
        type: string
      campaignHash:
        description: Advertiser Campaign to track this action to (if not already locked)
        type: string
      campaignFid:
        type: string
      sid1:
        type: string
      sid2:
        type: string
      sid3:
        type: string
      customerFid:
        type: string
      productFid:
        type: string
      priceFid:
        type: string
      purchaseFid:
        type: string
      currency:
        type: string
      amount:
        type: string
    required:
      - companyFid
      - sessionId
      - action

  FraudScan:
    description: Result of a fraud scan
    properties:
      service:
        type: string
      score:
        type: string
      message:
        type: string
      requestId:
        type: string
      recommendation:
        type: string
      metaDataItems:
        type: array
        items:
          $ref: '#/definitions/FraudScanMetaData'

  FraudScanMetaData:
    description: Individual fraud scan metadata item
    properties:
      key:
        type: string
      value:
        type: string

  CalculatedSubscriptionModification:
    description: Generic Response
    properties:
      nextRenewalAmount:
        type: number
        format: float
      nextRenewalDiscount:
        type: number
        format: float
      nextRenewalTax:
        type: number
        format: float
      nextRenewalTotal:
        type: number
        format: float
      nextRenewalDate:
        type: number
        format: int64
      setupAmount:
        type: number
        format: float
      setupDiscount:
        type: number
        format: float
      chargeAmount:
        type: number
        format: float
      chargeTax:
        type: number
        format: float
      chargeTotal:
        type: number
        format: float

  Orders:
    description: List of orders
    properties:
      orders:
        type: array
        items:
          $ref: '#/definitions/Order'

  Order:
    description: An Order
    allOf:
      - $ref: '#/definitions/Entity'
      - properties:
          id:
            type: string
          orderHash:
            type: string
          externalReference:
            type: string
          state:
            type: number
            format: int32
          queueFid:
            type: string
          offerFid:
            type: string
          couponCode:
            type: string
          amount:
            type: number
            format: float
          setupAmount:
            type: number
            format: float
          setupDiscountAmount:
            type: number
            format: float
          taxAmount:
            type: number
            format: float
          totalAmount:
            type: number
            format: float
          currency:
            type: string
          country:
            type: string
          discountAmount:
            type: number
            format: float
          discountType:
            type: string
          approvedByFid:
            type: string
          userAgent:
            type: string
          userIp:
            type: string
          paymentAccountFid:
            type: string
          paymentServiceType:
            type: string
          lastPaymentFid:
            type: string
          brandFid:
            type: string
          customerFid:
            type: string
          fraudFid:
            type: string
          invoiceFid:
            type: string
          amountPaid:
            type: number
            format: float
          chargeId:
            type: string
          authorizeId:
            type: string
          orderType:
            type: string
            enum:
              - initial
              - purchase
              - cancel
              - prerenew
          hasProduct:
            type: boolean
          hasSubscription:
            type: boolean
          hasAddon:
            type: boolean
          hasModify:
            type: boolean

  UpdateOrderItemPayload:
    properties:
      parentFid:
        type: string
      identity:
        type: string
      setProperties:
        $ref: '#/definitions/PropertyBulkSetPayload'
      displayName:
        type: string

  OrderProducts:
    description: Generic Response
    properties:
      products:
        type: array
        items:
          $ref: '#/definitions/OrderProduct'

  OrderAddProducts:
    description: Generic Response
    allOf:
      - $ref: '#/definitions/OrderProducts'
      - properties:
          order:
            $ref: '#/definitions/Order'

  OrderProduct:
    description: Generic Response
    allOf:
      - $ref: '#/definitions/Entity'
      - properties:
          price:
            type: number
            format: float
          priceFid:
            type: string
          offerFid:
            type: string
          productFid:
            type: string
          quantity:
            type: integer
            format: int64
          renewalDate:
            description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
            type: string
            format: date-time
          purchaseFid:
            type: string
          skuFid:
            type: string
          currency:
            type: string
          discountAmount:
            type: number
            format: float
          setupFee:
            type: number
            format: float
          setupDiscountAmount:
            type: number
            format: float
          taxAmount:
            type: number
            format: float
          totalAmount:
            type: number
            format: float
          cycleType:
            type: string
            $ref: '#/definitions/cycleTermType'
          cycleTerm:
            type: number
            format: int32
          cycleExact:
            type: string
          cycle:
            description: Interval in ISO 8601 standard
            type: string
          initialTermStartDate:
            description: Custom initial term start date (Time in ISO 8601 standard e.g 2015-12-05T13:11:59Z)
            type: string
          initialTermEndDate:
            description: Custom initial term end date (Time in ISO 8601 standard e.g 2015-12-05T13:11:59Z)
            type: string
          parentFid:
            type: string
          identity:
            type: string

  OrderVerification:
    description: Generic Response
    properties:
      requireRedirect:
        type: boolean
      redirectUrl:
        type: string

  OrderConfirmation:
    description: Generic Response
    properties:
      paymentAccountFid:
        type: string
      paymentMode:
        $ref: '#/definitions/PaymentMode'
      success:
        type: boolean
      message:
        type: string

  PaymentAccounts:
    description: Generic Response
    properties:
      accounts:
        type: array
        items:
          $ref: '#/definitions/PaymentAccount'

  PaymentMethods:
    description: Generic Response
    properties:
      accounts:
        type: array
        items:
          $ref: '#/definitions/PaymentMethodResponse'

  PaymentMethodResponse:
    description: Payment Method Response
    allOf:
      - $ref: '#/definitions/Entity'
      - properties:
          methodType:
            type: string
          methodSubType:
            type: string
          methodScheme:
            type: string
          issuerName:
            type: string
          issueNumber:
            type: string
          validFromDate:
            description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
            type: string
            format: date-time
          expiryDate:
            description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
            type: string
            format: date-time
          accountHolder:
            type: string
          last4:
            type: string
          tokenUuid:
            type: string
          isPrimary:
            type: boolean
          isPending:
            type: boolean
          lockExpiresAt:
            description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
            type: string
            format: date-time
          lastIdentifyTime:
            description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
            type: string
            format: date-time
          identifyCount:
            type: number
          lastChallengeTime:
            description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
            type: string
            format: date-time
          lastSuccessChallengeTime:
            description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
            type: string
            format: date-time
          challengeCount:
            type: number
          successfulChallenges:
            type: number
          successfulTransactions:
            type: number
          declineCount:
            type: number
          externalReference:
            description: External payer reference
            type: string
          lookupCode:
            type: string

  PaymentAccount:
    description: Generic Response
    allOf:
      - $ref: '#/definitions/Entity'
      - properties:
          accountType:
            $ref: '#/definitions/PaymentAccountType'
          paymentMethod:
            $ref: '#/definitions/PaymentMethod'
          paymentMode:
            $ref: '#/definitions/PaymentMode'
          accountHolder:
            type: string
          isPrimary:
            type: boolean

  PaymentCards:
    description: Generic Response
    properties:
      cards:
        type: array
        items:
          $ref: '#/definitions/PaymentCard'

  PaymentCard:
    description: Generic Response
    allOf:
      - $ref: '#/definitions/Entity'
      - properties:
          nameOnCard:
            type: string
          expiryMonth:
            type: number
          expiryYear:
            type: number
          issue:
            type: number
          last4:
            type: number
          cardType:
            type: string

  PaypalInit:
    description: Generic Response
    properties:
      redirectUrl:
        type: string

  ConfigItems:
    description: Generic Response
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/ConfigItem'

  ConfigItem:
    description: Generic Response
    allOf:
      - $ref: '#/definitions/Entity'
      - properties:
          entityFid:
            type: string
          sectionName:
            type: string
          itemName:
            type: string
          value:
            type: string

  PaymentGateways:
    description: Generic Response
    allOf:
      - $ref: '#/definitions/Pagination'
      - properties:
          gateways:
            type: array
            items:
              $ref: '#/definitions/PaymentGateway'

  PaymentGateway:
    description: Generic Response
    allOf:
      - $ref: '#/definitions/Entity'
      - properties:
          externalId:
            type: string
          enabled:
            type: boolean
          brands:
            type: array
            items:
              type: string
          currencies:
            type: array
            items:
              type: string
          cardTypes:
            type: array
            items:
              type: string
          provider:
            type: string

  ProductOffers:
    description: Generic Response
    properties:
      offers:
        type: array
        items:
          $ref: '#/definitions/ProductOffer'

  ProductOffer:
    description: Generic Response
    allOf:
      - $ref: '#/definitions/Entity'
      - properties:
          couponCode:
            type: string
          applyFid:
            type: string
          maxUsages:
            type: integer
            format: int32
          expiryTime:
            description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
            type: string
            format: date-time
          discountAmount:
            type: number
            format: float
          discountType:
            $ref: '#/definitions/discountType'
          setupDiscountAmount:
            type: number
            format: float
          setupDiscountType:
            $ref: '#/definitions/discountType'
          term:
            type: integer
            format: int32
          termType:
            $ref: '#/definitions/cycleTermType'
          cycle:
            description: Interval in ISO 8601 standard
            type: string
          period:
            description: Interval in ISO 8601 standard
            type: string
          restrictive:
            type: boolean

  Tickets:
    description: Generic Response
    allOf:
      - $ref: '#/definitions/Pagination'
      - properties:
          tickets:
            type: array
            items:
              $ref: '#/definitions/Ticket'

  Ticket:
    description: Generic Response
    allOf:
      - $ref: '#/definitions/Entity'
      - properties:
          hash:
            type: string
          customerFid:
            type: string
          companyFid:
            type: string
          departmentFid:
            type: string
          queueFid:
            type: string
          agentFid:
            type: string
          slaFid:
            type: string
          ticketType:
            type: string
          status:
            type: number
            format: int64
          impact:
            type: number
            format: int64
          urgency:
            type: number
            format: int64
          priority:
            type: number
            format: int64
          tier:
            type: number
            format: int64
          outboundEmail:
            type: string
          outboundName:
            type: string
          inboundEmail:
            type: string
          inboundName:
            type: string
          isSpam:
            type: boolean
          responseTargetTime:
            type: number
            format: int64
          resolveTargetTime:
            type: number
            format: int64
          postCount:
            type: number
            format: int64
          lastReplySentTime:
            type: number
            format: int64
          lastReplyReceivedTime:
            type: number
            format: int64
          priorityAdjustment:
            type: number
            format: int64
          locked:
            type: boolean
          lockedByFid:
            type: string
          attachments:
            type: number
            format: int64
          restrictedAccess:
            type: boolean
          cc:
            type: string
          bcc:
            type: string
          language:
            type: string
          dateCreated:
            type: number
            format: int64
          dateModified:
            type: number
            format: int64
          attachmentUrls:
            type: array
            items:
              type: string

  Attachments:
    description: List of attachments
    properties:
      attachments:
        type: array
        items:
          $ref: '#/definitions/Attachment'

  Attachment:
    description: An attachment
    properties:
      objectFid:
        type: string
      uniqueName:
        type: string
      fileName:
        type: string
      mimeType:
        type: string
      size:
        type: integer
        format: int32
      md5sum:
        type: string
      virusFound:
        type: boolean
      virusName:
        type: string
      downloadUrl:
        type: string
      meta:
        type: object
        additionalProperties:
          type: string

  TicketPosts:
    description: Ticket Posts
    properties:
      posts:
        type: array
        items:
          $ref: '#/definitions/TicketPost'

  TicketPost:
    description: Post On a Ticket
    properties:
      timestamp:
        type: number
        format: int64
      authorFid:
        type: string
      senderFid:
        type: string
      textBody:
        type: string
      htmlBody:
        type: string
      language:
        type: string
      hasAttachments:
        type: boolean
      attachmentCount:
        type: number
        format: int64

  ReasonGroups:
    description: Reason Groups
    properties:
      reasonGroups:
        type: array
        items:
          $ref: '#/definitions/ReasonGroup'

  ReasonGroup:
    description: Reason Group
    allOf:
      - $ref: '#/definitions/Entity'
      - properties:
          builtIn:
            type: boolean
          reasonCount:
            type: number
            format: int64
          type:
            $ref: '#/definitions/reasonGroupType'

  Reasons:
    description: Reasons
    properties:
      reasons:
        type: array
        items:
          $ref: '#/definitions/Reason'

  Reason:
    description: Reason
    allOf:
      - $ref: '#/definitions/Entity'
      - properties:
          groupFid:
            type: string
            description: FID for the reason group
          usedCount:
            type: number
            format: int64

  PropertyDefinitions:
    description: Property Definitions
    properties:
      properties:
        type: array
        items:
          $ref: '#/definitions/PropertyDefinition'

  PropertyDefinition:
    description: Definition of a property
    allOf:
      - $ref: '#/definitions/Entity'
      - properties:
          key:
            type: string
          groupFid:
            type: string
          type:
            type: string
          values:
            type: array
            items:
              type: string
          valueType:
            type: string
          validationType:
            type: string
            enum:
              - regex
              - prerequisite
          validationConfig:
            type: string

  Properties:
    description: Properties set on an entity
    properties:
      values:
        description: Value properties
        type: array
        items:
          $ref: '#/definitions/PropertyValue'
      flags:
        description: Flag properties
        type: array
        items:
          $ref: '#/definitions/PropertyFlag'
      counters:
        description: Counter properties
        type: array
        items:
          $ref: '#/definitions/PropertyCounter'

  PropertyValue:
    description: A value type property
    properties:
      key:
        description: Property name
        type: string
      propertyValue:
        description: Value property value
        type: string

  PropertyFlag:
    description: A flag type property
    properties:
      key:
        description: Property name
        type: string
      value:
        description: Flag value
        type: boolean

  PropertyCounter:
    description: A counter type property
    properties:
      key:
        description: Property name
        type: string
      value:
        description: Counter value
        type: number

  Labels:
    description: Labels
    properties:
      labels:
        type: array
        items:
          $ref: '#/definitions/Label'

  Label:
    description: Label
    allOf:
      - $ref: '#/definitions/Fid'
      - properties:
          label:
            type: string
            description: Label
          value:
            type: string
            description: Value

  Services:
    description: Services
    properties:
      services:
        type: array
        items:
          $ref: '#/definitions/Service'

  Service:
    description: Service
    properties:
      name:
        type: string
      description:
        type: string
      status:
        type: string
      inheritedStatus:
        type: string
      visibility:
        type: string
      parentServiceFid:
        type: string
      id:
        type: number
        format: int64
      viewPolicy:
        type: string
      editPolicy:
        type: string
      dateCreated:
        type: number
        format: int64
      dateModified:
        type: number
        format: int64
      dateStateChanged:
        type: number
        format: int64
      displayName:
        type: string
      currentState:
        type: number
        format: int64
      fid:
        type: string
      brandFid:
        type: string

  ChatSessions:
    description: List of chat sessions
    allOf:
      - $ref: '#/definitions/Pagination'
      - properties:
          chatSessions:
            type: array
            items:
              $ref: '#/definitions/ChatSession'

  ChatSession:
    description: Chat session
    allOf:
      - $ref: '#/definitions/Entity'
      - properties:
          timeStarted:
            type: number
            format: int64
          timeEnded:
            type: number
            format: int64

  IncidentUpdates:
    description: Incident updates
    properties:
      incidentUpdates:
        type: array
        items:
          $ref: '#/definitions/IncidentUpdate'

  IncidentUpdate:
    description: Incident Update
    properties:
      status:
        type: string
      message:
        type: string
      id:
        type: number
        format: int64
      viewPolicy:
        type: string
      editPolicy:
        type: string
      dateCreated:
        type: number
        format: int64
      dateModified:
        type: number
        format: int64
      dateStateChanged:
        type: number
        format: int64
      displayName:
        type: string
      description:
        type: string
      currentState:
        type: number
        format: int64
      fid:
        type: string

  ServiceIncidents:
    description: Service Incidents
    properties:
      serviceIncidents:
        type: array
        items:
          $ref: '#/definitions/ServiceIncident'

  ServiceIncident:
    description: Service Incident
    allOf:
      - $ref: '#/definitions/Entity'
      - properties:
          timeStarted:
            type: number
            format: int64
          timeEnded:
            type: number
            format: int64
          serviceFid:
            type: string
          status:
            type: string
          dateCreated:
            type: number
            format: int64
          dateModified:
            type: number
            format: int64
          dateStateChanged:
            type: number
            format: int64

  IntegrationUser:
    description: Information about the user attempting to integrate
    properties:
      displayName:
        type: string
      userFid:
        type: string
      employeeFid:
        type: string
      roles:
        type: array
        description: Role Aliases
        items:
          type: string


  Reservation:
    description: Reservation
    properties:
      key:
        type: string
      application:
        type: string
      brandFid:
        type: string
      customerFid:
        type: string
      expiryTime:
        type: string
      relatedFids:
        type: array
        items:
          type: string

  Reservations:
    description: Reservations
    properties:
      reservations:
        type: array
        items:
          $ref: '#/definitions/Reservation'

  #Payloads

  AddressPayload:
    description: Address Payload
    properties:
      displayName:
        type: string
      description:
        type: string
      address1:
        type: string
      address2:
        type: string
      address3:
        type: string
      town:
        type: string
      county:
        type: string
      country:
        type: string
      postalCode:
        type: string
      setAsDefault:
        type: boolean

  ServiceAccountCredentialsPayload:
    description: Service credentials used to verify ownership of a user account
    properties:
      id:
        type: string
      key:
        type: string
    required:
      - id
      - key

  InvoiceCreditNotePayload:
    properties:
      displayName:
        type: string
      description:
        type: string
      chargeRequestFid:
        description: Charge Request FID
        type: string
      creditAmountType:
        $ref: '#/definitions/creditAmountType'
      amount:
        type: number
        format: float
      reasonFid:
        description: Reason FID
        type: string
      currency:
        description: Currency
        type: string
    required:
      - creditAmountType
      - amount

  ModifySubscriptionPayload:
    properties:
      priceFid:
        description: Price FID to modify subscription with
        type: string
      description:
        description: Description of the modify subscription
        type: string
      offerFid:
        description: Offer FID to apply to the modify order item
        type: string
      sku:
        description: SKU or SkuFid to modify subscription with
        type: string
      mode:
        $ref: '#/definitions/ModifySubscriptionMode'
    required:
      - priceFid

  OrderModifySubscriptionPayload:
    allOf:
      - $ref: '#/definitions/ModifySubscriptionPayload'
      - properties:
          sourceSubscriptionFid:
            description: FID of the subscription to modify
            type: string
          properties:
            type: object
            $ref: '#/definitions/PropertyBulkSetPayload'

  CalculateRefundPayload:
    properties:
      subscriptionRefundType:
        $ref: '#/definitions/SubscriptionRefundType'
      refundFromDate:
        description: Timestamp of when to calculate the refund from. Rounded down to the start of the day. Default to start of tomorrow
        type: number
        format: int32
      includeDetails:
        type: boolean
      withTerminationFee:
        type: boolean
    required:
      - subscriptionRefundType

  SubscriptionCancelPayload:
    properties:
      reasonFid:
        description: Reason FID
        type: string
      subscriptionRefundType:
        $ref: '#/definitions/SubscriptionRefundType'
      cancelAtNextRenewal:
        type: boolean
    required:
      - subscriptionRefundType

  keyValuePayload:
    description: Key Value Payload
    properties:
      key:
        type: string
      value:
        type: string

  Polymer:
    description: A Polymer
    allOf:
      - $ref: '#/definitions/Entity'
      - properties:
          parentFid:
            description: The Polymer Parent FID
            type: string
          createdAt:
            description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
            type: string
            format: date-time
          data:
            description: Data stored on the Po§lymer
            type: array
            items:
              type: string

  Polymers:
    description: List of Polymers
    properties:
      items:
        type: array
        description: Additional information to store
        items:
          $ref: '#/definitions/Polymer'

  CreatePolymerPayload:
    properties:
      polymerCode:
        description: Code for polymer type
        type: string
      name:
        description: Display name for this polymer
        type: string
      description:
        description: Description for this polymer
        type: string
      data:
        $ref: '#/definitions/metaData'

  RequestUploadUrlPayload:
    properties:
      filename:
        description: Attachment file name
        type: string
      filesize:
        description: Attachment file size
        type: string
      md5checksum:
        description: Attachment checksum md5
        type: string
      mimeType:
        description: Attachment mime type
        type: string

  CreateAdvertiserPayload:
    description: DEPRECATED
    properties:
      username:
        type: string
        description: Username
      email:
        type: string
        description: Email Address
      password:
        type: string
        description: Password
      type:
        $ref: '#/definitions/AdvertiserType'
      displayName:
        description: Visible Display Name
        type: string
      contactName:
        type: string
        description: Name of the person
      companyName:
        type: string
        description: Name of the company
      phone:
        description: Phone Number
        type: string
      website:
        type: string
        description: URL
      accountManagerFid:
        description: FID of an Account Manager
        type: string
      foundationFid:
        description: FID of a valid Foundation
        type: string
      brandFid:
        description: FID of a valid Brand
        type: string
    required:
      - username
      - password
      - type
      - contactName

  CreatePendingPaymentMethodPayload:
    description: Create a pending payment method
    properties:
      name:
        type: string
      accountHolder:
        type: string
      scheme:
        type: string
      token:
        type: string
      expiry:
        type: string
      brandFid:
        type: string

  CreatePublisherPayload:
    description: Payload for creating an advertiser
    properties:
      username:
        type: string
        description: Username
      email:
        type: string
        description: Email Address
      password:
        type: string
        description: Password
      type:
        $ref: '#/definitions/AdvertiserType'
      displayName:
        description: Visible Display Name
        type: string
      contactName:
        type: string
        description: Name of the person
      companyName:
        type: string
        description: Name of the company
      phone:
        description: Phone Number
        type: string
      website:
        type: string
        description: URL
      accountManagerFid:
        description: FID of an Account Manager
        type: string
      foundationFid:
        description: FID of a valid Foundation
        type: string
      brandFid:
        description: FID of a valid Brand
        type: string
    required:
      - username
      - password
      - type
      - contactName

  CreateAdvertiserCampaignPayload:
    description: DEPRECATED
    properties:
      brandFid:
        description: FID of a valid Brand
        type: string
      displayName:
        description: Visible Display Name
        type: string
    required:
      - brandFid
      - displayName

  CreatePublisherCampaignPayload:
    description: Payload for creating an publisher campaign
    properties:
      brandFid:
        description: FID of a valid Brand
        type: string
      displayName:
        description: Visible Display Name
        type: string
    required:
      - brandFid
      - displayName

  PostActionPayload:
    properties:
      transactionId:
        description: Your unique transaction ID for this event e.g. Order ID
        type: string
      transactionValue:
        description: Your unique transaction ID for this event
        type: number
        format: float
      couponCode:
        description: Coupon code used for the transaction
        type: string
      returnPixels:
        description: |
          Setting to true will return advertiser pixels for this event
        type: boolean
        default: true
      productCode:
        type: string
        description: Product Code linked to this action
      productTerm:
        type: string
        description: Product Term
      paymentMethod:
        type: string
        description: Payment method used on this transaction
      username:
        type: string
        description: Username associated with this transaction (e.g. Join)
      userAgent:
        description: User Agent of the visitors browser 'HTTP_USER_AGENT'
        type: string
      encoding:
        description: Encoding from the visitors browser 'HTTP_ACCEPT_ENCODING'
        type: string
      language:
        description: Language from visitors browser 'HTTP_ACCEPT_LANGUAGE'
        type: string
      clientIp:
        description: IP Address of the visitor
        type: string
      externalReference:
        description: External (to Fortifi) Reference for this visitor e.g. a user ID
        type: string
      brandFid:
        description: FID of a valid Brand
        type: string
      campaignHash:
        description: |
          Advertiser Campaign to track this action to (if not already locked)
        type: string
      sid1:
        type: string
        description: Advertised sub tracking ID 1
      sid2:
        type: string
        description: Advertised sub tracking ID 2
      sid3:
        type: string
        description: Advertised sub tracking ID 3
      metaData:
        $ref: '#/definitions/metaData'
      time:
        description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
        type: string
        format: date-time
      useExistingDeviceIfAvailable:
        type: boolean
        description: If an existing device exists for the visitor, prefer that over the user agent sent in this payload
      failoverVisitorId:
        description: Specify a failover visitor ID to prevent organic traffic (Recommended to leave empty)
        type: string
    required:
      - brandFid

  ReverseActionPayload:
    properties:
      userAgent:
        description: User Agent of the visitors browser 'HTTP_USER_AGENT'
        type: string
      encoding:
        description: Encoding from the visitors browser 'HTTP_ACCEPT_ENCODING'
        type: string
      language:
        description: Language from visitors browser 'HTTP_ACCEPT_LANGUAGE'
        type: string
      clientIp:
        description: IP Address of the visitor
        type: string
      externalReference:
        description: External (to Fortifi) Reference for this visitor e.g. a user ID
        type: string
      time:
        description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
        type: string
        format: date-time
      metaData:
        $ref: '#/definitions/metaData'
      sourceTransactionId:
        description: Your unique transaction ID for the event to be reversed
        type: string
      reason:
        $ref: '#/definitions/reversalReason'
      reversalAmount:
        description: Amount of revene refunded to the client from the original transaction / chargeback amount
        type: number
        format: float
      reversalId:
        description: Your unique transaction ID for this event e.g. Refund ID
        type: string
      eventId:
        description: If known, the Fortifi event ID for this visitors action
        type: string

  TicketStatusPayload:
    description: Set the ticket status
    properties:
      ticketStatus:
        $ref: '#/definitions/ticketStatus'

  CreateCustomerPayload:
    description: Payload for creating a customer
    properties:
      visitorId:
        description: Visitor ID of the visitor
        type: string
      clientIp:
        description: IP Address of the visitor
        type: string
      externalReference:
        description: External (to Fortifi) Reference e.g. your internal Unique ID
        type: string
      time:
        description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
        type: string
        format: date-time
      brandFid:
        description: FID of a valid Brand
        type: string
      currency:
        description: Currency
        type: string
      phoneNumber:
        description: Phone Number
        type: string
      email:
        type: string
        description: Email Address
      firstName:
        description: First Name
        type: string
      lastName:
        description: Last Name
        type: string
      accountManagerFid:
        description: FID of an Account Manager
        type: string
      taxNumber:
        description: VAT number
        type: string
      companyNumber:
        description: Company registration number (If customer is a company)
        type: string
      accountType:
        $ref: '#/definitions/customerAccountType'
      accountStatus:
        $ref: '#/definitions/customerAccountStatus'
      lifecycle:
        $ref: '#/definitions/customerLifecycle'
      subscriptionType:
        $ref: '#/definitions/customerSubscriptionType'
      language:
        type: string
        description: Language
      displayName:
        type: string
    required:
      - brandFid

  CreateCustomerContactPayload:
    description: Payload for creating a customer contact
    properties:
      email:
        description: Email
        type: string
      phone:
        description: Phone
        type: string
      prefix:
        description: Prefix
        type: string
      firstName:
        description: First name
        type: string
      middleNames:
        description: Middles names
        type: string
      lastName:
        description: Last name
        type: string
      suffix:
        description: Suffix
        type: string
      nickname:
        description: Nick name
        type: string
      birthday:
        description: Birthday
        type: string
      jobTitle:
        description: Job Title
        type: string
      address1:
        description: Address Line 1
        type: string
      address2:
        description: Address Line 2
        type: string
      address3:
        description: Address Line 3
        type: string
      town:
        description: Town
        type: string
      county:
        description: County
        type: string
      country:
        description: Country
        type: string
      postalCode:
        description: Post Code
        type: string
      externalReference:
        description: External Reference
        type: string
  SetCustomerLocationPayload:
    properties:
      continent:
        type: string
        description: Continent
      country:
        type: string
        description: Country
      county:
        type: string
        description: County
      city:
        type: string
        description: City
      postal:
        type: string
        description: Postal
      timezone:
        type: string
        description: Timezone
      clientIp:
        type: string
        description: Client IP Address

  SetAccountStatusPayload:
    properties:
      accountStatus:
        $ref: '#/definitions/customerAccountStatus'

  SetAccountTypePayload:
    properties:
      accountType:
        $ref: '#/definitions/customerAccountType'

  SetSubscriptionTypePayload:
    description: Subscription Type
    properties:
      subscriptionType:
        $ref: '#/definitions/customerSubscriptionType'

  PropertyValuePayload:
    description: Value Property
    properties:
      propertyValue:
        description: Property Value
        type: string

  PropertyBulkSetPayload:
    description: Set Many Properties
    properties:
      values:
        type: array
        description: Additional information to store
        items:
          $ref: '#/definitions/keyValuePayload'
      flags:
        type: array
        description: Additional information to store
        items:
          $ref: '#/definitions/keyValuePayload'
      incrementCounters:
        type: array
        description: Additional information to store
        items:
          $ref: '#/definitions/keyValuePayload'
      decrementCounters:
        type: array
        description: Additional information to store
        items:
          $ref: '#/definitions/keyValuePayload'

  ReservationPayload:
    description: Data for a reservation
    properties:
      duration:
        type: number
        format: int32
        description: Time in seconds to hold this reservation for
      relatedFids:
        type: array
        description: Related Fids
        items:
          type: string

  AvailabilityCheckPayload:
    description: Product information to check availability
    properties:
      productSku:
        type: string
      priceFid:
        type: string
      reserveKey:
        type: string
      properties:
        type: array
        description: Additional information to store
        items:
          $ref: '#/definitions/keyValuePayload'

  AvailabilityCheckResponse:
    description: Product information to check availability
    properties:
      isAvailable:
        type: boolean
      availableSkus:
        type: array
        items:
          type: string
      suggestions:
        type: array
        items:
          $ref: '#/definitions/AvailabilityCheckSuggestionResponse'

  PropertyResponse:
    description: Key Value Response
    properties:
      key:
        type: string
      value:
        type: string

  AvailabilityCheckSuggestionResponse:
    description: Suggestion for an availability check response
    properties:
      sku:
        type: string
      properties:
        type: array
        description: Properties that should be set for the sku to be available
        items:
          $ref: '#/definitions/PropertyResponse'

  AvailabilityReservePayload:
    description: Product information to reserve availability
    properties:
      productSku:
        type: string
      priceFid:
        type: string
      reserveKey:
        type: string
      reserveTtl:
        type: integer
      properties:
        type: array
        description: Additional information to store
        items:
          $ref: '#/definitions/keyValuePayload'

  AvailabilityReserveResponse:
    description: Reservation response
    properties:
      reserved:
        type: boolean

  PropertyFlagPayload:
    description: Flag Property
    properties:
      propertyValue:
        description: Property Flag Value
        type: boolean

  PropertyCounterPayload:
    description: Counter Property
    properties:
      propertyValue:
        description: Property Counter Adjustment
        type: integer
        format: int32

  TriggerActionPayload:
    properties:
      metaData:
        $ref: '#/definitions/metaData'
      time:
        description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
        type: string
        format: date-time
      alias:
        type: string
        description: Your alias for the event to be triggered
      triggerMessenger:
        type: boolean
        description: If set to true, transactional messenger chains will be triggered
      action:
        $ref: '#/definitions/MessengerActionPayload'

  MessengerActionPayload:
    properties:
      deliveryFid:
        type: string
      action:
        type: string
      userAgent:
        type: string
      language:
        type: string
      encoding:
        type: string
      clientIp:
        type: string
      os:
        type: string
      osVersion:
        type: string
      osBlended:
        type: string
      platform:
        type: string
      device:
        type: string
      client:
        type: string
      clientVersion:
        type: string
      clientBlended:
        type: string
      referrer:
        type: string
      companyFid:
        type: string
      visitorId:
        type: string
      amount:
        type: number
        format: float
      sourceType:
        type: string

  CardUpdatePayload:
    description: Update card details
    properties:
      cardHolder:
        description: Name as appears on card
        type: string
      startMonth:
        description: Start Month of the card
        type: integer
        format: int32
      startYear:
        description: Start Year of the card
        type: integer
        format: int32
      expiryMonth:
        description: Expiration Month of the card
        type: integer
        format: int32
      expiryYear:
        description: Expiration Year of the card
        type: integer
        format: int32
      issue:
        description: Issue number of the card
        type: integer
        format: int32
      addressFid:
        description: FID of an existing address to use with the card
        type: string
      addressLine1:
        description: Address Line 1 of the card
        type: string
      addressLine2:
        description: Address Line 2 of the card
        type: string
      addressLine3:
        description: Address Line 3 of the card
        type: string
      addressCity:
        description: City for the card
        type: string
      addressState:
        description: State/County of the card
        type: string
      addressCountry:
        description: Country of the card
        type: string
      addressPostal:
        description: Postal/Zip Code of the card
        type: string
      asDefault:
        type: boolean

  PaymentMethodUpdatePayload:
    description: Update payment method details
    properties:
      accountHolder:
        description: Name as appears on card/account
        type: string
      validMonth:
        description: Valid from month
        type: integer
        format: int32
      validYear:
        description: Valid from year
        type: integer
        format: int32
      expiryMonth:
        description: Expiration Month
        type: integer
        format: int32
      expiryYear:
        description: Expiration Year
        type: integer
        format: int32
      issue:
        description: Issue number
        type: integer
        format: int32
      setPrimary:
        description: Set this as the primary payment method
        type: boolean

  CreateOrderPayload:
    properties:
      displayName:
        description: Custom display name for this order
        type: string
      paymentAccountFid:
        description: FID for the payment account you wish to charge the customer through
        type: string
      brandFid:
        description: FID of a valid Brand
        type: string
      customerFid:
        type: string
        description: FID for the customer placing the order
      clientIp:
        description: IP Address of the visitor
        type: string
      userAgent:
        description: User Agent of the visitors browser 'HTTP_USER_AGENT'
        type: string
      type:
        $ref: '#/definitions/CreateOrderType'
      productPriceFids:
        type: array
        description: Add Products based on the price FIDs (For Products with multiple Prices, enter a specific Product Price Fid to add the product with that specified price)
        items:
          type: string
      products:
        type: array
        description: Add Products based on Product FIDs (For products with multiple Prices, this will  automatically select lowest price)
        items:
          $ref: '#/definitions/OrderProductPayload'
      modifySubscriptions:
        type: array
        description: Subscriptions to modify on this order
        items:
          $ref: '#/definitions/OrderModifySubscriptionPayload'
      offerFids:
        type: array
        description: Offer FIDs to apply to the order
        items:
          type: string
      chargeId:
        description: Charge ID provided by ChargeHive.com
        type: string
      externalReference:
        description: Reference for this order
        type: string
      confirm:
        type: boolean
        default: false
        description: Automatically confirm this order
      parentOrderFid:
        type: string
        description: Confirm this order only after this parent is completed
      setupPurchaseBeforePayment:
        type: boolean
        description: If set to true, this will setup purchases before payment is received
      publisher:
        $ref: '#/definitions/OrderPublisherPayload'

  TriggerOnDemandOrderPayload:
    properties:
      schedulerId:
        type: string
        description: Chargehive Scheduler ID to use
      updateCharge:
        type: string
        description: Update the charge with the latest order details and customer methods

  OrderPublisherPayload:
    properties:
      onState:
        type: string
        enum:
          - approved
          - setup
          - complete
        description: (required) Trigger the publisher action when the order gets to this state
      visitorId:
        type: string
        description: Visitor ID from the browser cookie
      userReference:
        type: string
        description: Your reference for the user (if visitor actions have been triggered before with this ID before, the visitor ID property is not required, and can be looked up by this id.
      actionKey:
        type: string
        description: (required) Marketing Action to trigger e.g. acquisition, lead
      campaignHash:
        type: string
        description: Campaign hash to allocate this action to (leave blank to use visitor ID values)
      sid1:
        type: string
        description: Sub Tracking ID 1 (leave blank to use visitor ID values)
      sid2:
        type: string
        description: Sub Tracking ID 2 (leave blank to use visitor ID values)
      sid3:
        type: string
        description: Sub Tracking ID 3 (leave blank to use visitor ID values)

  OrderProductsPayload:
    properties:
      productPriceFids:
        type: array
        description: Product price FIDs to add
        items:
          type: string
      quantityProductPriceFids:
        type: array
        description: Products to add with specified quantity
        items:
          $ref: '#/definitions/OrderProductQuantityPayload'
      namesProductPriceFids:
        type: array
        description: Products to add with display names
        items:
          $ref: '#/definitions/OrderProductDisplayNamePayload'
      products:
        type: array
        description: Products to add with display names
        items:
          $ref: '#/definitions/OrderProductPayload'
      modifySubscriptions:
        type: array
        description: Subscriptions to modify on this order
        items:
          $ref: '#/definitions/OrderModifySubscriptionPayload'

  OrderProductPayload:
    description: Product information to add to order
    properties:
      parent:
        description: Product Parent FID or reference
        type: string
      transportReference:
        description: Reference for use with parent field
        type: string
      priceFid:
        description: Product Price FID
        type: string
      offerFid:
        description: Offer FID to apply to product
        type: string
      sku:
        description: Product SKU
        type: string
      productFid:
        description: Product Fid
        type: string
      cycleTerm:
        description: Cycle Term
        type: number
        format: int32
      cycleType:
        $ref: '#/definitions/cycleTermType'
      cycle:
        description: Interval in ISO 8601 standard
        type: string
      initialTermStartDate:
        description: Custom initial term start date (Time in ISO 8601 standard e.g 2015-12-05T13:11:59Z)
        type: string
      initialTermEndDate:
        description: Custom initial term end date (Time in ISO 8601 standard e.g 2015-12-05T13:11:59Z)
        type: string
      quantity:
        type: integer
      displayName:
        type: string
      identity:
        type: string
      reservationApp:
        type: string
      reservationKey:
        type: string
      description:
        type: string
      properties:
        type: object
        $ref: '#/definitions/PropertyBulkSetPayload'

  AddOrderProductsPayload:
    allOf:
      - $ref: '#/definitions/OrderProductsPayload'

  OrderProductQuantityPayload:
    properties:
      priceFid:
        description: Price FID to modify subscription with
        type: string
      quantity:
        type: integer
        format: int64
        default: 1
    required:
      - priceFid

  OrderProductDisplayNamePayload:
    properties:
      priceFid:
        description: Price FID to modify subscription with
        type: string
      displayName:
        type: string
    required:
      - priceFid

  FinalizeOrderPayload:
    properties:
      chargeId:
        description: ChargeHive Charge ID
        type: string
      methodId:
        description: Payment Method ID
        type: string
      transactionId:
        description: Transaction ID which authorized this order
        type: string
      setupPurchaseBeforePayment:
        type: boolean
        description: If set to true, this will setup purchases before payment is received

  ConfirmOrderPayload:
    properties:
      paymentServiceFid:
        description: FID for the payment service you wish to charge the customer through
        type: string
      paymentAccountFid:
        description: FID for the payment account you wish to charge the customer through
        type: string
      paymentServiceProcessor:
        $ref: '#/definitions/PaymentServiceProcessor'
      setupPurchaseBeforePayment:
        type: boolean
        description: If set to true, this will setup purchases before payment is received
      noPreAuth:
        type: boolean
        description: If set to true, we will not pre-auth the order
        default: false

  ConfirmCardOrderPayload:
    allOf:
      - $ref: '#/definitions/ConfirmOrderPayload'
      - properties:
          cvv:
            type: string

  ConfirmPayPalOrderPayload:
    allOf:
      - $ref: '#/definitions/ConfirmOrderPayload'
      - properties:
          token:
            type: string

  VerifyOrderPayload:
    allOf:
      - $ref: '#/definitions/ConfirmOrderPayload'
      - properties:
          successUrl:
            type: string
          cancelUrl:
            type: string
          failUrl:
            type: string

  CreateTicketPayload:
    properties:
      customerEmail:
        type: string
      customerName:
        type: string
      customerFid:
        type: string
      ticketType:
        type: string
        enum:
          - generic
          - question
          - problem
          - incident
      brandFid:
        type: string
      queueFid:
        type: string
      departmentFid:
        type: string
      departmentEmail:
        type: string
      departmentName:
        type: string
      subject:
        type: string
      textBody:
        type: string
      htmlBody:
        type: string
      impact:
        type: string
        enum:
          - none
          - minor
          - moderate
          - significant
          - extensive
      urgency:
        type: string
        enum:
          - triage
          - low
          - normal
          - high
          - urgent
          - emergency
          - critical
      attachments:
        type: array
        items:
          type: string
      language:
        type: string
      accountVerificationFid:
        type: string

  TicketReplyPayload:
    properties:
      textBody:
        type: string
      htmlBody:
        type: string
      status:
        $ref: '#/definitions/ticketStatus'
      attachments:
        type: array
        items:
          type: string

  #Properties

  metaData:
    type: array
    description: Additional information to store
    items:
      $ref: '#/definitions/keyValuePayload'


  CancelFlowReasons:
    description: Cancellation Flow Reasons
    properties:
      reasons:
        type: array
        items:
          $ref: '#/definitions/CancelFlowReason'

  CancelFlowReason:
    description: Cancel Flow Reason
    allOf:
      - $ref: '#/definitions/Entity'
      - properties:
          appliesToFid:
            description: The FID of the product or product group this applies to
            type: string
          key:
            type: string
            description: the key to pass through when starting a cancel flow
          reason:
            description: The text displayed to an agent or customer
            type: string

  CancelFlowStates:
    description: Cancel Flow States
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/CancelFlowState'


  CancelFlowState:
    description: Cancel Flow State
    allOf:
      - $ref: '#/definitions/Entity'
      - properties:
          customerFid:
            type: string
          subscriptionFid:
            type: string
          initiatedByFid:
            type: string
          uniqueCode:
            type: string
          isComplete:
            type: boolean
          currentStep:
            type: string
          stepData:
            $ref: '#/definitions/CancelFunnelStep'
          choices:
            type: array
            items:
              $ref: '#/definitions/CancelFunnelDecision'

  CancelFunnelStep:
    description: Information about the current step
    properties:
      key:
        type: string
        description: Unique step key
      question:
        type: string
        description: Question to ask
      description:
        type: string
        description: More information to display regarding the question
      configuration:
        type: string
        description: any configuration to maintain within this step (json)


  CancelFunnelDecision:
    description: An available decision for a step
    properties:
      key:
        description: The decision key to post back when actioned
        type: string
      caption:
        description: Caption for this decision
        type: string

  ActionableCancelFlowPayload:
    properties:
      userAgent:
        type: string
      ip:
        type: string
      time:
        description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
        type: string
        format: date-time
      userFid:
        type: string
      existingFlowFid:
        type: string

  ActionCancelFlowPayload:
    description: Generic Response
    allOf:
      - $ref: '#/definitions/ActionableCancelFlowPayload'
      - properties:
          decisionKey:
            type: string

  StartCancelFlowPayload:
    allOf:
      - $ref: '#/definitions/ActionableCancelFlowPayload'
      - properties:
          selectorFid:
            type: string
          selectorKey:
            type: string
          cancelFunnelFid:
            type: string
          initiatedByFid:
            type: string

  CancelFlowOption:
    properties:
      key:
        type: string
      displayName:
        type: string
      type:
        type: string
        enum:
          - flag
          - value
      value:
        type: string

  CancelFlowOptions:
    properties:
      options:
        type: array
        items:
          $ref: '#/definitions/CancelFlowOption'

  CancelFlowOptionPayload:
    properties:
      key:
        type: string
      value:
        type: string

  CancelFlowOptionsPayload:
    properties:
      options:
        type: array
        items:
          $ref: '#/definitions/CancelFlowOptionPayload'

  CreateReviewPayload:
    properties:
      customerFid:
        description: Customer who submitted the review
        type: string
      displayName:
        description: Title of the Review
        type: string
      source:
        description: Source of the Review (e.g. Trustpilot, Google)
        type: string
      starRating:
        description: The Customer Rating Submitted
        type: integer
      starMax:
        description: The max rating that can be offered (Defaults to 5)
        type: integer
      review:
        description: The Review Body
        type: string
      language:
        description: The language code the Review was submitted in
        type: string
      publicUrl:
        description: The review public url
        type: string

  UpdateReviewPayload:
    properties:
      reviewFid:
        description: The Fid of the Review to update
        type: string
      displayName:
        description: Title of the Review
        type: string
      review:
        description: The Review Body
        type: string

  RetentionFlowReasons:
    description: Retention Flow Reasons
    properties:
      reasons:
        type: array
        items:
          $ref: '#/definitions/RetentionFlowReason'

  RetentionFlowReason:
    description: Retention Flow Reason
    allOf:
      - $ref: '#/definitions/Entity'
      - properties:
          appliesToFid:
            description: The FID of the product or product group this applies to
            type: string
          key:
            type: string
            description: the key to pass through when starting a cancel flow
          reason:
            description: The text displayed to an agent or customer
            type: string

  RetentionFlowStates:
    description: Retention Flow States
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/RetentionFlowState'


  RetentionFlowState:
    description: Retention Flow State
    allOf:
      - $ref: '#/definitions/Entity'
      - properties:
          customerFid:
            type: string
          subscriptionFid:
            type: string
          initiatedByFid:
            type: string
          uniqueCode:
            type: string
          isComplete:
            type: boolean
          currentStep:
            type: string
          stepData:
            $ref: '#/definitions/RetentionFunnelStep'
          choices:
            type: array
            items:
              $ref: '#/definitions/RetentionFunnelDecision'

  RetentionFunnelStep:
    description: Information about the current step
    properties:
      key:
        type: string
        description: Unique step key
      question:
        type: string
        description: Question to ask
      description:
        type: string
        description: More information to display regarding the question
      configuration:
        type: string
        description: any configuration to maintain within this step (json)


  RetentionFunnelDecision:
    description: An available decision for a step
    properties:
      key:
        description: The decision key to post back when actioned
        type: string
      caption:
        description: Caption for this decision
        type: string

  ActionableRetentionFlowPayload:
    properties:
      userAgent:
        type: string
      ip:
        type: string
      time:
        description: Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z
        type: string
        format: date-time
      userFid:
        type: string
      existingFlowFid:
        type: string

  ActionRetentionFlowPayload:
    description: Generic Response
    allOf:
      - $ref: '#/definitions/ActionableRetentionFlowPayload'
      - properties:
          decisionKey:
            type: string

  StartRetentionFlowPayload:
    allOf:
      - $ref: '#/definitions/ActionableRetentionFlowPayload'
      - properties:
          selectorFid:
            type: string
          selectorKey:
            type: string
          cancelFunnelFid:
            type: string
          initiatedByFid:
            type: string

  RetentionFlowOption:
    properties:
      key:
        type: string
      displayName:
        type: string
      type:
        type: string
        enum:
          - flag
          - value
      value:
        type: string

  RetentionFlowOptions:
    properties:
      options:
        type: array
        items:
          $ref: '#/definitions/RetentionFlowOption'

  RetentionFlowOptionPayload:
    properties:
      key:
        type: string
      value:
        type: string

  RetentionFlowOptionsPayload:
    properties:
      options:
        type: array
        items:
          $ref: '#/definitions/RetentionFlowOptionPayload'

  UpsertDevicePayload:
    properties:
      pushSource:
        type: string
        enum:
          - apple
          - firebase
      pushAuth:
        type: string
      deviceType:
        description: The type of device
        type: string
      deviceName:
        description: The name of the device
        type: string
      deviceVersion:
        description: The version of the device
        type: string
      manufacturer:
        description: The manufacturer of the device
        type: string
      os:
        description: The operating system of the device
        type: string
      osVersion:
        description: The version of the operating system
        type: string
      screenWidth:
        description: The width of the device screen
        type: integer
      screenHeight:
        description: The height of the device screen
        type: integer
      app:
        description: The application running on the device (required)
        type: string
      appVersion:
        description: The version of the application
        type: string
      customerFid:
        description: The customer FID (required one of customerFid or contactFid)
        type: string
      contactFid:
        description: The contact FID (required one of customerFid or contactFid)
        type: string
      subscriptionFid:
        description: The subscription FID
        type: string
      hardwareId:
        description: The hardware id of the device (required)
        type: string
      clientIp:
        description: IP Address of the visitor
        type: string
      optInStatus:
        description: Status of customer email opt-in
        type: string
        enum:
          - no
          - confirmed
    required:
      - hardwareId
      - app

  CreateGoogleNotificationPayload:
    properties:
      subscriptionId:
        description: The subscription ID (SKU). e.g com.company.android.year.12
        type: string
      packageName:
        description: The package name of the application e.g com.company.android
        type: string
      notificationType:
        description: The type of notification AppStoreNotificationType
        type: string
      purchaseToken:
        description: The purchase token
        type: string
      renewalDate:
        type:
          string
    required:
      - subscriptionId
      - packageName
      - notificationType
      - purchaseToken

  CreateAppleNotificationPayload:
    properties:
      subscriptionId:
        description: The subscription ID (SKU). e.g com.company.android.year.12
        type: string
      packageName:
        description: The package name of the application e.g com.company.android
        type: string
      notificationType:
        description: The type of notification AppStoreNotificationType
        type: string
      rawReceipt:
        description: The Raw Receipt
        type: string
      data:
        description: The decoded raw receipt
        type: string
      price:
        description: The price of the subscription
        type: string
      currencyCode:
        description: The currency code of the subscription
        type: string
      countryCode:
        description: The country code of the subscription
        type: string
      notificationUUID:
        description: The notification UUID
        type: string
      originalTransactionId:
        description: The original transaction ID to link receipts
        type: string
      renewalDate:
        type:
          string
    required:
      - subscriptionId
      - packageName
      - notificationType
      - notificationUUID
      - originalTransactionId
      - rawReceipt
      - price
      - currencyCode
      - countryCode

  PresetChatSessionLink:
    description: Preset Chat Session Link
    properties:
      linkUrl:
        type: string
      sessionId:
        type: string

  PresetChatSession:
    description: Preset Chat Session
    properties:
      ticketFid:
        type: string
      name:
        type: string
      email:
        type: string
      companyFid:
        type: string
      customerFid:
        type: string
      departmentFid:
        type: string
      queueFid:
        type: string
      impact:
        type: string
      urgency:
        type: string
      language:
        type: string
      topic:
        type: string
      sessionFid:
        type: string
      linkUrl:
        type: string

  CreatePresetChatSessionPayload:
    description: Create A Preset Chat session
    properties:
      ticketFid:
        type: string
      name:
        type: string
      email:
        type: string
      companyFid:
        type: string
      customerFid:
        type: string
      departmentFid:
        type: string
      queueFid:
        type: string
      impact:
        type: string
      urgency:
        type: string
      language:
        type: string
      topic:
        type: string
      domain:
        type: string
      accountVerificationFid:
        type: string
      labels:
        type: array
        items:
          $ref: '#/definitions/keyValuePayload'
      notes:
        type: array
        items:
          $ref: '#/definitions/keyValuePayload'


  CreateCommentPayload:
    description: Create a note/comment against a data-node
    properties:
      dataNodeFid:
        type: string
      colour:
        type: string
      authorFid:
        type: string
      message:
        type: string
      microtime:
        type: string

  CommentResponse:
    description: Comment/Note Response
    properties:
      dataNodeFid:
        type: string
      microtime:
        type: string
      colour:
        type: string
      authorFid:
        type: string
      message:
        type: string

  # Journey Tracking
  CreateJourneyTrackPayload:
    properties:
      dataNodeFid:
        type: string
      data:
        type: array
        items:
          type: object
          properties:
            pageTitle:
              type: string
            pageUrl:
              type: string
            referral:
              type: string

  # Account Verification
  InteractionType:
    properties:
      name:
        type: string
        enum:
          - unknown
          - voice
          - email
          - chat
          - ticket
          - meeting
          - remote
          - letter
          - social

  InteractionVerificationResponse:
    description: Interaction Verification Response
    properties:
      key:
        type: string
      question:
        type: string
      authenticationFid:
        type: string
      interactionTypes:
        type: array
        items:
          $ref: '#/definitions/InteractionType'
      isBuiltIn:
        type: string

  AccountVerificationResponse:
    description: A Verification Question Response
    properties:
      datanodeFid:
        type: string
      verified:
        type: number
      successfulVerifications:
        type: number
      failedVerifications:
        type: number
      skippedVerifications:
        type: number
      requiredVerifications:
        type: number
      verificationFid:
        type: string
      questionKey:
        type: string
      verification:
        $ref: '#/definitions/InteractionVerificationResponse'

  AccountVerificationPayload:
    description: Start a new Account Authentication
    properties:
      dataNodeFid:
        type: string
      verificationFid:
        type: string
      answer:
        type: string
      questionKey:
        type: string
      isLoggedIn:
        type: boolean

  InteractionActionPayload:
    properties:
      provider:
        type: string
      providerReference:
        type: string
      timestamp:
        type: string
      data:
        type: object

  AddInteractionMessagePayload:
    properties:
      message:
        type: string
      source:
        description: IP of the message sender
        type: string
      actionType:
        type: string
      language:
        type: string

  InteractionMessageResponse:
    properties:
      timestamp:
        type: string
      randomCode:
        type: string
      authorName:
        type: string
      userFid:
        type: string
      customerInitiated:
        type: boolean
      method:
        type: string
      source:
        type: string
      content:
        type: string
      actionType:
        type: string

  InteractionMessagesResponse:
    properties:
      messages:
        type: array
        items:
          $ref: '#/definitions/InteractionMessageResponse'

  CreateAttachmentPayload:
    properties:
      filename:
        type: string
      mimeType:
        type: string
      data:
        type: string
      externalDataURL:
        type: string
      externalDataUsername:
        type: string
      externalDataPassword:
        type: string

  UpdateInteractionPayload:
    properties:
      companyFid:
        type: string
      departmentFid:
        type: string
      queueFid:
        type: string
      interactionType:
        type: string

  StartInteractionPayload:
    allOf:
      - $ref: '#/definitions/UpdateInteractionPayload'
      - properties:
          contactFid:
            type: string
          dataNodeFid:
            type: string

  CreateInteractionInvitationPayload:
    allOf:
      - $ref: '#/definitions/StartInteractionPayload'
      - properties:
          topic:
            type: string
          earliestStartTime:
            type: string
          expiryTime:
            type: string
          journeyTrackingFid:
            type: string
          edges:
            type: string
          verificationFid:
            type: string
          initialMessage:
            type: string
          language:
            type: string
          context:
            type: object
            additionalProperties: true
          notes:
            type: array
            items:
              $ref: '#/definitions/keyValuePayload'

  InteractionInviteStatusResponse:
    properties:
      inviteCode:
        type: string
      waitTime:
        type: string
      earliestStartTime:
        type: string
      expiryTime:
        type: string
      accepted:
        type: boolean
      provider:
        type: string
      providerReference:
        type: string
      interactionFid:
        type: string

  InteractionResponse:
    properties:
      provider:
        type: string
      providerReference:
        type: string
      fid:
        type: string
      topic:
        type: string
      agentName:
        type: string
      status:
        type: string
      feedback:
        type: number
      connectedAgentFid:
        type: string

  FindTransactionPayload:
    properties:
      paymentMethod:
        type: string
      last4:
        type: string
      first6:
        type: string
      nameOnCard:
        type: string
      amount:
        type: string
      currency:
        type: string
      date:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      emailAddress:
        type: string
      postCode:
        type: string
      country:
        type: string
      paypalEmail:
        type: string
      companyFid:
        type: string

  FindTransactionResponse:
    properties:
      customerFid:
        type: string
      fullName:
        type: string
      email:
        type: string
      city:
        type: string
      country:
        type: string
      items:
        type: array
        items:
          $ref: '#/definitions/InvoiceItem'
      paymentScheme:
        type: string
      paymentLast4:
        type: string
      paymentExp:
        type: string
      currency:
        type: string
      totalAmount:
        type: string
      date:
        type: string
      taxes:
        type: array
        items:
          $ref: '#/definitions/InvoiceTaxItem'
      discounts:
        type: array
        items:
          $ref: '#/definitions/InvoiceDiscountItem'
      invoiceFid:
        type: string
      transactionFid:
        type: string
      subscriptionFid:
        type: string
  AddTicketNotePayload:
    properties:
      notes:
        type: array
        items:
          $ref: '#/definitions/keyValuePayload'

  SentEmail:
    properties:
      campaignFid:
        type: string
      companyFid:
        type: string
      messageFid:
        type: string
      bounced:
        type: boolean
      opened:
        type: boolean
      clicked:
        type: boolean
      complained:
        type: boolean
      subject:
        type: string
      sentTimestamp:
        type: string
      recipientEmails:
        type: array
        items:
          type: string


  SentEmails:
    description: Sent Emails
    properties:
      emails:
        type: array
        items:
          $ref: '#/definitions/SentEmail'

  CustomerInteraction:
    properties:
      initiatedTime:
        type: string
      disconnectTime:
        type: string
      topic:
        type: string
      departmentFid:
        type: string
      queueFid:
        type: string
      fid:
        type: string
      type:
        type: string

  CustomerInteractions:
    properties:
      chats:
        type: array
        items:
          $ref: '#/definitions/CustomerInteraction'

  CreateCancelRequestPayload:
    properties:
      userIp:
        type: string
      userAgent:
        type: string
      cancelType:
        type: string
        enum:
          - disable_auto_renew
          - turn_off_auto_charge
          - terminate
      reason:
        type: string
      isAuthed:
        type: boolean
      authenticatedBy:
        type: string
      note:
        type: string

